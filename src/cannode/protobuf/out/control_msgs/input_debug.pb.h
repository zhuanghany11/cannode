// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: control_msgs/input_debug.proto
// Protobuf C++ Version: 5.28.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_control_5fmsgs_2finput_5fdebug_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_control_5fmsgs_2finput_5fdebug_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "common_msgs/basic_msgs/header.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_control_5fmsgs_2finput_5fdebug_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_control_5fmsgs_2finput_5fdebug_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_control_5fmsgs_2finput_5fdebug_2eproto;
namespace control {
class InputDebug;
struct InputDebugDefaultTypeInternal;
extern InputDebugDefaultTypeInternal _InputDebug_default_instance_;
}  // namespace control
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace control {

// ===================================================================


// -------------------------------------------------------------------

class InputDebug final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.InputDebug) */ {
 public:
  inline InputDebug() : InputDebug(nullptr) {}
  ~InputDebug() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InputDebug(
      ::google::protobuf::internal::ConstantInitialized);

  inline InputDebug(const InputDebug& from) : InputDebug(nullptr, from) {}
  inline InputDebug(InputDebug&& from) noexcept
      : InputDebug(nullptr, std::move(from)) {}
  inline InputDebug& operator=(const InputDebug& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputDebug& operator=(InputDebug&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InputDebug& default_instance() {
    return *internal_default_instance();
  }
  static inline const InputDebug* internal_default_instance() {
    return reinterpret_cast<const InputDebug*>(
        &_InputDebug_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(InputDebug& a, InputDebug& b) { a.Swap(&b); }
  inline void Swap(InputDebug* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InputDebug* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InputDebug* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<InputDebug>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InputDebug& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InputDebug& from) { InputDebug::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(InputDebug* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.InputDebug"; }

 protected:
  explicit InputDebug(::google::protobuf::Arena* arena);
  InputDebug(::google::protobuf::Arena* arena, const InputDebug& from);
  InputDebug(::google::protobuf::Arena* arena, InputDebug&& from) noexcept
      : InputDebug(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLocalizationHeaderFieldNumber = 1,
    kCanbusHeaderFieldNumber = 2,
    kTrajectoryHeaderFieldNumber = 3,
    kLatestReplanTrajectoryHeaderFieldNumber = 4,
  };
  // optional .control.common.Header localization_header = 1;
  bool has_localization_header() const;
  void clear_localization_header() ;
  const ::control::common::Header& localization_header() const;
  PROTOBUF_NODISCARD ::control::common::Header* release_localization_header();
  ::control::common::Header* mutable_localization_header();
  void set_allocated_localization_header(::control::common::Header* value);
  void unsafe_arena_set_allocated_localization_header(::control::common::Header* value);
  ::control::common::Header* unsafe_arena_release_localization_header();

  private:
  const ::control::common::Header& _internal_localization_header() const;
  ::control::common::Header* _internal_mutable_localization_header();

  public:
  // optional .control.common.Header canbus_header = 2;
  bool has_canbus_header() const;
  void clear_canbus_header() ;
  const ::control::common::Header& canbus_header() const;
  PROTOBUF_NODISCARD ::control::common::Header* release_canbus_header();
  ::control::common::Header* mutable_canbus_header();
  void set_allocated_canbus_header(::control::common::Header* value);
  void unsafe_arena_set_allocated_canbus_header(::control::common::Header* value);
  ::control::common::Header* unsafe_arena_release_canbus_header();

  private:
  const ::control::common::Header& _internal_canbus_header() const;
  ::control::common::Header* _internal_mutable_canbus_header();

  public:
  // optional .control.common.Header trajectory_header = 3;
  bool has_trajectory_header() const;
  void clear_trajectory_header() ;
  const ::control::common::Header& trajectory_header() const;
  PROTOBUF_NODISCARD ::control::common::Header* release_trajectory_header();
  ::control::common::Header* mutable_trajectory_header();
  void set_allocated_trajectory_header(::control::common::Header* value);
  void unsafe_arena_set_allocated_trajectory_header(::control::common::Header* value);
  ::control::common::Header* unsafe_arena_release_trajectory_header();

  private:
  const ::control::common::Header& _internal_trajectory_header() const;
  ::control::common::Header* _internal_mutable_trajectory_header();

  public:
  // optional .control.common.Header latest_replan_trajectory_header = 4;
  bool has_latest_replan_trajectory_header() const;
  void clear_latest_replan_trajectory_header() ;
  const ::control::common::Header& latest_replan_trajectory_header() const;
  PROTOBUF_NODISCARD ::control::common::Header* release_latest_replan_trajectory_header();
  ::control::common::Header* mutable_latest_replan_trajectory_header();
  void set_allocated_latest_replan_trajectory_header(::control::common::Header* value);
  void unsafe_arena_set_allocated_latest_replan_trajectory_header(::control::common::Header* value);
  ::control::common::Header* unsafe_arena_release_latest_replan_trajectory_header();

  private:
  const ::control::common::Header& _internal_latest_replan_trajectory_header() const;
  ::control::common::Header* _internal_mutable_latest_replan_trajectory_header();

  public:
  // @@protoc_insertion_point(class_scope:control.InputDebug)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 4,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_InputDebug_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InputDebug& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::control::common::Header* localization_header_;
    ::control::common::Header* canbus_header_;
    ::control::common::Header* trajectory_header_;
    ::control::common::Header* latest_replan_trajectory_header_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fmsgs_2finput_5fdebug_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// InputDebug

// optional .control.common.Header localization_header = 1;
inline bool InputDebug::has_localization_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.localization_header_ != nullptr);
  return value;
}
inline const ::control::common::Header& InputDebug::_internal_localization_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::control::common::Header* p = _impl_.localization_header_;
  return p != nullptr ? *p : reinterpret_cast<const ::control::common::Header&>(::control::common::_Header_default_instance_);
}
inline const ::control::common::Header& InputDebug::localization_header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.InputDebug.localization_header)
  return _internal_localization_header();
}
inline void InputDebug::unsafe_arena_set_allocated_localization_header(::control::common::Header* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.localization_header_);
  }
  _impl_.localization_header_ = reinterpret_cast<::control::common::Header*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control.InputDebug.localization_header)
}
inline ::control::common::Header* InputDebug::release_localization_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::control::common::Header* released = _impl_.localization_header_;
  _impl_.localization_header_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::control::common::Header* InputDebug::unsafe_arena_release_localization_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control.InputDebug.localization_header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::control::common::Header* temp = _impl_.localization_header_;
  _impl_.localization_header_ = nullptr;
  return temp;
}
inline ::control::common::Header* InputDebug::_internal_mutable_localization_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.localization_header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::control::common::Header>(GetArena());
    _impl_.localization_header_ = reinterpret_cast<::control::common::Header*>(p);
  }
  return _impl_.localization_header_;
}
inline ::control::common::Header* InputDebug::mutable_localization_header() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::control::common::Header* _msg = _internal_mutable_localization_header();
  // @@protoc_insertion_point(field_mutable:control.InputDebug.localization_header)
  return _msg;
}
inline void InputDebug::set_allocated_localization_header(::control::common::Header* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.localization_header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.localization_header_ = reinterpret_cast<::control::common::Header*>(value);
  // @@protoc_insertion_point(field_set_allocated:control.InputDebug.localization_header)
}

// optional .control.common.Header canbus_header = 2;
inline bool InputDebug::has_canbus_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.canbus_header_ != nullptr);
  return value;
}
inline const ::control::common::Header& InputDebug::_internal_canbus_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::control::common::Header* p = _impl_.canbus_header_;
  return p != nullptr ? *p : reinterpret_cast<const ::control::common::Header&>(::control::common::_Header_default_instance_);
}
inline const ::control::common::Header& InputDebug::canbus_header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.InputDebug.canbus_header)
  return _internal_canbus_header();
}
inline void InputDebug::unsafe_arena_set_allocated_canbus_header(::control::common::Header* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.canbus_header_);
  }
  _impl_.canbus_header_ = reinterpret_cast<::control::common::Header*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control.InputDebug.canbus_header)
}
inline ::control::common::Header* InputDebug::release_canbus_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::control::common::Header* released = _impl_.canbus_header_;
  _impl_.canbus_header_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::control::common::Header* InputDebug::unsafe_arena_release_canbus_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control.InputDebug.canbus_header)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::control::common::Header* temp = _impl_.canbus_header_;
  _impl_.canbus_header_ = nullptr;
  return temp;
}
inline ::control::common::Header* InputDebug::_internal_mutable_canbus_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.canbus_header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::control::common::Header>(GetArena());
    _impl_.canbus_header_ = reinterpret_cast<::control::common::Header*>(p);
  }
  return _impl_.canbus_header_;
}
inline ::control::common::Header* InputDebug::mutable_canbus_header() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::control::common::Header* _msg = _internal_mutable_canbus_header();
  // @@protoc_insertion_point(field_mutable:control.InputDebug.canbus_header)
  return _msg;
}
inline void InputDebug::set_allocated_canbus_header(::control::common::Header* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.canbus_header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.canbus_header_ = reinterpret_cast<::control::common::Header*>(value);
  // @@protoc_insertion_point(field_set_allocated:control.InputDebug.canbus_header)
}

// optional .control.common.Header trajectory_header = 3;
inline bool InputDebug::has_trajectory_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.trajectory_header_ != nullptr);
  return value;
}
inline const ::control::common::Header& InputDebug::_internal_trajectory_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::control::common::Header* p = _impl_.trajectory_header_;
  return p != nullptr ? *p : reinterpret_cast<const ::control::common::Header&>(::control::common::_Header_default_instance_);
}
inline const ::control::common::Header& InputDebug::trajectory_header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.InputDebug.trajectory_header)
  return _internal_trajectory_header();
}
inline void InputDebug::unsafe_arena_set_allocated_trajectory_header(::control::common::Header* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.trajectory_header_);
  }
  _impl_.trajectory_header_ = reinterpret_cast<::control::common::Header*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control.InputDebug.trajectory_header)
}
inline ::control::common::Header* InputDebug::release_trajectory_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::control::common::Header* released = _impl_.trajectory_header_;
  _impl_.trajectory_header_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::control::common::Header* InputDebug::unsafe_arena_release_trajectory_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control.InputDebug.trajectory_header)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::control::common::Header* temp = _impl_.trajectory_header_;
  _impl_.trajectory_header_ = nullptr;
  return temp;
}
inline ::control::common::Header* InputDebug::_internal_mutable_trajectory_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.trajectory_header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::control::common::Header>(GetArena());
    _impl_.trajectory_header_ = reinterpret_cast<::control::common::Header*>(p);
  }
  return _impl_.trajectory_header_;
}
inline ::control::common::Header* InputDebug::mutable_trajectory_header() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::control::common::Header* _msg = _internal_mutable_trajectory_header();
  // @@protoc_insertion_point(field_mutable:control.InputDebug.trajectory_header)
  return _msg;
}
inline void InputDebug::set_allocated_trajectory_header(::control::common::Header* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.trajectory_header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.trajectory_header_ = reinterpret_cast<::control::common::Header*>(value);
  // @@protoc_insertion_point(field_set_allocated:control.InputDebug.trajectory_header)
}

// optional .control.common.Header latest_replan_trajectory_header = 4;
inline bool InputDebug::has_latest_replan_trajectory_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.latest_replan_trajectory_header_ != nullptr);
  return value;
}
inline const ::control::common::Header& InputDebug::_internal_latest_replan_trajectory_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::control::common::Header* p = _impl_.latest_replan_trajectory_header_;
  return p != nullptr ? *p : reinterpret_cast<const ::control::common::Header&>(::control::common::_Header_default_instance_);
}
inline const ::control::common::Header& InputDebug::latest_replan_trajectory_header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.InputDebug.latest_replan_trajectory_header)
  return _internal_latest_replan_trajectory_header();
}
inline void InputDebug::unsafe_arena_set_allocated_latest_replan_trajectory_header(::control::common::Header* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.latest_replan_trajectory_header_);
  }
  _impl_.latest_replan_trajectory_header_ = reinterpret_cast<::control::common::Header*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control.InputDebug.latest_replan_trajectory_header)
}
inline ::control::common::Header* InputDebug::release_latest_replan_trajectory_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::control::common::Header* released = _impl_.latest_replan_trajectory_header_;
  _impl_.latest_replan_trajectory_header_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::control::common::Header* InputDebug::unsafe_arena_release_latest_replan_trajectory_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control.InputDebug.latest_replan_trajectory_header)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::control::common::Header* temp = _impl_.latest_replan_trajectory_header_;
  _impl_.latest_replan_trajectory_header_ = nullptr;
  return temp;
}
inline ::control::common::Header* InputDebug::_internal_mutable_latest_replan_trajectory_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.latest_replan_trajectory_header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::control::common::Header>(GetArena());
    _impl_.latest_replan_trajectory_header_ = reinterpret_cast<::control::common::Header*>(p);
  }
  return _impl_.latest_replan_trajectory_header_;
}
inline ::control::common::Header* InputDebug::mutable_latest_replan_trajectory_header() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::control::common::Header* _msg = _internal_mutable_latest_replan_trajectory_header();
  // @@protoc_insertion_point(field_mutable:control.InputDebug.latest_replan_trajectory_header)
  return _msg;
}
inline void InputDebug::set_allocated_latest_replan_trajectory_header(::control::common::Header* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.latest_replan_trajectory_header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.latest_replan_trajectory_header_ = reinterpret_cast<::control::common::Header*>(value);
  // @@protoc_insertion_point(field_set_allocated:control.InputDebug.latest_replan_trajectory_header)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace control


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_control_5fmsgs_2finput_5fdebug_2eproto_2epb_2eh
