// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: common_msgs/basic_msgs/geometry.proto
// Protobuf C++ Version: 5.28.0-dev

#include "common_msgs/basic_msgs/geometry.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace control {
namespace common {

inline constexpr Quaternion::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        qx_{std::numeric_limits<double>::quiet_NaN()},
        qy_{std::numeric_limits<double>::quiet_NaN()},
        qz_{std::numeric_limits<double>::quiet_NaN()},
        qw_{std::numeric_limits<double>::quiet_NaN()} {}

template <typename>
PROTOBUF_CONSTEXPR Quaternion::Quaternion(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QuaternionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuaternionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuaternionDefaultTypeInternal() {}
  union {
    Quaternion _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuaternionDefaultTypeInternal _Quaternion_default_instance_;

inline constexpr PointLLH::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        height_{0},
        lon_{std::numeric_limits<double>::quiet_NaN()},
        lat_{std::numeric_limits<double>::quiet_NaN()} {}

template <typename>
PROTOBUF_CONSTEXPR PointLLH::PointLLH(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PointLLHDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PointLLHDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PointLLHDefaultTypeInternal() {}
  union {
    PointLLH _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PointLLHDefaultTypeInternal _PointLLH_default_instance_;

inline constexpr PointENU::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        z_{0},
        x_{std::numeric_limits<double>::quiet_NaN()},
        y_{std::numeric_limits<double>::quiet_NaN()} {}

template <typename>
PROTOBUF_CONSTEXPR PointENU::PointENU(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PointENUDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PointENUDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PointENUDefaultTypeInternal() {}
  union {
    PointENU _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PointENUDefaultTypeInternal _PointENU_default_instance_;

inline constexpr Point3D::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        x_{std::numeric_limits<double>::quiet_NaN()},
        y_{std::numeric_limits<double>::quiet_NaN()},
        z_{std::numeric_limits<double>::quiet_NaN()} {}

template <typename>
PROTOBUF_CONSTEXPR Point3D::Point3D(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Point3DDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Point3DDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Point3DDefaultTypeInternal() {}
  union {
    Point3D _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Point3DDefaultTypeInternal _Point3D_default_instance_;

inline constexpr Point2D::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        x_{std::numeric_limits<double>::quiet_NaN()},
        y_{std::numeric_limits<double>::quiet_NaN()} {}

template <typename>
PROTOBUF_CONSTEXPR Point2D::Point2D(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Point2DDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Point2DDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Point2DDefaultTypeInternal() {}
  union {
    Point2D _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Point2DDefaultTypeInternal _Point2D_default_instance_;

inline constexpr Polygon::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : point_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Polygon::Polygon(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PolygonDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolygonDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolygonDefaultTypeInternal() {}
  union {
    Polygon _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolygonDefaultTypeInternal _Polygon_default_instance_;
}  // namespace common
}  // namespace control
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto = nullptr;
const ::uint32_t
    TableStruct_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::control::common::PointENU, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::common::PointENU, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::common::PointENU, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::control::common::PointENU, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::control::common::PointENU, _impl_.z_),
        1,
        2,
        0,
        PROTOBUF_FIELD_OFFSET(::control::common::PointLLH, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::common::PointLLH, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::common::PointLLH, _impl_.lon_),
        PROTOBUF_FIELD_OFFSET(::control::common::PointLLH, _impl_.lat_),
        PROTOBUF_FIELD_OFFSET(::control::common::PointLLH, _impl_.height_),
        1,
        2,
        0,
        PROTOBUF_FIELD_OFFSET(::control::common::Point2D, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::common::Point2D, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::common::Point2D, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::control::common::Point2D, _impl_.y_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::control::common::Point3D, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::common::Point3D, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::common::Point3D, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::control::common::Point3D, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::control::common::Point3D, _impl_.z_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::control::common::Quaternion, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::common::Quaternion, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::common::Quaternion, _impl_.qx_),
        PROTOBUF_FIELD_OFFSET(::control::common::Quaternion, _impl_.qy_),
        PROTOBUF_FIELD_OFFSET(::control::common::Quaternion, _impl_.qz_),
        PROTOBUF_FIELD_OFFSET(::control::common::Quaternion, _impl_.qw_),
        0,
        1,
        2,
        3,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::control::common::Polygon, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::common::Polygon, _impl_.point_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::control::common::PointENU)},
        {14, 25, -1, sizeof(::control::common::PointLLH)},
        {28, 38, -1, sizeof(::control::common::Point2D)},
        {40, 51, -1, sizeof(::control::common::Point3D)},
        {54, 66, -1, sizeof(::control::common::Quaternion)},
        {70, -1, -1, sizeof(::control::common::Polygon)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::control::common::_PointENU_default_instance_._instance,
    &::control::common::_PointLLH_default_instance_._instance,
    &::control::common::_Point2D_default_instance_._instance,
    &::control::common::_Point3D_default_instance_._instance,
    &::control::common::_Quaternion_default_instance_._instance,
    &::control::common::_Polygon_default_instance_._instance,
};
const char descriptor_table_protodef_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n%common_msgs/basic_msgs/geometry.proto\022"
    "\016control.common\"8\n\010PointENU\022\016\n\001x\030\001 \001(\001:\003"
    "nan\022\016\n\001y\030\002 \001(\001:\003nan\022\014\n\001z\030\003 \001(\001:\0010\"A\n\010Poi"
    "ntLLH\022\020\n\003lon\030\001 \001(\001:\003nan\022\020\n\003lat\030\002 \001(\001:\003na"
    "n\022\021\n\006height\030\003 \001(\001:\0010\")\n\007Point2D\022\016\n\001x\030\001 \001"
    "(\001:\003nan\022\016\n\001y\030\002 \001(\001:\003nan\"9\n\007Point3D\022\016\n\001x\030"
    "\001 \001(\001:\003nan\022\016\n\001y\030\002 \001(\001:\003nan\022\016\n\001z\030\003 \001(\001:\003n"
    "an\"P\n\nQuaternion\022\017\n\002qx\030\001 \001(\001:\003nan\022\017\n\002qy\030"
    "\002 \001(\001:\003nan\022\017\n\002qz\030\003 \001(\001:\003nan\022\017\n\002qw\030\004 \001(\001:"
    "\003nan\"1\n\007Polygon\022&\n\005point\030\001 \003(\0132\027.control"
    ".common.Point3D"
};
static ::absl::once_flag descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto = {
    false,
    false,
    415,
    descriptor_table_protodef_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto,
    "common_msgs/basic_msgs/geometry.proto",
    &descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto_once,
    nullptr,
    0,
    6,
    schemas,
    file_default_instances,
    TableStruct_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto::offsets,
    file_level_enum_descriptors_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto,
    file_level_service_descriptors_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto,
};
namespace control {
namespace common {
// ===================================================================

class PointENU::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PointENU>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PointENU, _impl_._has_bits_);
};

PointENU::PointENU(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.common.PointENU)
}
PointENU::PointENU(
    ::google::protobuf::Arena* arena, const PointENU& from)
    : PointENU(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PointENU::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        x_{std::numeric_limits<double>::quiet_NaN()},
        y_{std::numeric_limits<double>::quiet_NaN()} {}

inline void PointENU::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.z_ = {};
}
PointENU::~PointENU() {
  // @@protoc_insertion_point(destructor:control.common.PointENU)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PointENU::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PointENU::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &PointENU::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PointENU>(),
            ::google::protobuf::Message::GetNewImpl<PointENU>(),
            ::google::protobuf::Message::GetClearImpl<PointENU>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<PointENU>(),
                ::google::protobuf::Message::GetSerializeImpl<PointENU>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PointENU, _impl_._cached_size_),
            false,
        },
        &PointENU::kDescriptorMethods,
        &descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PointENU::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> PointENU::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PointENU, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PointENU_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::common::PointENU>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional double x = 1 [default = nan];
    {::_pbi::TcParser::FastF64S1,
     {9, 1, 0, PROTOBUF_FIELD_OFFSET(PointENU, _impl_.x_)}},
    // optional double y = 2 [default = nan];
    {::_pbi::TcParser::FastF64S1,
     {17, 2, 0, PROTOBUF_FIELD_OFFSET(PointENU, _impl_.y_)}},
    // optional double z = 3 [default = 0];
    {::_pbi::TcParser::FastF64S1,
     {25, 0, 0, PROTOBUF_FIELD_OFFSET(PointENU, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional double x = 1 [default = nan];
    {PROTOBUF_FIELD_OFFSET(PointENU, _impl_.x_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double y = 2 [default = nan];
    {PROTOBUF_FIELD_OFFSET(PointENU, _impl_.y_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double z = 3 [default = 0];
    {PROTOBUF_FIELD_OFFSET(PointENU, _impl_.z_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PointENU::Clear() {
// @@protoc_insertion_point(message_clear_start:control.common.PointENU)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    _impl_.z_ = 0;
    _impl_.x_ = std::numeric_limits<double>::quiet_NaN();
    _impl_.y_ = std::numeric_limits<double>::quiet_NaN();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PointENU::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.common.PointENU)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional double x = 1 [default = nan];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_x(), target);
  }

  // optional double y = 2 [default = nan];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_y(), target);
  }

  // optional double z = 3 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.common.PointENU)
  return target;
}

::size_t PointENU::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.common.PointENU)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional double z = 3 [default = 0];
    if (cached_has_bits & 0x00000001u) {
      total_size += 9;
    }
    // optional double x = 1 [default = nan];
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }
    // optional double y = 2 [default = nan];
    if (cached_has_bits & 0x00000004u) {
      total_size += 9;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void PointENU::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PointENU*>(&to_msg);
  auto& from = static_cast<const PointENU&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.common.PointENU)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.z_ = from._impl_.z_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.x_ = from._impl_.x_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.y_ = from._impl_.y_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PointENU::CopyFrom(const PointENU& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.common.PointENU)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PointENU::InternalSwap(PointENU* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PointENU, _impl_.y_)
      + sizeof(PointENU::_impl_.y_)
      - PROTOBUF_FIELD_OFFSET(PointENU, _impl_.z_)>(
          reinterpret_cast<char*>(&_impl_.z_),
          reinterpret_cast<char*>(&other->_impl_.z_));
}

::google::protobuf::Metadata PointENU::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PointLLH::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PointLLH>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PointLLH, _impl_._has_bits_);
};

PointLLH::PointLLH(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.common.PointLLH)
}
PointLLH::PointLLH(
    ::google::protobuf::Arena* arena, const PointLLH& from)
    : PointLLH(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PointLLH::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        lon_{std::numeric_limits<double>::quiet_NaN()},
        lat_{std::numeric_limits<double>::quiet_NaN()} {}

inline void PointLLH::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.height_ = {};
}
PointLLH::~PointLLH() {
  // @@protoc_insertion_point(destructor:control.common.PointLLH)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PointLLH::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PointLLH::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &PointLLH::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PointLLH>(),
            ::google::protobuf::Message::GetNewImpl<PointLLH>(),
            ::google::protobuf::Message::GetClearImpl<PointLLH>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<PointLLH>(),
                ::google::protobuf::Message::GetSerializeImpl<PointLLH>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PointLLH, _impl_._cached_size_),
            false,
        },
        &PointLLH::kDescriptorMethods,
        &descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PointLLH::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> PointLLH::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PointLLH, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PointLLH_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::common::PointLLH>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional double lon = 1 [default = nan];
    {::_pbi::TcParser::FastF64S1,
     {9, 1, 0, PROTOBUF_FIELD_OFFSET(PointLLH, _impl_.lon_)}},
    // optional double lat = 2 [default = nan];
    {::_pbi::TcParser::FastF64S1,
     {17, 2, 0, PROTOBUF_FIELD_OFFSET(PointLLH, _impl_.lat_)}},
    // optional double height = 3 [default = 0];
    {::_pbi::TcParser::FastF64S1,
     {25, 0, 0, PROTOBUF_FIELD_OFFSET(PointLLH, _impl_.height_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional double lon = 1 [default = nan];
    {PROTOBUF_FIELD_OFFSET(PointLLH, _impl_.lon_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double lat = 2 [default = nan];
    {PROTOBUF_FIELD_OFFSET(PointLLH, _impl_.lat_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double height = 3 [default = 0];
    {PROTOBUF_FIELD_OFFSET(PointLLH, _impl_.height_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PointLLH::Clear() {
// @@protoc_insertion_point(message_clear_start:control.common.PointLLH)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    _impl_.height_ = 0;
    _impl_.lon_ = std::numeric_limits<double>::quiet_NaN();
    _impl_.lat_ = std::numeric_limits<double>::quiet_NaN();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PointLLH::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.common.PointLLH)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional double lon = 1 [default = nan];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_lon(), target);
  }

  // optional double lat = 2 [default = nan];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_lat(), target);
  }

  // optional double height = 3 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.common.PointLLH)
  return target;
}

::size_t PointLLH::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.common.PointLLH)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional double height = 3 [default = 0];
    if (cached_has_bits & 0x00000001u) {
      total_size += 9;
    }
    // optional double lon = 1 [default = nan];
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }
    // optional double lat = 2 [default = nan];
    if (cached_has_bits & 0x00000004u) {
      total_size += 9;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void PointLLH::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PointLLH*>(&to_msg);
  auto& from = static_cast<const PointLLH&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.common.PointLLH)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.height_ = from._impl_.height_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.lon_ = from._impl_.lon_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.lat_ = from._impl_.lat_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PointLLH::CopyFrom(const PointLLH& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.common.PointLLH)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PointLLH::InternalSwap(PointLLH* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PointLLH, _impl_.lat_)
      + sizeof(PointLLH::_impl_.lat_)
      - PROTOBUF_FIELD_OFFSET(PointLLH, _impl_.height_)>(
          reinterpret_cast<char*>(&_impl_.height_),
          reinterpret_cast<char*>(&other->_impl_.height_));
}

::google::protobuf::Metadata PointLLH::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Point2D::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Point2D>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Point2D, _impl_._has_bits_);
};

Point2D::Point2D(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.common.Point2D)
}
Point2D::Point2D(
    ::google::protobuf::Arena* arena, const Point2D& from)
    : Point2D(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Point2D::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        x_{std::numeric_limits<double>::quiet_NaN()},
        y_{std::numeric_limits<double>::quiet_NaN()} {}

inline void Point2D::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Point2D::~Point2D() {
  // @@protoc_insertion_point(destructor:control.common.Point2D)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Point2D::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Point2D::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Point2D::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Point2D>(),
            ::google::protobuf::Message::GetNewImpl<Point2D>(),
            ::google::protobuf::Message::GetClearImpl<Point2D>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<Point2D>(),
                ::google::protobuf::Message::GetSerializeImpl<Point2D>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Point2D, _impl_._cached_size_),
            false,
        },
        &Point2D::kDescriptorMethods,
        &descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Point2D::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Point2D::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Point2D, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Point2D_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::common::Point2D>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional double y = 2 [default = nan];
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(Point2D, _impl_.y_)}},
    // optional double x = 1 [default = nan];
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(Point2D, _impl_.x_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional double x = 1 [default = nan];
    {PROTOBUF_FIELD_OFFSET(Point2D, _impl_.x_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double y = 2 [default = nan];
    {PROTOBUF_FIELD_OFFSET(Point2D, _impl_.y_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Point2D::Clear() {
// @@protoc_insertion_point(message_clear_start:control.common.Point2D)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    _impl_.x_ = std::numeric_limits<double>::quiet_NaN();
    _impl_.y_ = std::numeric_limits<double>::quiet_NaN();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Point2D::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.common.Point2D)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional double x = 1 [default = nan];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_x(), target);
  }

  // optional double y = 2 [default = nan];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_y(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.common.Point2D)
  return target;
}

::size_t Point2D::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.common.Point2D)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional double x = 1 [default = nan];
    if (cached_has_bits & 0x00000001u) {
      total_size += 9;
    }
    // optional double y = 2 [default = nan];
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void Point2D::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Point2D*>(&to_msg);
  auto& from = static_cast<const Point2D&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.common.Point2D)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.x_ = from._impl_.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.y_ = from._impl_.y_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Point2D::CopyFrom(const Point2D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.common.Point2D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Point2D::InternalSwap(Point2D* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Point2D, _impl_.y_)
      + sizeof(Point2D::_impl_.y_)
      - PROTOBUF_FIELD_OFFSET(Point2D, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Point2D::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Point3D::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Point3D>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Point3D, _impl_._has_bits_);
};

Point3D::Point3D(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.common.Point3D)
}
Point3D::Point3D(
    ::google::protobuf::Arena* arena, const Point3D& from)
    : Point3D(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Point3D::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        x_{std::numeric_limits<double>::quiet_NaN()},
        y_{std::numeric_limits<double>::quiet_NaN()},
        z_{std::numeric_limits<double>::quiet_NaN()} {}

inline void Point3D::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Point3D::~Point3D() {
  // @@protoc_insertion_point(destructor:control.common.Point3D)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Point3D::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Point3D::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Point3D::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Point3D>(),
            ::google::protobuf::Message::GetNewImpl<Point3D>(),
            ::google::protobuf::Message::GetClearImpl<Point3D>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<Point3D>(),
                ::google::protobuf::Message::GetSerializeImpl<Point3D>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Point3D, _impl_._cached_size_),
            false,
        },
        &Point3D::kDescriptorMethods,
        &descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Point3D::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Point3D::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Point3D, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Point3D_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::common::Point3D>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional double x = 1 [default = nan];
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(Point3D, _impl_.x_)}},
    // optional double y = 2 [default = nan];
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(Point3D, _impl_.y_)}},
    // optional double z = 3 [default = nan];
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(Point3D, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional double x = 1 [default = nan];
    {PROTOBUF_FIELD_OFFSET(Point3D, _impl_.x_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double y = 2 [default = nan];
    {PROTOBUF_FIELD_OFFSET(Point3D, _impl_.y_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double z = 3 [default = nan];
    {PROTOBUF_FIELD_OFFSET(Point3D, _impl_.z_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Point3D::Clear() {
// @@protoc_insertion_point(message_clear_start:control.common.Point3D)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    _impl_.x_ = std::numeric_limits<double>::quiet_NaN();
    _impl_.y_ = std::numeric_limits<double>::quiet_NaN();
    _impl_.z_ = std::numeric_limits<double>::quiet_NaN();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Point3D::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.common.Point3D)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional double x = 1 [default = nan];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_x(), target);
  }

  // optional double y = 2 [default = nan];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_y(), target);
  }

  // optional double z = 3 [default = nan];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.common.Point3D)
  return target;
}

::size_t Point3D::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.common.Point3D)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional double x = 1 [default = nan];
    if (cached_has_bits & 0x00000001u) {
      total_size += 9;
    }
    // optional double y = 2 [default = nan];
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }
    // optional double z = 3 [default = nan];
    if (cached_has_bits & 0x00000004u) {
      total_size += 9;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void Point3D::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Point3D*>(&to_msg);
  auto& from = static_cast<const Point3D&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.common.Point3D)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.x_ = from._impl_.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.y_ = from._impl_.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.z_ = from._impl_.z_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Point3D::CopyFrom(const Point3D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.common.Point3D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Point3D::InternalSwap(Point3D* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Point3D, _impl_.z_)
      + sizeof(Point3D::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Point3D, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Point3D::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Quaternion::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Quaternion>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Quaternion, _impl_._has_bits_);
};

Quaternion::Quaternion(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.common.Quaternion)
}
Quaternion::Quaternion(
    ::google::protobuf::Arena* arena, const Quaternion& from)
    : Quaternion(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Quaternion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        qx_{std::numeric_limits<double>::quiet_NaN()},
        qy_{std::numeric_limits<double>::quiet_NaN()},
        qz_{std::numeric_limits<double>::quiet_NaN()},
        qw_{std::numeric_limits<double>::quiet_NaN()} {}

inline void Quaternion::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Quaternion::~Quaternion() {
  // @@protoc_insertion_point(destructor:control.common.Quaternion)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Quaternion::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Quaternion::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Quaternion::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Quaternion>(),
            ::google::protobuf::Message::GetNewImpl<Quaternion>(),
            ::google::protobuf::Message::GetClearImpl<Quaternion>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<Quaternion>(),
                ::google::protobuf::Message::GetSerializeImpl<Quaternion>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Quaternion, _impl_._cached_size_),
            false,
        },
        &Quaternion::kDescriptorMethods,
        &descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Quaternion::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> Quaternion::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Quaternion, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Quaternion_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::common::Quaternion>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional double qw = 4 [default = nan];
    {::_pbi::TcParser::FastF64S1,
     {33, 3, 0, PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.qw_)}},
    // optional double qx = 1 [default = nan];
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.qx_)}},
    // optional double qy = 2 [default = nan];
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.qy_)}},
    // optional double qz = 3 [default = nan];
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.qz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional double qx = 1 [default = nan];
    {PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.qx_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double qy = 2 [default = nan];
    {PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.qy_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double qz = 3 [default = nan];
    {PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.qz_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double qw = 4 [default = nan];
    {PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.qw_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Quaternion::Clear() {
// @@protoc_insertion_point(message_clear_start:control.common.Quaternion)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    _impl_.qx_ = std::numeric_limits<double>::quiet_NaN();
    _impl_.qy_ = std::numeric_limits<double>::quiet_NaN();
    _impl_.qz_ = std::numeric_limits<double>::quiet_NaN();
    _impl_.qw_ = std::numeric_limits<double>::quiet_NaN();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Quaternion::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.common.Quaternion)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional double qx = 1 [default = nan];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_qx(), target);
  }

  // optional double qy = 2 [default = nan];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_qy(), target);
  }

  // optional double qz = 3 [default = nan];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_qz(), target);
  }

  // optional double qw = 4 [default = nan];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_qw(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.common.Quaternion)
  return target;
}

::size_t Quaternion::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.common.Quaternion)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional double qx = 1 [default = nan];
    if (cached_has_bits & 0x00000001u) {
      total_size += 9;
    }
    // optional double qy = 2 [default = nan];
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }
    // optional double qz = 3 [default = nan];
    if (cached_has_bits & 0x00000004u) {
      total_size += 9;
    }
    // optional double qw = 4 [default = nan];
    if (cached_has_bits & 0x00000008u) {
      total_size += 9;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void Quaternion::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Quaternion*>(&to_msg);
  auto& from = static_cast<const Quaternion&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.common.Quaternion)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.qx_ = from._impl_.qx_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.qy_ = from._impl_.qy_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.qz_ = from._impl_.qz_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.qw_ = from._impl_.qw_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Quaternion::CopyFrom(const Quaternion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.common.Quaternion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Quaternion::InternalSwap(Quaternion* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.qw_)
      + sizeof(Quaternion::_impl_.qw_)
      - PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.qx_)>(
          reinterpret_cast<char*>(&_impl_.qx_),
          reinterpret_cast<char*>(&other->_impl_.qx_));
}

::google::protobuf::Metadata Quaternion::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Polygon::_Internal {
 public:
};

Polygon::Polygon(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.common.Polygon)
}
inline PROTOBUF_NDEBUG_INLINE Polygon::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::common::Polygon& from_msg)
      : point_{visibility, arena, from.point_},
        _cached_size_{0} {}

Polygon::Polygon(
    ::google::protobuf::Arena* arena,
    const Polygon& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Polygon* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:control.common.Polygon)
}
inline PROTOBUF_NDEBUG_INLINE Polygon::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : point_{visibility, arena},
        _cached_size_{0} {}

inline void Polygon::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Polygon::~Polygon() {
  // @@protoc_insertion_point(destructor:control.common.Polygon)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Polygon::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Polygon::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Polygon::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Polygon>(),
            ::google::protobuf::Message::GetNewImpl<Polygon>(),
            ::google::protobuf::Message::GetClearImpl<Polygon>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<Polygon>(),
                ::google::protobuf::Message::GetSerializeImpl<Polygon>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Polygon, _impl_._cached_size_),
            false,
        },
        &Polygon::kDescriptorMethods,
        &descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Polygon::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Polygon::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Polygon_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::common::Polygon>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .control.common.Point3D point = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Polygon, _impl_.point_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .control.common.Point3D point = 1;
    {PROTOBUF_FIELD_OFFSET(Polygon, _impl_.point_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::common::Point3D>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Polygon::Clear() {
// @@protoc_insertion_point(message_clear_start:control.common.Polygon)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.point_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Polygon::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.common.Polygon)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .control.common.Point3D point = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_point_size());
       i < n; i++) {
    const auto& repfield = this->_internal_point().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.common.Polygon)
  return target;
}

::size_t Polygon::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.common.Polygon)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // repeated .control.common.Point3D point = 1;
     {
      total_size += 1UL * this->_internal_point_size();
      for (const auto& msg : this->_internal_point()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void Polygon::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Polygon*>(&to_msg);
  auto& from = static_cast<const Polygon&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.common.Polygon)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_point()->MergeFrom(
      from._internal_point());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Polygon::CopyFrom(const Polygon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.common.Polygon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Polygon::InternalSwap(Polygon* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.point_.InternalSwap(&other->_impl_.point_);
}

::google::protobuf::Metadata Polygon::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace common
}  // namespace control
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
