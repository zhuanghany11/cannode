// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: common_msgs/basic_msgs/geometry.proto
// Protobuf C++ Version: 5.28.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto;
namespace control {
namespace common {
class Point2D;
struct Point2DDefaultTypeInternal;
extern Point2DDefaultTypeInternal _Point2D_default_instance_;
class Point3D;
struct Point3DDefaultTypeInternal;
extern Point3DDefaultTypeInternal _Point3D_default_instance_;
class PointENU;
struct PointENUDefaultTypeInternal;
extern PointENUDefaultTypeInternal _PointENU_default_instance_;
class PointLLH;
struct PointLLHDefaultTypeInternal;
extern PointLLHDefaultTypeInternal _PointLLH_default_instance_;
class Polygon;
struct PolygonDefaultTypeInternal;
extern PolygonDefaultTypeInternal _Polygon_default_instance_;
class Quaternion;
struct QuaternionDefaultTypeInternal;
extern QuaternionDefaultTypeInternal _Quaternion_default_instance_;
}  // namespace common
}  // namespace control
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace control {
namespace common {

// ===================================================================


// -------------------------------------------------------------------

class Quaternion final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.common.Quaternion) */ {
 public:
  inline Quaternion() : Quaternion(nullptr) {}
  ~Quaternion() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Quaternion(
      ::google::protobuf::internal::ConstantInitialized);

  inline Quaternion(const Quaternion& from) : Quaternion(nullptr, from) {}
  inline Quaternion(Quaternion&& from) noexcept
      : Quaternion(nullptr, std::move(from)) {}
  inline Quaternion& operator=(const Quaternion& from) {
    CopyFrom(from);
    return *this;
  }
  inline Quaternion& operator=(Quaternion&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Quaternion& default_instance() {
    return *internal_default_instance();
  }
  static inline const Quaternion* internal_default_instance() {
    return reinterpret_cast<const Quaternion*>(
        &_Quaternion_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(Quaternion& a, Quaternion& b) { a.Swap(&b); }
  inline void Swap(Quaternion* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Quaternion* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Quaternion* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Quaternion>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Quaternion& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Quaternion& from) { Quaternion::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Quaternion* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.common.Quaternion"; }

 protected:
  explicit Quaternion(::google::protobuf::Arena* arena);
  Quaternion(::google::protobuf::Arena* arena, const Quaternion& from);
  Quaternion(::google::protobuf::Arena* arena, Quaternion&& from) noexcept
      : Quaternion(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kQxFieldNumber = 1,
    kQyFieldNumber = 2,
    kQzFieldNumber = 3,
    kQwFieldNumber = 4,
  };
  // optional double qx = 1 [default = nan];
  bool has_qx() const;
  void clear_qx() ;
  double qx() const;
  void set_qx(double value);

  private:
  double _internal_qx() const;
  void _internal_set_qx(double value);

  public:
  // optional double qy = 2 [default = nan];
  bool has_qy() const;
  void clear_qy() ;
  double qy() const;
  void set_qy(double value);

  private:
  double _internal_qy() const;
  void _internal_set_qy(double value);

  public:
  // optional double qz = 3 [default = nan];
  bool has_qz() const;
  void clear_qz() ;
  double qz() const;
  void set_qz(double value);

  private:
  double _internal_qz() const;
  void _internal_set_qz(double value);

  public:
  // optional double qw = 4 [default = nan];
  bool has_qw() const;
  void clear_qw() ;
  double qw() const;
  void set_qw(double value);

  private:
  double _internal_qw() const;
  void _internal_set_qw(double value);

  public:
  // @@protoc_insertion_point(class_scope:control.common.Quaternion)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Quaternion_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Quaternion& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    double qx_;
    double qy_;
    double qz_;
    double qw_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto;
};
// -------------------------------------------------------------------

class PointLLH final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.common.PointLLH) */ {
 public:
  inline PointLLH() : PointLLH(nullptr) {}
  ~PointLLH() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PointLLH(
      ::google::protobuf::internal::ConstantInitialized);

  inline PointLLH(const PointLLH& from) : PointLLH(nullptr, from) {}
  inline PointLLH(PointLLH&& from) noexcept
      : PointLLH(nullptr, std::move(from)) {}
  inline PointLLH& operator=(const PointLLH& from) {
    CopyFrom(from);
    return *this;
  }
  inline PointLLH& operator=(PointLLH&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PointLLH& default_instance() {
    return *internal_default_instance();
  }
  static inline const PointLLH* internal_default_instance() {
    return reinterpret_cast<const PointLLH*>(
        &_PointLLH_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(PointLLH& a, PointLLH& b) { a.Swap(&b); }
  inline void Swap(PointLLH* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PointLLH* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PointLLH* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PointLLH>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PointLLH& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PointLLH& from) { PointLLH::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PointLLH* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.common.PointLLH"; }

 protected:
  explicit PointLLH(::google::protobuf::Arena* arena);
  PointLLH(::google::protobuf::Arena* arena, const PointLLH& from);
  PointLLH(::google::protobuf::Arena* arena, PointLLH&& from) noexcept
      : PointLLH(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHeightFieldNumber = 3,
    kLonFieldNumber = 1,
    kLatFieldNumber = 2,
  };
  // optional double height = 3 [default = 0];
  bool has_height() const;
  void clear_height() ;
  double height() const;
  void set_height(double value);

  private:
  double _internal_height() const;
  void _internal_set_height(double value);

  public:
  // optional double lon = 1 [default = nan];
  bool has_lon() const;
  void clear_lon() ;
  double lon() const;
  void set_lon(double value);

  private:
  double _internal_lon() const;
  void _internal_set_lon(double value);

  public:
  // optional double lat = 2 [default = nan];
  bool has_lat() const;
  void clear_lat() ;
  double lat() const;
  void set_lat(double value);

  private:
  double _internal_lat() const;
  void _internal_set_lat(double value);

  public:
  // @@protoc_insertion_point(class_scope:control.common.PointLLH)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PointLLH_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PointLLH& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    double height_;
    double lon_;
    double lat_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto;
};
// -------------------------------------------------------------------

class PointENU final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.common.PointENU) */ {
 public:
  inline PointENU() : PointENU(nullptr) {}
  ~PointENU() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PointENU(
      ::google::protobuf::internal::ConstantInitialized);

  inline PointENU(const PointENU& from) : PointENU(nullptr, from) {}
  inline PointENU(PointENU&& from) noexcept
      : PointENU(nullptr, std::move(from)) {}
  inline PointENU& operator=(const PointENU& from) {
    CopyFrom(from);
    return *this;
  }
  inline PointENU& operator=(PointENU&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PointENU& default_instance() {
    return *internal_default_instance();
  }
  static inline const PointENU* internal_default_instance() {
    return reinterpret_cast<const PointENU*>(
        &_PointENU_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(PointENU& a, PointENU& b) { a.Swap(&b); }
  inline void Swap(PointENU* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PointENU* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PointENU* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PointENU>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PointENU& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PointENU& from) { PointENU::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PointENU* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.common.PointENU"; }

 protected:
  explicit PointENU(::google::protobuf::Arena* arena);
  PointENU(::google::protobuf::Arena* arena, const PointENU& from);
  PointENU(::google::protobuf::Arena* arena, PointENU&& from) noexcept
      : PointENU(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kZFieldNumber = 3,
    kXFieldNumber = 1,
    kYFieldNumber = 2,
  };
  // optional double z = 3 [default = 0];
  bool has_z() const;
  void clear_z() ;
  double z() const;
  void set_z(double value);

  private:
  double _internal_z() const;
  void _internal_set_z(double value);

  public:
  // optional double x = 1 [default = nan];
  bool has_x() const;
  void clear_x() ;
  double x() const;
  void set_x(double value);

  private:
  double _internal_x() const;
  void _internal_set_x(double value);

  public:
  // optional double y = 2 [default = nan];
  bool has_y() const;
  void clear_y() ;
  double y() const;
  void set_y(double value);

  private:
  double _internal_y() const;
  void _internal_set_y(double value);

  public:
  // @@protoc_insertion_point(class_scope:control.common.PointENU)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PointENU_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PointENU& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    double z_;
    double x_;
    double y_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto;
};
// -------------------------------------------------------------------

class Point3D final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.common.Point3D) */ {
 public:
  inline Point3D() : Point3D(nullptr) {}
  ~Point3D() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Point3D(
      ::google::protobuf::internal::ConstantInitialized);

  inline Point3D(const Point3D& from) : Point3D(nullptr, from) {}
  inline Point3D(Point3D&& from) noexcept
      : Point3D(nullptr, std::move(from)) {}
  inline Point3D& operator=(const Point3D& from) {
    CopyFrom(from);
    return *this;
  }
  inline Point3D& operator=(Point3D&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Point3D& default_instance() {
    return *internal_default_instance();
  }
  static inline const Point3D* internal_default_instance() {
    return reinterpret_cast<const Point3D*>(
        &_Point3D_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(Point3D& a, Point3D& b) { a.Swap(&b); }
  inline void Swap(Point3D* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Point3D* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Point3D* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Point3D>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Point3D& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Point3D& from) { Point3D::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Point3D* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.common.Point3D"; }

 protected:
  explicit Point3D(::google::protobuf::Arena* arena);
  Point3D(::google::protobuf::Arena* arena, const Point3D& from);
  Point3D(::google::protobuf::Arena* arena, Point3D&& from) noexcept
      : Point3D(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // optional double x = 1 [default = nan];
  bool has_x() const;
  void clear_x() ;
  double x() const;
  void set_x(double value);

  private:
  double _internal_x() const;
  void _internal_set_x(double value);

  public:
  // optional double y = 2 [default = nan];
  bool has_y() const;
  void clear_y() ;
  double y() const;
  void set_y(double value);

  private:
  double _internal_y() const;
  void _internal_set_y(double value);

  public:
  // optional double z = 3 [default = nan];
  bool has_z() const;
  void clear_z() ;
  double z() const;
  void set_z(double value);

  private:
  double _internal_z() const;
  void _internal_set_z(double value);

  public:
  // @@protoc_insertion_point(class_scope:control.common.Point3D)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Point3D_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Point3D& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    double x_;
    double y_;
    double z_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto;
};
// -------------------------------------------------------------------

class Point2D final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.common.Point2D) */ {
 public:
  inline Point2D() : Point2D(nullptr) {}
  ~Point2D() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Point2D(
      ::google::protobuf::internal::ConstantInitialized);

  inline Point2D(const Point2D& from) : Point2D(nullptr, from) {}
  inline Point2D(Point2D&& from) noexcept
      : Point2D(nullptr, std::move(from)) {}
  inline Point2D& operator=(const Point2D& from) {
    CopyFrom(from);
    return *this;
  }
  inline Point2D& operator=(Point2D&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Point2D& default_instance() {
    return *internal_default_instance();
  }
  static inline const Point2D* internal_default_instance() {
    return reinterpret_cast<const Point2D*>(
        &_Point2D_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Point2D& a, Point2D& b) { a.Swap(&b); }
  inline void Swap(Point2D* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Point2D* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Point2D* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Point2D>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Point2D& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Point2D& from) { Point2D::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Point2D* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.common.Point2D"; }

 protected:
  explicit Point2D(::google::protobuf::Arena* arena);
  Point2D(::google::protobuf::Arena* arena, const Point2D& from);
  Point2D(::google::protobuf::Arena* arena, Point2D&& from) noexcept
      : Point2D(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
  };
  // optional double x = 1 [default = nan];
  bool has_x() const;
  void clear_x() ;
  double x() const;
  void set_x(double value);

  private:
  double _internal_x() const;
  void _internal_set_x(double value);

  public:
  // optional double y = 2 [default = nan];
  bool has_y() const;
  void clear_y() ;
  double y() const;
  void set_y(double value);

  private:
  double _internal_y() const;
  void _internal_set_y(double value);

  public:
  // @@protoc_insertion_point(class_scope:control.common.Point2D)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Point2D_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Point2D& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    double x_;
    double y_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto;
};
// -------------------------------------------------------------------

class Polygon final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.common.Polygon) */ {
 public:
  inline Polygon() : Polygon(nullptr) {}
  ~Polygon() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Polygon(
      ::google::protobuf::internal::ConstantInitialized);

  inline Polygon(const Polygon& from) : Polygon(nullptr, from) {}
  inline Polygon(Polygon&& from) noexcept
      : Polygon(nullptr, std::move(from)) {}
  inline Polygon& operator=(const Polygon& from) {
    CopyFrom(from);
    return *this;
  }
  inline Polygon& operator=(Polygon&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Polygon& default_instance() {
    return *internal_default_instance();
  }
  static inline const Polygon* internal_default_instance() {
    return reinterpret_cast<const Polygon*>(
        &_Polygon_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(Polygon& a, Polygon& b) { a.Swap(&b); }
  inline void Swap(Polygon* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Polygon* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Polygon* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Polygon>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Polygon& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Polygon& from) { Polygon::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Polygon* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.common.Polygon"; }

 protected:
  explicit Polygon(::google::protobuf::Arena* arena);
  Polygon(::google::protobuf::Arena* arena, const Polygon& from);
  Polygon(::google::protobuf::Arena* arena, Polygon&& from) noexcept
      : Polygon(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPointFieldNumber = 1,
  };
  // repeated .control.common.Point3D point = 1;
  int point_size() const;
  private:
  int _internal_point_size() const;

  public:
  void clear_point() ;
  ::control::common::Point3D* mutable_point(int index);
  ::google::protobuf::RepeatedPtrField<::control::common::Point3D>* mutable_point();

  private:
  const ::google::protobuf::RepeatedPtrField<::control::common::Point3D>& _internal_point() const;
  ::google::protobuf::RepeatedPtrField<::control::common::Point3D>* _internal_mutable_point();
  public:
  const ::control::common::Point3D& point(int index) const;
  ::control::common::Point3D* add_point();
  const ::google::protobuf::RepeatedPtrField<::control::common::Point3D>& point() const;
  // @@protoc_insertion_point(class_scope:control.common.Polygon)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Polygon_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Polygon& from_msg);
    ::google::protobuf::RepeatedPtrField< ::control::common::Point3D > point_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PointENU

// optional double x = 1 [default = nan];
inline bool PointENU::has_x() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void PointENU::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = std::numeric_limits<double>::quiet_NaN();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double PointENU::x() const {
  // @@protoc_insertion_point(field_get:control.common.PointENU.x)
  return _internal_x();
}
inline void PointENU::set_x(double value) {
  _internal_set_x(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:control.common.PointENU.x)
}
inline double PointENU::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void PointENU::_internal_set_x(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// optional double y = 2 [default = nan];
inline bool PointENU::has_y() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void PointENU::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = std::numeric_limits<double>::quiet_NaN();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double PointENU::y() const {
  // @@protoc_insertion_point(field_get:control.common.PointENU.y)
  return _internal_y();
}
inline void PointENU::set_y(double value) {
  _internal_set_y(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:control.common.PointENU.y)
}
inline double PointENU::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void PointENU::_internal_set_y(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// optional double z = 3 [default = 0];
inline bool PointENU::has_z() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PointENU::clear_z() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double PointENU::z() const {
  // @@protoc_insertion_point(field_get:control.common.PointENU.z)
  return _internal_z();
}
inline void PointENU::set_z(double value) {
  _internal_set_z(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:control.common.PointENU.z)
}
inline double PointENU::_internal_z() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.z_;
}
inline void PointENU::_internal_set_z(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = value;
}

// -------------------------------------------------------------------

// PointLLH

// optional double lon = 1 [default = nan];
inline bool PointLLH::has_lon() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void PointLLH::clear_lon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lon_ = std::numeric_limits<double>::quiet_NaN();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double PointLLH::lon() const {
  // @@protoc_insertion_point(field_get:control.common.PointLLH.lon)
  return _internal_lon();
}
inline void PointLLH::set_lon(double value) {
  _internal_set_lon(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:control.common.PointLLH.lon)
}
inline double PointLLH::_internal_lon() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lon_;
}
inline void PointLLH::_internal_set_lon(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lon_ = value;
}

// optional double lat = 2 [default = nan];
inline bool PointLLH::has_lat() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void PointLLH::clear_lat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lat_ = std::numeric_limits<double>::quiet_NaN();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double PointLLH::lat() const {
  // @@protoc_insertion_point(field_get:control.common.PointLLH.lat)
  return _internal_lat();
}
inline void PointLLH::set_lat(double value) {
  _internal_set_lat(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:control.common.PointLLH.lat)
}
inline double PointLLH::_internal_lat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lat_;
}
inline void PointLLH::_internal_set_lat(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lat_ = value;
}

// optional double height = 3 [default = 0];
inline bool PointLLH::has_height() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PointLLH::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double PointLLH::height() const {
  // @@protoc_insertion_point(field_get:control.common.PointLLH.height)
  return _internal_height();
}
inline void PointLLH::set_height(double value) {
  _internal_set_height(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:control.common.PointLLH.height)
}
inline double PointLLH::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void PointLLH::_internal_set_height(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// -------------------------------------------------------------------

// Point2D

// optional double x = 1 [default = nan];
inline bool Point2D::has_x() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Point2D::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = std::numeric_limits<double>::quiet_NaN();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double Point2D::x() const {
  // @@protoc_insertion_point(field_get:control.common.Point2D.x)
  return _internal_x();
}
inline void Point2D::set_x(double value) {
  _internal_set_x(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:control.common.Point2D.x)
}
inline double Point2D::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void Point2D::_internal_set_x(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// optional double y = 2 [default = nan];
inline bool Point2D::has_y() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Point2D::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = std::numeric_limits<double>::quiet_NaN();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double Point2D::y() const {
  // @@protoc_insertion_point(field_get:control.common.Point2D.y)
  return _internal_y();
}
inline void Point2D::set_y(double value) {
  _internal_set_y(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:control.common.Point2D.y)
}
inline double Point2D::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void Point2D::_internal_set_y(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// -------------------------------------------------------------------

// Point3D

// optional double x = 1 [default = nan];
inline bool Point3D::has_x() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Point3D::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = std::numeric_limits<double>::quiet_NaN();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double Point3D::x() const {
  // @@protoc_insertion_point(field_get:control.common.Point3D.x)
  return _internal_x();
}
inline void Point3D::set_x(double value) {
  _internal_set_x(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:control.common.Point3D.x)
}
inline double Point3D::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void Point3D::_internal_set_x(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// optional double y = 2 [default = nan];
inline bool Point3D::has_y() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Point3D::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = std::numeric_limits<double>::quiet_NaN();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double Point3D::y() const {
  // @@protoc_insertion_point(field_get:control.common.Point3D.y)
  return _internal_y();
}
inline void Point3D::set_y(double value) {
  _internal_set_y(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:control.common.Point3D.y)
}
inline double Point3D::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void Point3D::_internal_set_y(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// optional double z = 3 [default = nan];
inline bool Point3D::has_z() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Point3D::clear_z() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = std::numeric_limits<double>::quiet_NaN();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double Point3D::z() const {
  // @@protoc_insertion_point(field_get:control.common.Point3D.z)
  return _internal_z();
}
inline void Point3D::set_z(double value) {
  _internal_set_z(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:control.common.Point3D.z)
}
inline double Point3D::_internal_z() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.z_;
}
inline void Point3D::_internal_set_z(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = value;
}

// -------------------------------------------------------------------

// Quaternion

// optional double qx = 1 [default = nan];
inline bool Quaternion::has_qx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Quaternion::clear_qx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.qx_ = std::numeric_limits<double>::quiet_NaN();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double Quaternion::qx() const {
  // @@protoc_insertion_point(field_get:control.common.Quaternion.qx)
  return _internal_qx();
}
inline void Quaternion::set_qx(double value) {
  _internal_set_qx(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:control.common.Quaternion.qx)
}
inline double Quaternion::_internal_qx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.qx_;
}
inline void Quaternion::_internal_set_qx(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.qx_ = value;
}

// optional double qy = 2 [default = nan];
inline bool Quaternion::has_qy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Quaternion::clear_qy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.qy_ = std::numeric_limits<double>::quiet_NaN();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double Quaternion::qy() const {
  // @@protoc_insertion_point(field_get:control.common.Quaternion.qy)
  return _internal_qy();
}
inline void Quaternion::set_qy(double value) {
  _internal_set_qy(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:control.common.Quaternion.qy)
}
inline double Quaternion::_internal_qy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.qy_;
}
inline void Quaternion::_internal_set_qy(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.qy_ = value;
}

// optional double qz = 3 [default = nan];
inline bool Quaternion::has_qz() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Quaternion::clear_qz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.qz_ = std::numeric_limits<double>::quiet_NaN();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double Quaternion::qz() const {
  // @@protoc_insertion_point(field_get:control.common.Quaternion.qz)
  return _internal_qz();
}
inline void Quaternion::set_qz(double value) {
  _internal_set_qz(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:control.common.Quaternion.qz)
}
inline double Quaternion::_internal_qz() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.qz_;
}
inline void Quaternion::_internal_set_qz(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.qz_ = value;
}

// optional double qw = 4 [default = nan];
inline bool Quaternion::has_qw() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Quaternion::clear_qw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.qw_ = std::numeric_limits<double>::quiet_NaN();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline double Quaternion::qw() const {
  // @@protoc_insertion_point(field_get:control.common.Quaternion.qw)
  return _internal_qw();
}
inline void Quaternion::set_qw(double value) {
  _internal_set_qw(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:control.common.Quaternion.qw)
}
inline double Quaternion::_internal_qw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.qw_;
}
inline void Quaternion::_internal_set_qw(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.qw_ = value;
}

// -------------------------------------------------------------------

// Polygon

// repeated .control.common.Point3D point = 1;
inline int Polygon::_internal_point_size() const {
  return _internal_point().size();
}
inline int Polygon::point_size() const {
  return _internal_point_size();
}
inline void Polygon::clear_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.point_.Clear();
}
inline ::control::common::Point3D* Polygon::mutable_point(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:control.common.Polygon.point)
  return _internal_mutable_point()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::control::common::Point3D>* Polygon::mutable_point()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:control.common.Polygon.point)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_point();
}
inline const ::control::common::Point3D& Polygon::point(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.common.Polygon.point)
  return _internal_point().Get(index);
}
inline ::control::common::Point3D* Polygon::add_point() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::control::common::Point3D* _add = _internal_mutable_point()->Add();
  // @@protoc_insertion_point(field_add:control.common.Polygon.point)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::control::common::Point3D>& Polygon::point() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:control.common.Polygon.point)
  return _internal_point();
}
inline const ::google::protobuf::RepeatedPtrField<::control::common::Point3D>&
Polygon::_internal_point() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.point_;
}
inline ::google::protobuf::RepeatedPtrField<::control::common::Point3D>*
Polygon::_internal_mutable_point() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.point_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace common
}  // namespace control


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto_2epb_2eh
