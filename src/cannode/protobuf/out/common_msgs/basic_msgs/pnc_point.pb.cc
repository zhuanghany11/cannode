// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: common_msgs/basic_msgs/pnc_point.proto
// Protobuf C++ Version: 5.28.0-dev

#include "common_msgs/basic_msgs/pnc_point.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace control {
namespace common {

inline constexpr SpeedPoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        s_{0},
        t_{0},
        v_{0},
        a_{0},
        da_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SpeedPoint::SpeedPoint(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SpeedPointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpeedPointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpeedPointDefaultTypeInternal() {}
  union {
    SpeedPoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpeedPointDefaultTypeInternal _SpeedPoint_default_instance_;

inline constexpr SLPoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        s_{0},
        l_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SLPoint::SLPoint(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SLPointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SLPointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SLPointDefaultTypeInternal() {}
  union {
    SLPoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SLPointDefaultTypeInternal _SLPoint_default_instance_;

inline constexpr PathPoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        lane_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        x_{0},
        y_{0},
        z_{0},
        theta_{0},
        kappa_{0},
        s_{0},
        dkappa_{0},
        ddkappa_{0},
        x_derivative_{0},
        y_derivative_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PathPoint::PathPoint(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PathPointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PathPointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PathPointDefaultTypeInternal() {}
  union {
    PathPoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PathPointDefaultTypeInternal _PathPoint_default_instance_;

inline constexpr FrenetFramePoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        s_{0},
        l_{0},
        dl_{0},
        ddl_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FrenetFramePoint::FrenetFramePoint(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FrenetFramePointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FrenetFramePointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FrenetFramePointDefaultTypeInternal() {}
  union {
    FrenetFramePoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FrenetFramePointDefaultTypeInternal _FrenetFramePoint_default_instance_;

inline constexpr TrajectoryPoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        path_point_{nullptr},
        v_{0},
        a_{0},
        relative_time_{0},
        da_{0},
        steer_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TrajectoryPoint::TrajectoryPoint(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TrajectoryPointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrajectoryPointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrajectoryPointDefaultTypeInternal() {}
  union {
    TrajectoryPoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrajectoryPointDefaultTypeInternal _TrajectoryPoint_default_instance_;

inline constexpr Path::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        path_point_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Path::Path(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PathDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PathDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PathDefaultTypeInternal() {}
  union {
    Path _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PathDefaultTypeInternal _Path_default_instance_;

inline constexpr VehicleMotionPoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        trajectory_point_{nullptr},
        steer_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VehicleMotionPoint::VehicleMotionPoint(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VehicleMotionPointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VehicleMotionPointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VehicleMotionPointDefaultTypeInternal() {}
  union {
    VehicleMotionPoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VehicleMotionPointDefaultTypeInternal _VehicleMotionPoint_default_instance_;

inline constexpr Trajectory::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        trajectory_point_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Trajectory::Trajectory(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TrajectoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrajectoryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrajectoryDefaultTypeInternal() {}
  union {
    Trajectory _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrajectoryDefaultTypeInternal _Trajectory_default_instance_;

inline constexpr VehicleMotion::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        vehicle_motion_point_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR VehicleMotion::VehicleMotion(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VehicleMotionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VehicleMotionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VehicleMotionDefaultTypeInternal() {}
  union {
    VehicleMotion _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VehicleMotionDefaultTypeInternal _VehicleMotion_default_instance_;
}  // namespace common
}  // namespace control
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_common_5fmsgs_2fbasic_5fmsgs_2fpnc_5fpoint_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_common_5fmsgs_2fbasic_5fmsgs_2fpnc_5fpoint_2eproto = nullptr;
const ::uint32_t
    TableStruct_common_5fmsgs_2fbasic_5fmsgs_2fpnc_5fpoint_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::control::common::SLPoint, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::common::SLPoint, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::common::SLPoint, _impl_.s_),
        PROTOBUF_FIELD_OFFSET(::control::common::SLPoint, _impl_.l_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::control::common::FrenetFramePoint, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::common::FrenetFramePoint, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::common::FrenetFramePoint, _impl_.s_),
        PROTOBUF_FIELD_OFFSET(::control::common::FrenetFramePoint, _impl_.l_),
        PROTOBUF_FIELD_OFFSET(::control::common::FrenetFramePoint, _impl_.dl_),
        PROTOBUF_FIELD_OFFSET(::control::common::FrenetFramePoint, _impl_.ddl_),
        0,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::control::common::SpeedPoint, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::common::SpeedPoint, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::common::SpeedPoint, _impl_.s_),
        PROTOBUF_FIELD_OFFSET(::control::common::SpeedPoint, _impl_.t_),
        PROTOBUF_FIELD_OFFSET(::control::common::SpeedPoint, _impl_.v_),
        PROTOBUF_FIELD_OFFSET(::control::common::SpeedPoint, _impl_.a_),
        PROTOBUF_FIELD_OFFSET(::control::common::SpeedPoint, _impl_.da_),
        0,
        1,
        2,
        3,
        4,
        PROTOBUF_FIELD_OFFSET(::control::common::PathPoint, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::common::PathPoint, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::common::PathPoint, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::control::common::PathPoint, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::control::common::PathPoint, _impl_.z_),
        PROTOBUF_FIELD_OFFSET(::control::common::PathPoint, _impl_.theta_),
        PROTOBUF_FIELD_OFFSET(::control::common::PathPoint, _impl_.kappa_),
        PROTOBUF_FIELD_OFFSET(::control::common::PathPoint, _impl_.s_),
        PROTOBUF_FIELD_OFFSET(::control::common::PathPoint, _impl_.dkappa_),
        PROTOBUF_FIELD_OFFSET(::control::common::PathPoint, _impl_.ddkappa_),
        PROTOBUF_FIELD_OFFSET(::control::common::PathPoint, _impl_.lane_id_),
        PROTOBUF_FIELD_OFFSET(::control::common::PathPoint, _impl_.x_derivative_),
        PROTOBUF_FIELD_OFFSET(::control::common::PathPoint, _impl_.y_derivative_),
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        0,
        9,
        10,
        PROTOBUF_FIELD_OFFSET(::control::common::Path, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::common::Path, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::common::Path, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::control::common::Path, _impl_.path_point_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::control::common::TrajectoryPoint, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::common::TrajectoryPoint, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::common::TrajectoryPoint, _impl_.path_point_),
        PROTOBUF_FIELD_OFFSET(::control::common::TrajectoryPoint, _impl_.v_),
        PROTOBUF_FIELD_OFFSET(::control::common::TrajectoryPoint, _impl_.a_),
        PROTOBUF_FIELD_OFFSET(::control::common::TrajectoryPoint, _impl_.relative_time_),
        PROTOBUF_FIELD_OFFSET(::control::common::TrajectoryPoint, _impl_.da_),
        PROTOBUF_FIELD_OFFSET(::control::common::TrajectoryPoint, _impl_.steer_),
        0,
        1,
        2,
        3,
        4,
        5,
        PROTOBUF_FIELD_OFFSET(::control::common::Trajectory, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::common::Trajectory, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::common::Trajectory, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::control::common::Trajectory, _impl_.trajectory_point_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::control::common::VehicleMotionPoint, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::common::VehicleMotionPoint, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::common::VehicleMotionPoint, _impl_.trajectory_point_),
        PROTOBUF_FIELD_OFFSET(::control::common::VehicleMotionPoint, _impl_.steer_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::control::common::VehicleMotion, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::common::VehicleMotion, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::common::VehicleMotion, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::control::common::VehicleMotion, _impl_.vehicle_motion_point_),
        0,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::control::common::SLPoint)},
        {12, 24, -1, sizeof(::control::common::FrenetFramePoint)},
        {28, 41, -1, sizeof(::control::common::SpeedPoint)},
        {46, 65, -1, sizeof(::control::common::PathPoint)},
        {76, 86, -1, sizeof(::control::common::Path)},
        {88, 102, -1, sizeof(::control::common::TrajectoryPoint)},
        {108, 118, -1, sizeof(::control::common::Trajectory)},
        {120, 130, -1, sizeof(::control::common::VehicleMotionPoint)},
        {132, 142, -1, sizeof(::control::common::VehicleMotion)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::control::common::_SLPoint_default_instance_._instance,
    &::control::common::_FrenetFramePoint_default_instance_._instance,
    &::control::common::_SpeedPoint_default_instance_._instance,
    &::control::common::_PathPoint_default_instance_._instance,
    &::control::common::_Path_default_instance_._instance,
    &::control::common::_TrajectoryPoint_default_instance_._instance,
    &::control::common::_Trajectory_default_instance_._instance,
    &::control::common::_VehicleMotionPoint_default_instance_._instance,
    &::control::common::_VehicleMotion_default_instance_._instance,
};
const char descriptor_table_protodef_common_5fmsgs_2fbasic_5fmsgs_2fpnc_5fpoint_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n&common_msgs/basic_msgs/pnc_point.proto"
    "\022\016control.common\"\037\n\007SLPoint\022\t\n\001s\030\001 \001(\001\022\t"
    "\n\001l\030\002 \001(\001\"A\n\020FrenetFramePoint\022\t\n\001s\030\001 \001(\001"
    "\022\t\n\001l\030\002 \001(\001\022\n\n\002dl\030\003 \001(\001\022\013\n\003ddl\030\004 \001(\001\"D\n\n"
    "SpeedPoint\022\t\n\001s\030\001 \001(\001\022\t\n\001t\030\002 \001(\001\022\t\n\001v\030\003 "
    "\001(\001\022\t\n\001a\030\004 \001(\001\022\n\n\002da\030\005 \001(\001\"\263\001\n\tPathPoint"
    "\022\t\n\001x\030\001 \001(\001\022\t\n\001y\030\002 \001(\001\022\t\n\001z\030\003 \001(\001\022\r\n\005the"
    "ta\030\004 \001(\001\022\r\n\005kappa\030\005 \001(\001\022\t\n\001s\030\006 \001(\001\022\016\n\006dk"
    "appa\030\007 \001(\001\022\017\n\007ddkappa\030\010 \001(\001\022\017\n\007lane_id\030\t"
    " \001(\t\022\024\n\014x_derivative\030\n \001(\001\022\024\n\014y_derivati"
    "ve\030\013 \001(\001\"C\n\004Path\022\014\n\004name\030\001 \001(\t\022-\n\npath_p"
    "oint\030\002 \003(\0132\031.control.common.PathPoint\"\210\001"
    "\n\017TrajectoryPoint\022-\n\npath_point\030\001 \001(\0132\031."
    "control.common.PathPoint\022\t\n\001v\030\002 \001(\001\022\t\n\001a"
    "\030\003 \001(\001\022\025\n\rrelative_time\030\004 \001(\001\022\n\n\002da\030\005 \001("
    "\001\022\r\n\005steer\030\006 \001(\001\"U\n\nTrajectory\022\014\n\004name\030\001"
    " \001(\t\0229\n\020trajectory_point\030\002 \003(\0132\037.control"
    ".common.TrajectoryPoint\"^\n\022VehicleMotion"
    "Point\0229\n\020trajectory_point\030\001 \001(\0132\037.contro"
    "l.common.TrajectoryPoint\022\r\n\005steer\030\002 \001(\001\""
    "_\n\rVehicleMotion\022\014\n\004name\030\001 \001(\t\022@\n\024vehicl"
    "e_motion_point\030\002 \003(\0132\".control.common.Ve"
    "hicleMotionPoint"
};
static ::absl::once_flag descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fpnc_5fpoint_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fpnc_5fpoint_2eproto = {
    false,
    false,
    896,
    descriptor_table_protodef_common_5fmsgs_2fbasic_5fmsgs_2fpnc_5fpoint_2eproto,
    "common_msgs/basic_msgs/pnc_point.proto",
    &descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fpnc_5fpoint_2eproto_once,
    nullptr,
    0,
    9,
    schemas,
    file_default_instances,
    TableStruct_common_5fmsgs_2fbasic_5fmsgs_2fpnc_5fpoint_2eproto::offsets,
    file_level_enum_descriptors_common_5fmsgs_2fbasic_5fmsgs_2fpnc_5fpoint_2eproto,
    file_level_service_descriptors_common_5fmsgs_2fbasic_5fmsgs_2fpnc_5fpoint_2eproto,
};
namespace control {
namespace common {
// ===================================================================

class SLPoint::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SLPoint>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SLPoint, _impl_._has_bits_);
};

SLPoint::SLPoint(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.common.SLPoint)
}
SLPoint::SLPoint(
    ::google::protobuf::Arena* arena, const SLPoint& from)
    : SLPoint(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SLPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SLPoint::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, s_),
           0,
           offsetof(Impl_, l_) -
               offsetof(Impl_, s_) +
               sizeof(Impl_::l_));
}
SLPoint::~SLPoint() {
  // @@protoc_insertion_point(destructor:control.common.SLPoint)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SLPoint::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SLPoint::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SLPoint::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SLPoint>(),
            ::google::protobuf::Message::GetNewImpl<SLPoint>(),
            ::google::protobuf::Message::GetClearImpl<SLPoint>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<SLPoint>(),
                ::google::protobuf::Message::GetSerializeImpl<SLPoint>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SLPoint, _impl_._cached_size_),
            false,
        },
        &SLPoint::kDescriptorMethods,
        &descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fpnc_5fpoint_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SLPoint::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> SLPoint::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SLPoint, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SLPoint_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::common::SLPoint>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional double l = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(SLPoint, _impl_.l_)}},
    // optional double s = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(SLPoint, _impl_.s_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional double s = 1;
    {PROTOBUF_FIELD_OFFSET(SLPoint, _impl_.s_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double l = 2;
    {PROTOBUF_FIELD_OFFSET(SLPoint, _impl_.l_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SLPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:control.common.SLPoint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.s_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.l_) -
        reinterpret_cast<char*>(&_impl_.s_)) + sizeof(_impl_.l_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SLPoint::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.common.SLPoint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional double s = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_s(), target);
  }

  // optional double l = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_l(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.common.SLPoint)
  return target;
}

::size_t SLPoint::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.common.SLPoint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional double s = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 9;
    }
    // optional double l = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void SLPoint::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SLPoint*>(&to_msg);
  auto& from = static_cast<const SLPoint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.common.SLPoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.s_ = from._impl_.s_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.l_ = from._impl_.l_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SLPoint::CopyFrom(const SLPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.common.SLPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SLPoint::InternalSwap(SLPoint* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SLPoint, _impl_.l_)
      + sizeof(SLPoint::_impl_.l_)
      - PROTOBUF_FIELD_OFFSET(SLPoint, _impl_.s_)>(
          reinterpret_cast<char*>(&_impl_.s_),
          reinterpret_cast<char*>(&other->_impl_.s_));
}

::google::protobuf::Metadata SLPoint::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FrenetFramePoint::_Internal {
 public:
  using HasBits =
      decltype(std::declval<FrenetFramePoint>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(FrenetFramePoint, _impl_._has_bits_);
};

FrenetFramePoint::FrenetFramePoint(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.common.FrenetFramePoint)
}
FrenetFramePoint::FrenetFramePoint(
    ::google::protobuf::Arena* arena, const FrenetFramePoint& from)
    : FrenetFramePoint(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE FrenetFramePoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FrenetFramePoint::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, s_),
           0,
           offsetof(Impl_, ddl_) -
               offsetof(Impl_, s_) +
               sizeof(Impl_::ddl_));
}
FrenetFramePoint::~FrenetFramePoint() {
  // @@protoc_insertion_point(destructor:control.common.FrenetFramePoint)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FrenetFramePoint::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    FrenetFramePoint::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &FrenetFramePoint::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<FrenetFramePoint>(),
            ::google::protobuf::Message::GetNewImpl<FrenetFramePoint>(),
            ::google::protobuf::Message::GetClearImpl<FrenetFramePoint>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<FrenetFramePoint>(),
                ::google::protobuf::Message::GetSerializeImpl<FrenetFramePoint>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(FrenetFramePoint, _impl_._cached_size_),
            false,
        },
        &FrenetFramePoint::kDescriptorMethods,
        &descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fpnc_5fpoint_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* FrenetFramePoint::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> FrenetFramePoint::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FrenetFramePoint, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_FrenetFramePoint_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::common::FrenetFramePoint>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional double ddl = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 3, 0, PROTOBUF_FIELD_OFFSET(FrenetFramePoint, _impl_.ddl_)}},
    // optional double s = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(FrenetFramePoint, _impl_.s_)}},
    // optional double l = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(FrenetFramePoint, _impl_.l_)}},
    // optional double dl = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(FrenetFramePoint, _impl_.dl_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional double s = 1;
    {PROTOBUF_FIELD_OFFSET(FrenetFramePoint, _impl_.s_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double l = 2;
    {PROTOBUF_FIELD_OFFSET(FrenetFramePoint, _impl_.l_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double dl = 3;
    {PROTOBUF_FIELD_OFFSET(FrenetFramePoint, _impl_.dl_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double ddl = 4;
    {PROTOBUF_FIELD_OFFSET(FrenetFramePoint, _impl_.ddl_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void FrenetFramePoint::Clear() {
// @@protoc_insertion_point(message_clear_start:control.common.FrenetFramePoint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.s_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.ddl_) -
        reinterpret_cast<char*>(&_impl_.s_)) + sizeof(_impl_.ddl_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* FrenetFramePoint::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.common.FrenetFramePoint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional double s = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_s(), target);
  }

  // optional double l = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_l(), target);
  }

  // optional double dl = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_dl(), target);
  }

  // optional double ddl = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_ddl(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.common.FrenetFramePoint)
  return target;
}

::size_t FrenetFramePoint::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.common.FrenetFramePoint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional double s = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 9;
    }
    // optional double l = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }
    // optional double dl = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 9;
    }
    // optional double ddl = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 9;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void FrenetFramePoint::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FrenetFramePoint*>(&to_msg);
  auto& from = static_cast<const FrenetFramePoint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.common.FrenetFramePoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.s_ = from._impl_.s_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.l_ = from._impl_.l_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.dl_ = from._impl_.dl_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.ddl_ = from._impl_.ddl_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FrenetFramePoint::CopyFrom(const FrenetFramePoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.common.FrenetFramePoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FrenetFramePoint::InternalSwap(FrenetFramePoint* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FrenetFramePoint, _impl_.ddl_)
      + sizeof(FrenetFramePoint::_impl_.ddl_)
      - PROTOBUF_FIELD_OFFSET(FrenetFramePoint, _impl_.s_)>(
          reinterpret_cast<char*>(&_impl_.s_),
          reinterpret_cast<char*>(&other->_impl_.s_));
}

::google::protobuf::Metadata FrenetFramePoint::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SpeedPoint::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SpeedPoint>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SpeedPoint, _impl_._has_bits_);
};

SpeedPoint::SpeedPoint(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.common.SpeedPoint)
}
SpeedPoint::SpeedPoint(
    ::google::protobuf::Arena* arena, const SpeedPoint& from)
    : SpeedPoint(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SpeedPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SpeedPoint::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, s_),
           0,
           offsetof(Impl_, da_) -
               offsetof(Impl_, s_) +
               sizeof(Impl_::da_));
}
SpeedPoint::~SpeedPoint() {
  // @@protoc_insertion_point(destructor:control.common.SpeedPoint)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SpeedPoint::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SpeedPoint::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SpeedPoint::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SpeedPoint>(),
            ::google::protobuf::Message::GetNewImpl<SpeedPoint>(),
            ::google::protobuf::Message::GetClearImpl<SpeedPoint>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<SpeedPoint>(),
                ::google::protobuf::Message::GetSerializeImpl<SpeedPoint>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SpeedPoint, _impl_._cached_size_),
            false,
        },
        &SpeedPoint::kDescriptorMethods,
        &descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fpnc_5fpoint_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SpeedPoint::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> SpeedPoint::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SpeedPoint, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SpeedPoint_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::common::SpeedPoint>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional double s = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(SpeedPoint, _impl_.s_)}},
    // optional double t = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(SpeedPoint, _impl_.t_)}},
    // optional double v = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(SpeedPoint, _impl_.v_)}},
    // optional double a = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 3, 0, PROTOBUF_FIELD_OFFSET(SpeedPoint, _impl_.a_)}},
    // optional double da = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 4, 0, PROTOBUF_FIELD_OFFSET(SpeedPoint, _impl_.da_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional double s = 1;
    {PROTOBUF_FIELD_OFFSET(SpeedPoint, _impl_.s_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double t = 2;
    {PROTOBUF_FIELD_OFFSET(SpeedPoint, _impl_.t_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double v = 3;
    {PROTOBUF_FIELD_OFFSET(SpeedPoint, _impl_.v_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double a = 4;
    {PROTOBUF_FIELD_OFFSET(SpeedPoint, _impl_.a_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double da = 5;
    {PROTOBUF_FIELD_OFFSET(SpeedPoint, _impl_.da_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SpeedPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:control.common.SpeedPoint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.s_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.da_) -
        reinterpret_cast<char*>(&_impl_.s_)) + sizeof(_impl_.da_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SpeedPoint::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.common.SpeedPoint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional double s = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_s(), target);
  }

  // optional double t = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_t(), target);
  }

  // optional double v = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_v(), target);
  }

  // optional double a = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_a(), target);
  }

  // optional double da = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        5, this->_internal_da(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.common.SpeedPoint)
  return target;
}

::size_t SpeedPoint::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.common.SpeedPoint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional double s = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 9;
    }
    // optional double t = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }
    // optional double v = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 9;
    }
    // optional double a = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 9;
    }
    // optional double da = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 9;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void SpeedPoint::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SpeedPoint*>(&to_msg);
  auto& from = static_cast<const SpeedPoint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.common.SpeedPoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.s_ = from._impl_.s_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.t_ = from._impl_.t_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.v_ = from._impl_.v_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.a_ = from._impl_.a_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.da_ = from._impl_.da_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SpeedPoint::CopyFrom(const SpeedPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.common.SpeedPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SpeedPoint::InternalSwap(SpeedPoint* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpeedPoint, _impl_.da_)
      + sizeof(SpeedPoint::_impl_.da_)
      - PROTOBUF_FIELD_OFFSET(SpeedPoint, _impl_.s_)>(
          reinterpret_cast<char*>(&_impl_.s_),
          reinterpret_cast<char*>(&other->_impl_.s_));
}

::google::protobuf::Metadata SpeedPoint::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PathPoint::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PathPoint>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PathPoint, _impl_._has_bits_);
};

PathPoint::PathPoint(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.common.PathPoint)
}
inline PROTOBUF_NDEBUG_INLINE PathPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::common::PathPoint& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        lane_id_(arena, from.lane_id_) {}

PathPoint::PathPoint(
    ::google::protobuf::Arena* arena,
    const PathPoint& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PathPoint* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, x_),
           offsetof(Impl_, y_derivative_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::y_derivative_));

  // @@protoc_insertion_point(copy_constructor:control.common.PathPoint)
}
inline PROTOBUF_NDEBUG_INLINE PathPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        lane_id_(arena) {}

inline void PathPoint::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, y_derivative_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::y_derivative_));
}
PathPoint::~PathPoint() {
  // @@protoc_insertion_point(destructor:control.common.PathPoint)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PathPoint::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.lane_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PathPoint::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &PathPoint::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PathPoint>(),
            ::google::protobuf::Message::GetNewImpl<PathPoint>(),
            ::google::protobuf::Message::GetClearImpl<PathPoint>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<PathPoint>(),
                ::google::protobuf::Message::GetSerializeImpl<PathPoint>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PathPoint, _impl_._cached_size_),
            false,
        },
        &PathPoint::kDescriptorMethods,
        &descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fpnc_5fpoint_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PathPoint::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 0, 48, 2> PathPoint::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PathPoint, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PathPoint_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::common::PathPoint>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional double x = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 1, 0, PROTOBUF_FIELD_OFFSET(PathPoint, _impl_.x_)}},
    // optional double y = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 2, 0, PROTOBUF_FIELD_OFFSET(PathPoint, _impl_.y_)}},
    // optional double z = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 3, 0, PROTOBUF_FIELD_OFFSET(PathPoint, _impl_.z_)}},
    // optional double theta = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 4, 0, PROTOBUF_FIELD_OFFSET(PathPoint, _impl_.theta_)}},
    // optional double kappa = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 5, 0, PROTOBUF_FIELD_OFFSET(PathPoint, _impl_.kappa_)}},
    // optional double s = 6;
    {::_pbi::TcParser::FastF64S1,
     {49, 6, 0, PROTOBUF_FIELD_OFFSET(PathPoint, _impl_.s_)}},
    // optional double dkappa = 7;
    {::_pbi::TcParser::FastF64S1,
     {57, 7, 0, PROTOBUF_FIELD_OFFSET(PathPoint, _impl_.dkappa_)}},
    // optional double ddkappa = 8;
    {::_pbi::TcParser::FastF64S1,
     {65, 8, 0, PROTOBUF_FIELD_OFFSET(PathPoint, _impl_.ddkappa_)}},
    // optional string lane_id = 9;
    {::_pbi::TcParser::FastSS1,
     {74, 0, 0, PROTOBUF_FIELD_OFFSET(PathPoint, _impl_.lane_id_)}},
    // optional double x_derivative = 10;
    {::_pbi::TcParser::FastF64S1,
     {81, 9, 0, PROTOBUF_FIELD_OFFSET(PathPoint, _impl_.x_derivative_)}},
    // optional double y_derivative = 11;
    {::_pbi::TcParser::FastF64S1,
     {89, 10, 0, PROTOBUF_FIELD_OFFSET(PathPoint, _impl_.y_derivative_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional double x = 1;
    {PROTOBUF_FIELD_OFFSET(PathPoint, _impl_.x_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double y = 2;
    {PROTOBUF_FIELD_OFFSET(PathPoint, _impl_.y_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double z = 3;
    {PROTOBUF_FIELD_OFFSET(PathPoint, _impl_.z_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double theta = 4;
    {PROTOBUF_FIELD_OFFSET(PathPoint, _impl_.theta_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double kappa = 5;
    {PROTOBUF_FIELD_OFFSET(PathPoint, _impl_.kappa_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double s = 6;
    {PROTOBUF_FIELD_OFFSET(PathPoint, _impl_.s_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double dkappa = 7;
    {PROTOBUF_FIELD_OFFSET(PathPoint, _impl_.dkappa_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double ddkappa = 8;
    {PROTOBUF_FIELD_OFFSET(PathPoint, _impl_.ddkappa_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional string lane_id = 9;
    {PROTOBUF_FIELD_OFFSET(PathPoint, _impl_.lane_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional double x_derivative = 10;
    {PROTOBUF_FIELD_OFFSET(PathPoint, _impl_.x_derivative_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double y_derivative = 11;
    {PROTOBUF_FIELD_OFFSET(PathPoint, _impl_.y_derivative_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\30\0\0\0\0\0\0\0\0\7\0\0\0\0\0\0"
    "control.common.PathPoint"
    "lane_id"
  }},
};

PROTOBUF_NOINLINE void PathPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:control.common.PathPoint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.lane_id_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&_impl_.x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.dkappa_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.dkappa_));
  }
  if (cached_has_bits & 0x00000700u) {
    ::memset(&_impl_.ddkappa_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.y_derivative_) -
        reinterpret_cast<char*>(&_impl_.ddkappa_)) + sizeof(_impl_.y_derivative_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PathPoint::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.common.PathPoint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional double x = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_x(), target);
  }

  // optional double y = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_y(), target);
  }

  // optional double z = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_z(), target);
  }

  // optional double theta = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_theta(), target);
  }

  // optional double kappa = 5;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        5, this->_internal_kappa(), target);
  }

  // optional double s = 6;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        6, this->_internal_s(), target);
  }

  // optional double dkappa = 7;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        7, this->_internal_dkappa(), target);
  }

  // optional double ddkappa = 8;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        8, this->_internal_ddkappa(), target);
  }

  // optional string lane_id = 9;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_lane_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "control.common.PathPoint.lane_id");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // optional double x_derivative = 10;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        10, this->_internal_x_derivative(), target);
  }

  // optional double y_derivative = 11;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        11, this->_internal_y_derivative(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.common.PathPoint)
  return target;
}

::size_t PathPoint::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.common.PathPoint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string lane_id = 9;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_lane_id());
    }
    // optional double x = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }
    // optional double y = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 9;
    }
    // optional double z = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 9;
    }
    // optional double theta = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 9;
    }
    // optional double kappa = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += 9;
    }
    // optional double s = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += 9;
    }
    // optional double dkappa = 7;
    if (cached_has_bits & 0x00000080u) {
      total_size += 9;
    }
  }
  if (cached_has_bits & 0x00000700u) {
    // optional double ddkappa = 8;
    if (cached_has_bits & 0x00000100u) {
      total_size += 9;
    }
    // optional double x_derivative = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 9;
    }
    // optional double y_derivative = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 9;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void PathPoint::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PathPoint*>(&to_msg);
  auto& from = static_cast<const PathPoint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.common.PathPoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_lane_id(from._internal_lane_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.x_ = from._impl_.x_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.y_ = from._impl_.y_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.z_ = from._impl_.z_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.theta_ = from._impl_.theta_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.kappa_ = from._impl_.kappa_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.s_ = from._impl_.s_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.dkappa_ = from._impl_.dkappa_;
    }
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.ddkappa_ = from._impl_.ddkappa_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.x_derivative_ = from._impl_.x_derivative_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.y_derivative_ = from._impl_.y_derivative_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PathPoint::CopyFrom(const PathPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.common.PathPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PathPoint::InternalSwap(PathPoint* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.lane_id_, &other->_impl_.lane_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PathPoint, _impl_.y_derivative_)
      + sizeof(PathPoint::_impl_.y_derivative_)
      - PROTOBUF_FIELD_OFFSET(PathPoint, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata PathPoint::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Path::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Path>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Path, _impl_._has_bits_);
};

Path::Path(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.common.Path)
}
inline PROTOBUF_NDEBUG_INLINE Path::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::common::Path& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        path_point_{visibility, arena, from.path_point_},
        name_(arena, from.name_) {}

Path::Path(
    ::google::protobuf::Arena* arena,
    const Path& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Path* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:control.common.Path)
}
inline PROTOBUF_NDEBUG_INLINE Path::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        path_point_{visibility, arena},
        name_(arena) {}

inline void Path::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Path::~Path() {
  // @@protoc_insertion_point(destructor:control.common.Path)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Path::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Path::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Path::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Path>(),
            ::google::protobuf::Message::GetNewImpl<Path>(),
            ::google::protobuf::Message::GetClearImpl<Path>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<Path>(),
                ::google::protobuf::Message::GetSerializeImpl<Path>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Path, _impl_._cached_size_),
            false,
        },
        &Path::kDescriptorMethods,
        &descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fpnc_5fpoint_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Path::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 32, 2> Path::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Path, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Path_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::common::Path>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .control.common.PathPoint path_point = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Path, _impl_.path_point_)}},
    // optional string name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Path, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(Path, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .control.common.PathPoint path_point = 2;
    {PROTOBUF_FIELD_OFFSET(Path, _impl_.path_point_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::common::PathPoint>()},
  }}, {{
    "\23\4\0\0\0\0\0\0"
    "control.common.Path"
    "name"
  }},
};

PROTOBUF_NOINLINE void Path::Clear() {
// @@protoc_insertion_point(message_clear_start:control.common.Path)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_point_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Path::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.common.Path)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "control.common.Path.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .control.common.PathPoint path_point = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_path_point_size());
       i < n; i++) {
    const auto& repfield = this->_internal_path_point().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.common.Path)
  return target;
}

::size_t Path::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.common.Path)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // repeated .control.common.PathPoint path_point = 2;
     {
      total_size += 1UL * this->_internal_path_point_size();
      for (const auto& msg : this->_internal_path_point()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // optional string name = 1;
    cached_has_bits = _impl_._has_bits_[0];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void Path::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Path*>(&to_msg);
  auto& from = static_cast<const Path&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.common.Path)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_path_point()->MergeFrom(
      from._internal_path_point());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Path::CopyFrom(const Path& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.common.Path)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Path::InternalSwap(Path* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.path_point_.InternalSwap(&other->_impl_.path_point_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata Path::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TrajectoryPoint::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TrajectoryPoint>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TrajectoryPoint, _impl_._has_bits_);
};

TrajectoryPoint::TrajectoryPoint(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.common.TrajectoryPoint)
}
inline PROTOBUF_NDEBUG_INLINE TrajectoryPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::common::TrajectoryPoint& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TrajectoryPoint::TrajectoryPoint(
    ::google::protobuf::Arena* arena,
    const TrajectoryPoint& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TrajectoryPoint* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.path_point_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::control::common::PathPoint>(
                              arena, *from._impl_.path_point_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, v_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, v_),
           offsetof(Impl_, steer_) -
               offsetof(Impl_, v_) +
               sizeof(Impl_::steer_));

  // @@protoc_insertion_point(copy_constructor:control.common.TrajectoryPoint)
}
inline PROTOBUF_NDEBUG_INLINE TrajectoryPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TrajectoryPoint::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, path_point_),
           0,
           offsetof(Impl_, steer_) -
               offsetof(Impl_, path_point_) +
               sizeof(Impl_::steer_));
}
TrajectoryPoint::~TrajectoryPoint() {
  // @@protoc_insertion_point(destructor:control.common.TrajectoryPoint)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TrajectoryPoint::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.path_point_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    TrajectoryPoint::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &TrajectoryPoint::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<TrajectoryPoint>(),
            ::google::protobuf::Message::GetNewImpl<TrajectoryPoint>(),
            ::google::protobuf::Message::GetClearImpl<TrajectoryPoint>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<TrajectoryPoint>(),
                ::google::protobuf::Message::GetSerializeImpl<TrajectoryPoint>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(TrajectoryPoint, _impl_._cached_size_),
            false,
        },
        &TrajectoryPoint::kDescriptorMethods,
        &descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fpnc_5fpoint_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* TrajectoryPoint::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 0, 2> TrajectoryPoint::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TrajectoryPoint, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TrajectoryPoint_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::common::TrajectoryPoint>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .control.common.PathPoint path_point = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TrajectoryPoint, _impl_.path_point_)}},
    // optional double v = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(TrajectoryPoint, _impl_.v_)}},
    // optional double a = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(TrajectoryPoint, _impl_.a_)}},
    // optional double relative_time = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 3, 0, PROTOBUF_FIELD_OFFSET(TrajectoryPoint, _impl_.relative_time_)}},
    // optional double da = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 4, 0, PROTOBUF_FIELD_OFFSET(TrajectoryPoint, _impl_.da_)}},
    // optional double steer = 6;
    {::_pbi::TcParser::FastF64S1,
     {49, 5, 0, PROTOBUF_FIELD_OFFSET(TrajectoryPoint, _impl_.steer_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .control.common.PathPoint path_point = 1;
    {PROTOBUF_FIELD_OFFSET(TrajectoryPoint, _impl_.path_point_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional double v = 2;
    {PROTOBUF_FIELD_OFFSET(TrajectoryPoint, _impl_.v_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double a = 3;
    {PROTOBUF_FIELD_OFFSET(TrajectoryPoint, _impl_.a_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double relative_time = 4;
    {PROTOBUF_FIELD_OFFSET(TrajectoryPoint, _impl_.relative_time_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double da = 5;
    {PROTOBUF_FIELD_OFFSET(TrajectoryPoint, _impl_.da_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double steer = 6;
    {PROTOBUF_FIELD_OFFSET(TrajectoryPoint, _impl_.steer_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::common::PathPoint>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void TrajectoryPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:control.common.TrajectoryPoint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.path_point_ != nullptr);
    _impl_.path_point_->Clear();
  }
  if (cached_has_bits & 0x0000003eu) {
    ::memset(&_impl_.v_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.steer_) -
        reinterpret_cast<char*>(&_impl_.v_)) + sizeof(_impl_.steer_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* TrajectoryPoint::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.common.TrajectoryPoint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .control.common.PathPoint path_point = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.path_point_, _impl_.path_point_->GetCachedSize(), target, stream);
  }

  // optional double v = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_v(), target);
  }

  // optional double a = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_a(), target);
  }

  // optional double relative_time = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_relative_time(), target);
  }

  // optional double da = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        5, this->_internal_da(), target);
  }

  // optional double steer = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        6, this->_internal_steer(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.common.TrajectoryPoint)
  return target;
}

::size_t TrajectoryPoint::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.common.TrajectoryPoint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional .control.common.PathPoint path_point = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.path_point_);
    }
    // optional double v = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }
    // optional double a = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 9;
    }
    // optional double relative_time = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 9;
    }
    // optional double da = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 9;
    }
    // optional double steer = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 9;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void TrajectoryPoint::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TrajectoryPoint*>(&to_msg);
  auto& from = static_cast<const TrajectoryPoint&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:control.common.TrajectoryPoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.path_point_ != nullptr);
      if (_this->_impl_.path_point_ == nullptr) {
        _this->_impl_.path_point_ =
            ::google::protobuf::Message::CopyConstruct<::control::common::PathPoint>(arena, *from._impl_.path_point_);
      } else {
        _this->_impl_.path_point_->MergeFrom(*from._impl_.path_point_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.v_ = from._impl_.v_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.a_ = from._impl_.a_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.relative_time_ = from._impl_.relative_time_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.da_ = from._impl_.da_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.steer_ = from._impl_.steer_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TrajectoryPoint::CopyFrom(const TrajectoryPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.common.TrajectoryPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TrajectoryPoint::InternalSwap(TrajectoryPoint* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TrajectoryPoint, _impl_.steer_)
      + sizeof(TrajectoryPoint::_impl_.steer_)
      - PROTOBUF_FIELD_OFFSET(TrajectoryPoint, _impl_.path_point_)>(
          reinterpret_cast<char*>(&_impl_.path_point_),
          reinterpret_cast<char*>(&other->_impl_.path_point_));
}

::google::protobuf::Metadata TrajectoryPoint::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Trajectory::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Trajectory>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Trajectory, _impl_._has_bits_);
};

Trajectory::Trajectory(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.common.Trajectory)
}
inline PROTOBUF_NDEBUG_INLINE Trajectory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::common::Trajectory& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        trajectory_point_{visibility, arena, from.trajectory_point_},
        name_(arena, from.name_) {}

Trajectory::Trajectory(
    ::google::protobuf::Arena* arena,
    const Trajectory& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Trajectory* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:control.common.Trajectory)
}
inline PROTOBUF_NDEBUG_INLINE Trajectory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        trajectory_point_{visibility, arena},
        name_(arena) {}

inline void Trajectory::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Trajectory::~Trajectory() {
  // @@protoc_insertion_point(destructor:control.common.Trajectory)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Trajectory::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Trajectory::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Trajectory::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Trajectory>(),
            ::google::protobuf::Message::GetNewImpl<Trajectory>(),
            ::google::protobuf::Message::GetClearImpl<Trajectory>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<Trajectory>(),
                ::google::protobuf::Message::GetSerializeImpl<Trajectory>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Trajectory, _impl_._cached_size_),
            false,
        },
        &Trajectory::kDescriptorMethods,
        &descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fpnc_5fpoint_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Trajectory::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 38, 2> Trajectory::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Trajectory, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Trajectory_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::common::Trajectory>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .control.common.TrajectoryPoint trajectory_point = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Trajectory, _impl_.trajectory_point_)}},
    // optional string name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Trajectory, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(Trajectory, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .control.common.TrajectoryPoint trajectory_point = 2;
    {PROTOBUF_FIELD_OFFSET(Trajectory, _impl_.trajectory_point_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::common::TrajectoryPoint>()},
  }}, {{
    "\31\4\0\0\0\0\0\0"
    "control.common.Trajectory"
    "name"
  }},
};

PROTOBUF_NOINLINE void Trajectory::Clear() {
// @@protoc_insertion_point(message_clear_start:control.common.Trajectory)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trajectory_point_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Trajectory::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.common.Trajectory)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "control.common.Trajectory.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .control.common.TrajectoryPoint trajectory_point = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_trajectory_point_size());
       i < n; i++) {
    const auto& repfield = this->_internal_trajectory_point().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.common.Trajectory)
  return target;
}

::size_t Trajectory::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.common.Trajectory)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // repeated .control.common.TrajectoryPoint trajectory_point = 2;
     {
      total_size += 1UL * this->_internal_trajectory_point_size();
      for (const auto& msg : this->_internal_trajectory_point()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // optional string name = 1;
    cached_has_bits = _impl_._has_bits_[0];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void Trajectory::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Trajectory*>(&to_msg);
  auto& from = static_cast<const Trajectory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.common.Trajectory)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_trajectory_point()->MergeFrom(
      from._internal_trajectory_point());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Trajectory::CopyFrom(const Trajectory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.common.Trajectory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Trajectory::InternalSwap(Trajectory* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.trajectory_point_.InternalSwap(&other->_impl_.trajectory_point_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata Trajectory::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class VehicleMotionPoint::_Internal {
 public:
  using HasBits =
      decltype(std::declval<VehicleMotionPoint>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(VehicleMotionPoint, _impl_._has_bits_);
};

VehicleMotionPoint::VehicleMotionPoint(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.common.VehicleMotionPoint)
}
inline PROTOBUF_NDEBUG_INLINE VehicleMotionPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::common::VehicleMotionPoint& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

VehicleMotionPoint::VehicleMotionPoint(
    ::google::protobuf::Arena* arena,
    const VehicleMotionPoint& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  VehicleMotionPoint* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.trajectory_point_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::control::common::TrajectoryPoint>(
                              arena, *from._impl_.trajectory_point_)
                        : nullptr;
  _impl_.steer_ = from._impl_.steer_;

  // @@protoc_insertion_point(copy_constructor:control.common.VehicleMotionPoint)
}
inline PROTOBUF_NDEBUG_INLINE VehicleMotionPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VehicleMotionPoint::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, trajectory_point_),
           0,
           offsetof(Impl_, steer_) -
               offsetof(Impl_, trajectory_point_) +
               sizeof(Impl_::steer_));
}
VehicleMotionPoint::~VehicleMotionPoint() {
  // @@protoc_insertion_point(destructor:control.common.VehicleMotionPoint)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VehicleMotionPoint::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.trajectory_point_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    VehicleMotionPoint::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &VehicleMotionPoint::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<VehicleMotionPoint>(),
            ::google::protobuf::Message::GetNewImpl<VehicleMotionPoint>(),
            ::google::protobuf::Message::GetClearImpl<VehicleMotionPoint>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<VehicleMotionPoint>(),
                ::google::protobuf::Message::GetSerializeImpl<VehicleMotionPoint>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(VehicleMotionPoint, _impl_._cached_size_),
            false,
        },
        &VehicleMotionPoint::kDescriptorMethods,
        &descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fpnc_5fpoint_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* VehicleMotionPoint::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> VehicleMotionPoint::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VehicleMotionPoint, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VehicleMotionPoint_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::common::VehicleMotionPoint>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional double steer = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(VehicleMotionPoint, _impl_.steer_)}},
    // optional .control.common.TrajectoryPoint trajectory_point = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VehicleMotionPoint, _impl_.trajectory_point_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .control.common.TrajectoryPoint trajectory_point = 1;
    {PROTOBUF_FIELD_OFFSET(VehicleMotionPoint, _impl_.trajectory_point_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional double steer = 2;
    {PROTOBUF_FIELD_OFFSET(VehicleMotionPoint, _impl_.steer_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::common::TrajectoryPoint>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void VehicleMotionPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:control.common.VehicleMotionPoint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.trajectory_point_ != nullptr);
    _impl_.trajectory_point_->Clear();
  }
  _impl_.steer_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* VehicleMotionPoint::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.common.VehicleMotionPoint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .control.common.TrajectoryPoint trajectory_point = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.trajectory_point_, _impl_.trajectory_point_->GetCachedSize(), target, stream);
  }

  // optional double steer = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_steer(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.common.VehicleMotionPoint)
  return target;
}

::size_t VehicleMotionPoint::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.common.VehicleMotionPoint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .control.common.TrajectoryPoint trajectory_point = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.trajectory_point_);
    }
    // optional double steer = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void VehicleMotionPoint::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VehicleMotionPoint*>(&to_msg);
  auto& from = static_cast<const VehicleMotionPoint&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:control.common.VehicleMotionPoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.trajectory_point_ != nullptr);
      if (_this->_impl_.trajectory_point_ == nullptr) {
        _this->_impl_.trajectory_point_ =
            ::google::protobuf::Message::CopyConstruct<::control::common::TrajectoryPoint>(arena, *from._impl_.trajectory_point_);
      } else {
        _this->_impl_.trajectory_point_->MergeFrom(*from._impl_.trajectory_point_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.steer_ = from._impl_.steer_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VehicleMotionPoint::CopyFrom(const VehicleMotionPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.common.VehicleMotionPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VehicleMotionPoint::InternalSwap(VehicleMotionPoint* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VehicleMotionPoint, _impl_.steer_)
      + sizeof(VehicleMotionPoint::_impl_.steer_)
      - PROTOBUF_FIELD_OFFSET(VehicleMotionPoint, _impl_.trajectory_point_)>(
          reinterpret_cast<char*>(&_impl_.trajectory_point_),
          reinterpret_cast<char*>(&other->_impl_.trajectory_point_));
}

::google::protobuf::Metadata VehicleMotionPoint::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class VehicleMotion::_Internal {
 public:
  using HasBits =
      decltype(std::declval<VehicleMotion>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(VehicleMotion, _impl_._has_bits_);
};

VehicleMotion::VehicleMotion(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.common.VehicleMotion)
}
inline PROTOBUF_NDEBUG_INLINE VehicleMotion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::common::VehicleMotion& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        vehicle_motion_point_{visibility, arena, from.vehicle_motion_point_},
        name_(arena, from.name_) {}

VehicleMotion::VehicleMotion(
    ::google::protobuf::Arena* arena,
    const VehicleMotion& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  VehicleMotion* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:control.common.VehicleMotion)
}
inline PROTOBUF_NDEBUG_INLINE VehicleMotion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        vehicle_motion_point_{visibility, arena},
        name_(arena) {}

inline void VehicleMotion::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
VehicleMotion::~VehicleMotion() {
  // @@protoc_insertion_point(destructor:control.common.VehicleMotion)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VehicleMotion::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    VehicleMotion::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &VehicleMotion::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<VehicleMotion>(),
            ::google::protobuf::Message::GetNewImpl<VehicleMotion>(),
            ::google::protobuf::Message::GetClearImpl<VehicleMotion>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<VehicleMotion>(),
                ::google::protobuf::Message::GetSerializeImpl<VehicleMotion>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(VehicleMotion, _impl_._cached_size_),
            false,
        },
        &VehicleMotion::kDescriptorMethods,
        &descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fpnc_5fpoint_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* VehicleMotion::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 41, 2> VehicleMotion::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VehicleMotion, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VehicleMotion_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::common::VehicleMotion>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .control.common.VehicleMotionPoint vehicle_motion_point = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(VehicleMotion, _impl_.vehicle_motion_point_)}},
    // optional string name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VehicleMotion, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(VehicleMotion, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .control.common.VehicleMotionPoint vehicle_motion_point = 2;
    {PROTOBUF_FIELD_OFFSET(VehicleMotion, _impl_.vehicle_motion_point_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::common::VehicleMotionPoint>()},
  }}, {{
    "\34\4\0\0\0\0\0\0"
    "control.common.VehicleMotion"
    "name"
  }},
};

PROTOBUF_NOINLINE void VehicleMotion::Clear() {
// @@protoc_insertion_point(message_clear_start:control.common.VehicleMotion)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vehicle_motion_point_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* VehicleMotion::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.common.VehicleMotion)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "control.common.VehicleMotion.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .control.common.VehicleMotionPoint vehicle_motion_point = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_vehicle_motion_point_size());
       i < n; i++) {
    const auto& repfield = this->_internal_vehicle_motion_point().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.common.VehicleMotion)
  return target;
}

::size_t VehicleMotion::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.common.VehicleMotion)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // repeated .control.common.VehicleMotionPoint vehicle_motion_point = 2;
     {
      total_size += 1UL * this->_internal_vehicle_motion_point_size();
      for (const auto& msg : this->_internal_vehicle_motion_point()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // optional string name = 1;
    cached_has_bits = _impl_._has_bits_[0];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void VehicleMotion::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VehicleMotion*>(&to_msg);
  auto& from = static_cast<const VehicleMotion&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.common.VehicleMotion)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_vehicle_motion_point()->MergeFrom(
      from._internal_vehicle_motion_point());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VehicleMotion::CopyFrom(const VehicleMotion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.common.VehicleMotion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VehicleMotion::InternalSwap(VehicleMotion* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.vehicle_motion_point_.InternalSwap(&other->_impl_.vehicle_motion_point_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata VehicleMotion::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace common
}  // namespace control
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fpnc_5fpoint_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
