// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: localization_msgs/localization.proto
// Protobuf C++ Version: 5.28.0-dev

#include "localization_msgs/localization.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace control {
namespace localization {

inline constexpr Uncertainty::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        position_std_dev_{nullptr},
        orientation_std_dev_{nullptr},
        linear_velocity_std_dev_{nullptr},
        linear_acceleration_std_dev_{nullptr},
        angular_velocity_std_dev_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Uncertainty::Uncertainty(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UncertaintyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UncertaintyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UncertaintyDefaultTypeInternal() {}
  union {
    Uncertainty _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UncertaintyDefaultTypeInternal _Uncertainty_default_instance_;

inline constexpr LocalizationStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        state_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        header_{nullptr},
        fusion_status_{static_cast< ::control::localization::MeasureState >(0)},
        gnss_status_{static_cast< ::control::localization::MeasureState >(0)},
        measurement_time_{0},
        lidar_status_{static_cast< ::control::localization::MeasureState >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR LocalizationStatus::LocalizationStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LocalizationStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocalizationStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocalizationStatusDefaultTypeInternal() {}
  union {
    LocalizationStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocalizationStatusDefaultTypeInternal _LocalizationStatus_default_instance_;

inline constexpr LocalizationEstimate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        trajectory_point_{},
        header_{nullptr},
        pose_{nullptr},
        uncertainty_{nullptr},
        msf_status_{nullptr},
        sensor_status_{nullptr},
        measurement_time_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LocalizationEstimate::LocalizationEstimate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LocalizationEstimateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocalizationEstimateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocalizationEstimateDefaultTypeInternal() {}
  union {
    LocalizationEstimate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocalizationEstimateDefaultTypeInternal _LocalizationEstimate_default_instance_;
}  // namespace localization
}  // namespace control
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_localization_5fmsgs_2flocalization_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_localization_5fmsgs_2flocalization_2eproto = nullptr;
const ::uint32_t
    TableStruct_localization_5fmsgs_2flocalization_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::control::localization::Uncertainty, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::localization::Uncertainty, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::localization::Uncertainty, _impl_.position_std_dev_),
        PROTOBUF_FIELD_OFFSET(::control::localization::Uncertainty, _impl_.orientation_std_dev_),
        PROTOBUF_FIELD_OFFSET(::control::localization::Uncertainty, _impl_.linear_velocity_std_dev_),
        PROTOBUF_FIELD_OFFSET(::control::localization::Uncertainty, _impl_.linear_acceleration_std_dev_),
        PROTOBUF_FIELD_OFFSET(::control::localization::Uncertainty, _impl_.angular_velocity_std_dev_),
        0,
        1,
        2,
        3,
        4,
        PROTOBUF_FIELD_OFFSET(::control::localization::LocalizationEstimate, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::localization::LocalizationEstimate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::localization::LocalizationEstimate, _impl_.header_),
        PROTOBUF_FIELD_OFFSET(::control::localization::LocalizationEstimate, _impl_.pose_),
        PROTOBUF_FIELD_OFFSET(::control::localization::LocalizationEstimate, _impl_.uncertainty_),
        PROTOBUF_FIELD_OFFSET(::control::localization::LocalizationEstimate, _impl_.measurement_time_),
        PROTOBUF_FIELD_OFFSET(::control::localization::LocalizationEstimate, _impl_.trajectory_point_),
        PROTOBUF_FIELD_OFFSET(::control::localization::LocalizationEstimate, _impl_.msf_status_),
        PROTOBUF_FIELD_OFFSET(::control::localization::LocalizationEstimate, _impl_.sensor_status_),
        0,
        1,
        2,
        5,
        ~0u,
        3,
        4,
        PROTOBUF_FIELD_OFFSET(::control::localization::LocalizationStatus, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::localization::LocalizationStatus, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::localization::LocalizationStatus, _impl_.header_),
        PROTOBUF_FIELD_OFFSET(::control::localization::LocalizationStatus, _impl_.fusion_status_),
        PROTOBUF_FIELD_OFFSET(::control::localization::LocalizationStatus, _impl_.gnss_status_),
        PROTOBUF_FIELD_OFFSET(::control::localization::LocalizationStatus, _impl_.lidar_status_),
        PROTOBUF_FIELD_OFFSET(::control::localization::LocalizationStatus, _impl_.measurement_time_),
        PROTOBUF_FIELD_OFFSET(::control::localization::LocalizationStatus, _impl_.state_message_),
        1,
        2,
        3,
        5,
        4,
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 13, -1, sizeof(::control::localization::Uncertainty)},
        {18, 33, -1, sizeof(::control::localization::LocalizationEstimate)},
        {40, 54, -1, sizeof(::control::localization::LocalizationStatus)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::control::localization::_Uncertainty_default_instance_._instance,
    &::control::localization::_LocalizationEstimate_default_instance_._instance,
    &::control::localization::_LocalizationStatus_default_instance_._instance,
};
const char descriptor_table_protodef_localization_5fmsgs_2flocalization_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n$localization_msgs/localization.proto\022\024"
    "control.localization\032#common_msgs/basic_"
    "msgs/header.proto\032%common_msgs/basic_msg"
    "s/geometry.proto\032&common_msgs/basic_msgs"
    "/pnc_point.proto\032+localization_msgs/loca"
    "lization_status.proto\032\034localization_msgs"
    "/pose.proto\"\251\002\n\013Uncertainty\0221\n\020position_"
    "std_dev\030\001 \001(\0132\027.control.common.Point3D\0224"
    "\n\023orientation_std_dev\030\002 \001(\0132\027.control.co"
    "mmon.Point3D\0228\n\027linear_velocity_std_dev\030"
    "\003 \001(\0132\027.control.common.Point3D\022<\n\033linear"
    "_acceleration_std_dev\030\004 \001(\0132\027.control.co"
    "mmon.Point3D\0229\n\030angular_velocity_std_dev"
    "\030\005 \001(\0132\027.control.common.Point3D\"\353\002\n\024Loca"
    "lizationEstimate\022&\n\006header\030\001 \001(\0132\026.contr"
    "ol.common.Header\022(\n\004pose\030\002 \001(\0132\032.control"
    ".localization.Pose\0226\n\013uncertainty\030\003 \001(\0132"
    "!.control.localization.Uncertainty\022\030\n\020me"
    "asurement_time\030\004 \001(\001\0229\n\020trajectory_point"
    "\030\005 \003(\0132\037.control.common.TrajectoryPoint\022"
    "3\n\nmsf_status\030\006 \001(\0132\037.control.localizati"
    "on.MsfStatus\022\?\n\rsensor_status\030\007 \001(\0132(.co"
    "ntrol.localization.MsfSensorMsgStatus\"\243\002"
    "\n\022LocalizationStatus\022&\n\006header\030\001 \001(\0132\026.c"
    "ontrol.common.Header\0229\n\rfusion_status\030\002 "
    "\001(\0162\".control.localization.MeasureState\022"
    ";\n\013gnss_status\030\003 \001(\0162\".control.localizat"
    "ion.MeasureStateB\002\030\001\022<\n\014lidar_status\030\004 \001"
    "(\0162\".control.localization.MeasureStateB\002"
    "\030\001\022\030\n\020measurement_time\030\005 \001(\001\022\025\n\rstate_me"
    "ssage\030\006 \001(\t*T\n\014MeasureState\022\006\n\002OK\020\000\022\014\n\010W"
    "ARNNING\020\001\022\t\n\005ERROR\020\002\022\022\n\016CRITICAL_ERROR\020\003"
    "\022\017\n\013FATAL_ERROR\020\004"
};
static const ::_pbi::DescriptorTable* const descriptor_table_localization_5fmsgs_2flocalization_2eproto_deps[5] =
    {
        &::descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto,
        &::descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fheader_2eproto,
        &::descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fpnc_5fpoint_2eproto,
        &::descriptor_table_localization_5fmsgs_2flocalization_5fstatus_2eproto,
        &::descriptor_table_localization_5fmsgs_2fpose_2eproto,
};
static ::absl::once_flag descriptor_table_localization_5fmsgs_2flocalization_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_localization_5fmsgs_2flocalization_2eproto = {
    false,
    false,
    1297,
    descriptor_table_protodef_localization_5fmsgs_2flocalization_2eproto,
    "localization_msgs/localization.proto",
    &descriptor_table_localization_5fmsgs_2flocalization_2eproto_once,
    descriptor_table_localization_5fmsgs_2flocalization_2eproto_deps,
    5,
    3,
    schemas,
    file_default_instances,
    TableStruct_localization_5fmsgs_2flocalization_2eproto::offsets,
    file_level_enum_descriptors_localization_5fmsgs_2flocalization_2eproto,
    file_level_service_descriptors_localization_5fmsgs_2flocalization_2eproto,
};
namespace control {
namespace localization {
const ::google::protobuf::EnumDescriptor* MeasureState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_localization_5fmsgs_2flocalization_2eproto);
  return file_level_enum_descriptors_localization_5fmsgs_2flocalization_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t MeasureState_internal_data_[] = {
    327680u, 0u, };
bool MeasureState_IsValid(int value) {
  return 0 <= value && value <= 4;
}
// ===================================================================

class Uncertainty::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Uncertainty>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Uncertainty, _impl_._has_bits_);
};

void Uncertainty::clear_position_std_dev() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_std_dev_ != nullptr) _impl_.position_std_dev_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Uncertainty::clear_orientation_std_dev() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.orientation_std_dev_ != nullptr) _impl_.orientation_std_dev_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void Uncertainty::clear_linear_velocity_std_dev() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.linear_velocity_std_dev_ != nullptr) _impl_.linear_velocity_std_dev_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void Uncertainty::clear_linear_acceleration_std_dev() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.linear_acceleration_std_dev_ != nullptr) _impl_.linear_acceleration_std_dev_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void Uncertainty::clear_angular_velocity_std_dev() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.angular_velocity_std_dev_ != nullptr) _impl_.angular_velocity_std_dev_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
Uncertainty::Uncertainty(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.localization.Uncertainty)
}
inline PROTOBUF_NDEBUG_INLINE Uncertainty::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::localization::Uncertainty& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Uncertainty::Uncertainty(
    ::google::protobuf::Arena* arena,
    const Uncertainty& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Uncertainty* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_std_dev_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::control::common::Point3D>(
                              arena, *from._impl_.position_std_dev_)
                        : nullptr;
  _impl_.orientation_std_dev_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::control::common::Point3D>(
                              arena, *from._impl_.orientation_std_dev_)
                        : nullptr;
  _impl_.linear_velocity_std_dev_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::control::common::Point3D>(
                              arena, *from._impl_.linear_velocity_std_dev_)
                        : nullptr;
  _impl_.linear_acceleration_std_dev_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::control::common::Point3D>(
                              arena, *from._impl_.linear_acceleration_std_dev_)
                        : nullptr;
  _impl_.angular_velocity_std_dev_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::control::common::Point3D>(
                              arena, *from._impl_.angular_velocity_std_dev_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:control.localization.Uncertainty)
}
inline PROTOBUF_NDEBUG_INLINE Uncertainty::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Uncertainty::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_std_dev_),
           0,
           offsetof(Impl_, angular_velocity_std_dev_) -
               offsetof(Impl_, position_std_dev_) +
               sizeof(Impl_::angular_velocity_std_dev_));
}
Uncertainty::~Uncertainty() {
  // @@protoc_insertion_point(destructor:control.localization.Uncertainty)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Uncertainty::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.position_std_dev_;
  delete _impl_.orientation_std_dev_;
  delete _impl_.linear_velocity_std_dev_;
  delete _impl_.linear_acceleration_std_dev_;
  delete _impl_.angular_velocity_std_dev_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Uncertainty::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Uncertainty::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Uncertainty>(),
            ::google::protobuf::Message::GetNewImpl<Uncertainty>(),
            ::google::protobuf::Message::GetClearImpl<Uncertainty>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<Uncertainty>(),
                ::google::protobuf::Message::GetSerializeImpl<Uncertainty>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Uncertainty, _impl_._cached_size_),
            false,
        },
        &Uncertainty::kDescriptorMethods,
        &descriptor_table_localization_5fmsgs_2flocalization_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Uncertainty::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 5, 0, 2> Uncertainty::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Uncertainty, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Uncertainty_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::localization::Uncertainty>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .control.common.Point3D position_std_dev = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Uncertainty, _impl_.position_std_dev_)}},
    // optional .control.common.Point3D orientation_std_dev = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Uncertainty, _impl_.orientation_std_dev_)}},
    // optional .control.common.Point3D linear_velocity_std_dev = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(Uncertainty, _impl_.linear_velocity_std_dev_)}},
    // optional .control.common.Point3D linear_acceleration_std_dev = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(Uncertainty, _impl_.linear_acceleration_std_dev_)}},
    // optional .control.common.Point3D angular_velocity_std_dev = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 4, PROTOBUF_FIELD_OFFSET(Uncertainty, _impl_.angular_velocity_std_dev_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .control.common.Point3D position_std_dev = 1;
    {PROTOBUF_FIELD_OFFSET(Uncertainty, _impl_.position_std_dev_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.common.Point3D orientation_std_dev = 2;
    {PROTOBUF_FIELD_OFFSET(Uncertainty, _impl_.orientation_std_dev_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.common.Point3D linear_velocity_std_dev = 3;
    {PROTOBUF_FIELD_OFFSET(Uncertainty, _impl_.linear_velocity_std_dev_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.common.Point3D linear_acceleration_std_dev = 4;
    {PROTOBUF_FIELD_OFFSET(Uncertainty, _impl_.linear_acceleration_std_dev_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.common.Point3D angular_velocity_std_dev = 5;
    {PROTOBUF_FIELD_OFFSET(Uncertainty, _impl_.angular_velocity_std_dev_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::common::Point3D>()},
    {::_pbi::TcParser::GetTable<::control::common::Point3D>()},
    {::_pbi::TcParser::GetTable<::control::common::Point3D>()},
    {::_pbi::TcParser::GetTable<::control::common::Point3D>()},
    {::_pbi::TcParser::GetTable<::control::common::Point3D>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Uncertainty::Clear() {
// @@protoc_insertion_point(message_clear_start:control.localization.Uncertainty)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.position_std_dev_ != nullptr);
      _impl_.position_std_dev_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.orientation_std_dev_ != nullptr);
      _impl_.orientation_std_dev_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.linear_velocity_std_dev_ != nullptr);
      _impl_.linear_velocity_std_dev_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.linear_acceleration_std_dev_ != nullptr);
      _impl_.linear_acceleration_std_dev_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.angular_velocity_std_dev_ != nullptr);
      _impl_.angular_velocity_std_dev_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Uncertainty::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.localization.Uncertainty)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .control.common.Point3D position_std_dev = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.position_std_dev_, _impl_.position_std_dev_->GetCachedSize(), target, stream);
  }

  // optional .control.common.Point3D orientation_std_dev = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.orientation_std_dev_, _impl_.orientation_std_dev_->GetCachedSize(), target, stream);
  }

  // optional .control.common.Point3D linear_velocity_std_dev = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.linear_velocity_std_dev_, _impl_.linear_velocity_std_dev_->GetCachedSize(), target, stream);
  }

  // optional .control.common.Point3D linear_acceleration_std_dev = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.linear_acceleration_std_dev_, _impl_.linear_acceleration_std_dev_->GetCachedSize(), target, stream);
  }

  // optional .control.common.Point3D angular_velocity_std_dev = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.angular_velocity_std_dev_, _impl_.angular_velocity_std_dev_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.localization.Uncertainty)
  return target;
}

::size_t Uncertainty::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.localization.Uncertainty)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional .control.common.Point3D position_std_dev = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.position_std_dev_);
    }
    // optional .control.common.Point3D orientation_std_dev = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.orientation_std_dev_);
    }
    // optional .control.common.Point3D linear_velocity_std_dev = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.linear_velocity_std_dev_);
    }
    // optional .control.common.Point3D linear_acceleration_std_dev = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.linear_acceleration_std_dev_);
    }
    // optional .control.common.Point3D angular_velocity_std_dev = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.angular_velocity_std_dev_);
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void Uncertainty::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Uncertainty*>(&to_msg);
  auto& from = static_cast<const Uncertainty&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:control.localization.Uncertainty)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.position_std_dev_ != nullptr);
      if (_this->_impl_.position_std_dev_ == nullptr) {
        _this->_impl_.position_std_dev_ =
            ::google::protobuf::Message::CopyConstruct<::control::common::Point3D>(arena, *from._impl_.position_std_dev_);
      } else {
        _this->_impl_.position_std_dev_->MergeFrom(*from._impl_.position_std_dev_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.orientation_std_dev_ != nullptr);
      if (_this->_impl_.orientation_std_dev_ == nullptr) {
        _this->_impl_.orientation_std_dev_ =
            ::google::protobuf::Message::CopyConstruct<::control::common::Point3D>(arena, *from._impl_.orientation_std_dev_);
      } else {
        _this->_impl_.orientation_std_dev_->MergeFrom(*from._impl_.orientation_std_dev_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.linear_velocity_std_dev_ != nullptr);
      if (_this->_impl_.linear_velocity_std_dev_ == nullptr) {
        _this->_impl_.linear_velocity_std_dev_ =
            ::google::protobuf::Message::CopyConstruct<::control::common::Point3D>(arena, *from._impl_.linear_velocity_std_dev_);
      } else {
        _this->_impl_.linear_velocity_std_dev_->MergeFrom(*from._impl_.linear_velocity_std_dev_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.linear_acceleration_std_dev_ != nullptr);
      if (_this->_impl_.linear_acceleration_std_dev_ == nullptr) {
        _this->_impl_.linear_acceleration_std_dev_ =
            ::google::protobuf::Message::CopyConstruct<::control::common::Point3D>(arena, *from._impl_.linear_acceleration_std_dev_);
      } else {
        _this->_impl_.linear_acceleration_std_dev_->MergeFrom(*from._impl_.linear_acceleration_std_dev_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.angular_velocity_std_dev_ != nullptr);
      if (_this->_impl_.angular_velocity_std_dev_ == nullptr) {
        _this->_impl_.angular_velocity_std_dev_ =
            ::google::protobuf::Message::CopyConstruct<::control::common::Point3D>(arena, *from._impl_.angular_velocity_std_dev_);
      } else {
        _this->_impl_.angular_velocity_std_dev_->MergeFrom(*from._impl_.angular_velocity_std_dev_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Uncertainty::CopyFrom(const Uncertainty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.localization.Uncertainty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Uncertainty::InternalSwap(Uncertainty* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Uncertainty, _impl_.angular_velocity_std_dev_)
      + sizeof(Uncertainty::_impl_.angular_velocity_std_dev_)
      - PROTOBUF_FIELD_OFFSET(Uncertainty, _impl_.position_std_dev_)>(
          reinterpret_cast<char*>(&_impl_.position_std_dev_),
          reinterpret_cast<char*>(&other->_impl_.position_std_dev_));
}

::google::protobuf::Metadata Uncertainty::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LocalizationEstimate::_Internal {
 public:
  using HasBits =
      decltype(std::declval<LocalizationEstimate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LocalizationEstimate, _impl_._has_bits_);
};

void LocalizationEstimate::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void LocalizationEstimate::clear_pose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pose_ != nullptr) _impl_.pose_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void LocalizationEstimate::clear_trajectory_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trajectory_point_.Clear();
}
void LocalizationEstimate::clear_msf_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.msf_status_ != nullptr) _impl_.msf_status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void LocalizationEstimate::clear_sensor_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sensor_status_ != nullptr) _impl_.sensor_status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
LocalizationEstimate::LocalizationEstimate(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.localization.LocalizationEstimate)
}
inline PROTOBUF_NDEBUG_INLINE LocalizationEstimate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::localization::LocalizationEstimate& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        trajectory_point_{visibility, arena, from.trajectory_point_} {}

LocalizationEstimate::LocalizationEstimate(
    ::google::protobuf::Arena* arena,
    const LocalizationEstimate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LocalizationEstimate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::control::common::Header>(
                              arena, *from._impl_.header_)
                        : nullptr;
  _impl_.pose_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::control::localization::Pose>(
                              arena, *from._impl_.pose_)
                        : nullptr;
  _impl_.uncertainty_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::control::localization::Uncertainty>(
                              arena, *from._impl_.uncertainty_)
                        : nullptr;
  _impl_.msf_status_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::control::localization::MsfStatus>(
                              arena, *from._impl_.msf_status_)
                        : nullptr;
  _impl_.sensor_status_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::control::localization::MsfSensorMsgStatus>(
                              arena, *from._impl_.sensor_status_)
                        : nullptr;
  _impl_.measurement_time_ = from._impl_.measurement_time_;

  // @@protoc_insertion_point(copy_constructor:control.localization.LocalizationEstimate)
}
inline PROTOBUF_NDEBUG_INLINE LocalizationEstimate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        trajectory_point_{visibility, arena} {}

inline void LocalizationEstimate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, header_),
           0,
           offsetof(Impl_, measurement_time_) -
               offsetof(Impl_, header_) +
               sizeof(Impl_::measurement_time_));
}
LocalizationEstimate::~LocalizationEstimate() {
  // @@protoc_insertion_point(destructor:control.localization.LocalizationEstimate)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LocalizationEstimate::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.header_;
  delete _impl_.pose_;
  delete _impl_.uncertainty_;
  delete _impl_.msf_status_;
  delete _impl_.sensor_status_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    LocalizationEstimate::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &LocalizationEstimate::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<LocalizationEstimate>(),
            ::google::protobuf::Message::GetNewImpl<LocalizationEstimate>(),
            ::google::protobuf::Message::GetClearImpl<LocalizationEstimate>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<LocalizationEstimate>(),
                ::google::protobuf::Message::GetSerializeImpl<LocalizationEstimate>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(LocalizationEstimate, _impl_._cached_size_),
            false,
        },
        &LocalizationEstimate::kDescriptorMethods,
        &descriptor_table_localization_5fmsgs_2flocalization_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* LocalizationEstimate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 6, 0, 2> LocalizationEstimate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LocalizationEstimate, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_LocalizationEstimate_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::localization::LocalizationEstimate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .control.common.Header header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LocalizationEstimate, _impl_.header_)}},
    // optional .control.localization.Pose pose = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(LocalizationEstimate, _impl_.pose_)}},
    // optional .control.localization.Uncertainty uncertainty = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(LocalizationEstimate, _impl_.uncertainty_)}},
    // optional double measurement_time = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 5, 0, PROTOBUF_FIELD_OFFSET(LocalizationEstimate, _impl_.measurement_time_)}},
    // repeated .control.common.TrajectoryPoint trajectory_point = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 3, PROTOBUF_FIELD_OFFSET(LocalizationEstimate, _impl_.trajectory_point_)}},
    // optional .control.localization.MsfStatus msf_status = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 3, 4, PROTOBUF_FIELD_OFFSET(LocalizationEstimate, _impl_.msf_status_)}},
    // optional .control.localization.MsfSensorMsgStatus sensor_status = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 4, 5, PROTOBUF_FIELD_OFFSET(LocalizationEstimate, _impl_.sensor_status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .control.common.Header header = 1;
    {PROTOBUF_FIELD_OFFSET(LocalizationEstimate, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.localization.Pose pose = 2;
    {PROTOBUF_FIELD_OFFSET(LocalizationEstimate, _impl_.pose_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.localization.Uncertainty uncertainty = 3;
    {PROTOBUF_FIELD_OFFSET(LocalizationEstimate, _impl_.uncertainty_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional double measurement_time = 4;
    {PROTOBUF_FIELD_OFFSET(LocalizationEstimate, _impl_.measurement_time_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // repeated .control.common.TrajectoryPoint trajectory_point = 5;
    {PROTOBUF_FIELD_OFFSET(LocalizationEstimate, _impl_.trajectory_point_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.localization.MsfStatus msf_status = 6;
    {PROTOBUF_FIELD_OFFSET(LocalizationEstimate, _impl_.msf_status_), _Internal::kHasBitsOffset + 3, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.localization.MsfSensorMsgStatus sensor_status = 7;
    {PROTOBUF_FIELD_OFFSET(LocalizationEstimate, _impl_.sensor_status_), _Internal::kHasBitsOffset + 4, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::common::Header>()},
    {::_pbi::TcParser::GetTable<::control::localization::Pose>()},
    {::_pbi::TcParser::GetTable<::control::localization::Uncertainty>()},
    {::_pbi::TcParser::GetTable<::control::common::TrajectoryPoint>()},
    {::_pbi::TcParser::GetTable<::control::localization::MsfStatus>()},
    {::_pbi::TcParser::GetTable<::control::localization::MsfSensorMsgStatus>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void LocalizationEstimate::Clear() {
// @@protoc_insertion_point(message_clear_start:control.localization.LocalizationEstimate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trajectory_point_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.header_ != nullptr);
      _impl_.header_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.pose_ != nullptr);
      _impl_.pose_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.uncertainty_ != nullptr);
      _impl_.uncertainty_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.msf_status_ != nullptr);
      _impl_.msf_status_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.sensor_status_ != nullptr);
      _impl_.sensor_status_->Clear();
    }
  }
  _impl_.measurement_time_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* LocalizationEstimate::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.localization.LocalizationEstimate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .control.common.Header header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.header_, _impl_.header_->GetCachedSize(), target, stream);
  }

  // optional .control.localization.Pose pose = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.pose_, _impl_.pose_->GetCachedSize(), target, stream);
  }

  // optional .control.localization.Uncertainty uncertainty = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.uncertainty_, _impl_.uncertainty_->GetCachedSize(), target, stream);
  }

  // optional double measurement_time = 4;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_measurement_time(), target);
  }

  // repeated .control.common.TrajectoryPoint trajectory_point = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_trajectory_point_size());
       i < n; i++) {
    const auto& repfield = this->_internal_trajectory_point().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional .control.localization.MsfStatus msf_status = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *_impl_.msf_status_, _impl_.msf_status_->GetCachedSize(), target, stream);
  }

  // optional .control.localization.MsfSensorMsgStatus sensor_status = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *_impl_.sensor_status_, _impl_.sensor_status_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.localization.LocalizationEstimate)
  return target;
}

::size_t LocalizationEstimate::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.localization.LocalizationEstimate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // repeated .control.common.TrajectoryPoint trajectory_point = 5;
     {
      total_size += 1UL * this->_internal_trajectory_point_size();
      for (const auto& msg : this->_internal_trajectory_point()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional .control.common.Header header = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.header_);
    }
    // optional .control.localization.Pose pose = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.pose_);
    }
    // optional .control.localization.Uncertainty uncertainty = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.uncertainty_);
    }
    // optional .control.localization.MsfStatus msf_status = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.msf_status_);
    }
    // optional .control.localization.MsfSensorMsgStatus sensor_status = 7;
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.sensor_status_);
    }
    // optional double measurement_time = 4;
    if (cached_has_bits & 0x00000020u) {
      total_size += 9;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void LocalizationEstimate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LocalizationEstimate*>(&to_msg);
  auto& from = static_cast<const LocalizationEstimate&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:control.localization.LocalizationEstimate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_trajectory_point()->MergeFrom(
      from._internal_trajectory_point());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.header_ != nullptr);
      if (_this->_impl_.header_ == nullptr) {
        _this->_impl_.header_ =
            ::google::protobuf::Message::CopyConstruct<::control::common::Header>(arena, *from._impl_.header_);
      } else {
        _this->_impl_.header_->MergeFrom(*from._impl_.header_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.pose_ != nullptr);
      if (_this->_impl_.pose_ == nullptr) {
        _this->_impl_.pose_ =
            ::google::protobuf::Message::CopyConstruct<::control::localization::Pose>(arena, *from._impl_.pose_);
      } else {
        _this->_impl_.pose_->MergeFrom(*from._impl_.pose_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.uncertainty_ != nullptr);
      if (_this->_impl_.uncertainty_ == nullptr) {
        _this->_impl_.uncertainty_ =
            ::google::protobuf::Message::CopyConstruct<::control::localization::Uncertainty>(arena, *from._impl_.uncertainty_);
      } else {
        _this->_impl_.uncertainty_->MergeFrom(*from._impl_.uncertainty_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.msf_status_ != nullptr);
      if (_this->_impl_.msf_status_ == nullptr) {
        _this->_impl_.msf_status_ =
            ::google::protobuf::Message::CopyConstruct<::control::localization::MsfStatus>(arena, *from._impl_.msf_status_);
      } else {
        _this->_impl_.msf_status_->MergeFrom(*from._impl_.msf_status_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.sensor_status_ != nullptr);
      if (_this->_impl_.sensor_status_ == nullptr) {
        _this->_impl_.sensor_status_ =
            ::google::protobuf::Message::CopyConstruct<::control::localization::MsfSensorMsgStatus>(arena, *from._impl_.sensor_status_);
      } else {
        _this->_impl_.sensor_status_->MergeFrom(*from._impl_.sensor_status_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.measurement_time_ = from._impl_.measurement_time_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LocalizationEstimate::CopyFrom(const LocalizationEstimate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.localization.LocalizationEstimate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LocalizationEstimate::InternalSwap(LocalizationEstimate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.trajectory_point_.InternalSwap(&other->_impl_.trajectory_point_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LocalizationEstimate, _impl_.measurement_time_)
      + sizeof(LocalizationEstimate::_impl_.measurement_time_)
      - PROTOBUF_FIELD_OFFSET(LocalizationEstimate, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::google::protobuf::Metadata LocalizationEstimate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LocalizationStatus::_Internal {
 public:
  using HasBits =
      decltype(std::declval<LocalizationStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LocalizationStatus, _impl_._has_bits_);
};

void LocalizationStatus::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
LocalizationStatus::LocalizationStatus(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.localization.LocalizationStatus)
}
inline PROTOBUF_NDEBUG_INLINE LocalizationStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::localization::LocalizationStatus& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        state_message_(arena, from.state_message_) {}

LocalizationStatus::LocalizationStatus(
    ::google::protobuf::Arena* arena,
    const LocalizationStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LocalizationStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::control::common::Header>(
                              arena, *from._impl_.header_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, fusion_status_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, fusion_status_),
           offsetof(Impl_, lidar_status_) -
               offsetof(Impl_, fusion_status_) +
               sizeof(Impl_::lidar_status_));

  // @@protoc_insertion_point(copy_constructor:control.localization.LocalizationStatus)
}
inline PROTOBUF_NDEBUG_INLINE LocalizationStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        state_message_(arena) {}

inline void LocalizationStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, header_),
           0,
           offsetof(Impl_, lidar_status_) -
               offsetof(Impl_, header_) +
               sizeof(Impl_::lidar_status_));
}
LocalizationStatus::~LocalizationStatus() {
  // @@protoc_insertion_point(destructor:control.localization.LocalizationStatus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LocalizationStatus::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.state_message_.Destroy();
  delete _impl_.header_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    LocalizationStatus::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &LocalizationStatus::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<LocalizationStatus>(),
            ::google::protobuf::Message::GetNewImpl<LocalizationStatus>(),
            ::google::protobuf::Message::GetClearImpl<LocalizationStatus>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<LocalizationStatus>(),
                ::google::protobuf::Message::GetSerializeImpl<LocalizationStatus>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(LocalizationStatus, _impl_._cached_size_),
            false,
        },
        &LocalizationStatus::kDescriptorMethods,
        &descriptor_table_localization_5fmsgs_2flocalization_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* LocalizationStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 4, 61, 2> LocalizationStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LocalizationStatus, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_LocalizationStatus_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::localization::LocalizationStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .control.common.Header header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(LocalizationStatus, _impl_.header_)}},
    // optional .control.localization.MeasureState fusion_status = 2;
    {::_pbi::TcParser::FastEr0S1,
     {16, 2, 4, PROTOBUF_FIELD_OFFSET(LocalizationStatus, _impl_.fusion_status_)}},
    // optional .control.localization.MeasureState gnss_status = 3 [deprecated = true];
    {::_pbi::TcParser::FastEr0S1,
     {24, 3, 4, PROTOBUF_FIELD_OFFSET(LocalizationStatus, _impl_.gnss_status_)}},
    // optional .control.localization.MeasureState lidar_status = 4 [deprecated = true];
    {::_pbi::TcParser::FastEr0S1,
     {32, 5, 4, PROTOBUF_FIELD_OFFSET(LocalizationStatus, _impl_.lidar_status_)}},
    // optional double measurement_time = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 4, 0, PROTOBUF_FIELD_OFFSET(LocalizationStatus, _impl_.measurement_time_)}},
    // optional string state_message = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(LocalizationStatus, _impl_.state_message_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .control.common.Header header = 1;
    {PROTOBUF_FIELD_OFFSET(LocalizationStatus, _impl_.header_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.localization.MeasureState fusion_status = 2;
    {PROTOBUF_FIELD_OFFSET(LocalizationStatus, _impl_.fusion_status_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional .control.localization.MeasureState gnss_status = 3 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(LocalizationStatus, _impl_.gnss_status_), _Internal::kHasBitsOffset + 3, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional .control.localization.MeasureState lidar_status = 4 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(LocalizationStatus, _impl_.lidar_status_), _Internal::kHasBitsOffset + 5, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional double measurement_time = 5;
    {PROTOBUF_FIELD_OFFSET(LocalizationStatus, _impl_.measurement_time_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional string state_message = 6;
    {PROTOBUF_FIELD_OFFSET(LocalizationStatus, _impl_.state_message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::common::Header>()},
    {0, 5},
    {0, 5},
    {0, 5},
  }}, {{
    "\47\0\0\0\0\0\15\0"
    "control.localization.LocalizationStatus"
    "state_message"
  }},
};

PROTOBUF_NOINLINE void LocalizationStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:control.localization.LocalizationStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.state_message_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.header_ != nullptr);
      _impl_.header_->Clear();
    }
  }
  if (cached_has_bits & 0x0000003cu) {
    ::memset(&_impl_.fusion_status_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.lidar_status_) -
        reinterpret_cast<char*>(&_impl_.fusion_status_)) + sizeof(_impl_.lidar_status_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* LocalizationStatus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.localization.LocalizationStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .control.common.Header header = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.header_, _impl_.header_->GetCachedSize(), target, stream);
  }

  // optional .control.localization.MeasureState fusion_status = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_fusion_status(), target);
  }

  // optional .control.localization.MeasureState gnss_status = 3 [deprecated = true];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_gnss_status(), target);
  }

  // optional .control.localization.MeasureState lidar_status = 4 [deprecated = true];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_lidar_status(), target);
  }

  // optional double measurement_time = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        5, this->_internal_measurement_time(), target);
  }

  // optional string state_message = 6;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_state_message();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "control.localization.LocalizationStatus.state_message");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.localization.LocalizationStatus)
  return target;
}

::size_t LocalizationStatus::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.localization.LocalizationStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string state_message = 6;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_state_message());
    }
    // optional .control.common.Header header = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.header_);
    }
    // optional .control.localization.MeasureState fusion_status = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_fusion_status());
    }
    // optional .control.localization.MeasureState gnss_status = 3 [deprecated = true];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_gnss_status());
    }
    // optional double measurement_time = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 9;
    }
    // optional .control.localization.MeasureState lidar_status = 4 [deprecated = true];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_lidar_status());
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void LocalizationStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LocalizationStatus*>(&to_msg);
  auto& from = static_cast<const LocalizationStatus&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:control.localization.LocalizationStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_state_message(from._internal_state_message());
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.header_ != nullptr);
      if (_this->_impl_.header_ == nullptr) {
        _this->_impl_.header_ =
            ::google::protobuf::Message::CopyConstruct<::control::common::Header>(arena, *from._impl_.header_);
      } else {
        _this->_impl_.header_->MergeFrom(*from._impl_.header_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.fusion_status_ = from._impl_.fusion_status_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.gnss_status_ = from._impl_.gnss_status_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.measurement_time_ = from._impl_.measurement_time_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.lidar_status_ = from._impl_.lidar_status_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LocalizationStatus::CopyFrom(const LocalizationStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.localization.LocalizationStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LocalizationStatus::InternalSwap(LocalizationStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.state_message_, &other->_impl_.state_message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LocalizationStatus, _impl_.lidar_status_)
      + sizeof(LocalizationStatus::_impl_.lidar_status_)
      - PROTOBUF_FIELD_OFFSET(LocalizationStatus, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::google::protobuf::Metadata LocalizationStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace localization
}  // namespace control
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_localization_5fmsgs_2flocalization_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
