// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: localization_msgs/localization_status.proto
// Protobuf C++ Version: 5.28.0-dev

#include "localization_msgs/localization_status.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace control {
namespace localization {

inline constexpr MsfStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        local_lidar_consistency_{static_cast< ::control::localization::LocalLidarConsistency >(0)},
        gnss_consistency_{static_cast< ::control::localization::GnssConsistency >(0)},
        local_lidar_status_{static_cast< ::control::localization::LocalLidarStatus >(0)},
        local_lidar_quality_{static_cast< ::control::localization::LocalLidarQuality >(0)},
        gnsspos_position_type_{static_cast< ::control::localization::GnssPositionType >(0)},
        msf_running_status_{static_cast< ::control::localization::MsfRunningStatus >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR MsfStatus::MsfStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MsfStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsfStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsfStatusDefaultTypeInternal() {}
  union {
    MsfStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsfStatusDefaultTypeInternal _MsfStatus_default_instance_;

inline constexpr MsfSensorMsgStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        imu_delay_status_{static_cast< ::control::localization::ImuMsgDelayStatus >(0)},
        imu_missing_status_{static_cast< ::control::localization::ImuMsgMissingStatus >(0)},
        imu_data_status_{static_cast< ::control::localization::ImuMsgDataStatus >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR MsfSensorMsgStatus::MsfSensorMsgStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MsfSensorMsgStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsfSensorMsgStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsfSensorMsgStatusDefaultTypeInternal() {}
  union {
    MsfSensorMsgStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsfSensorMsgStatusDefaultTypeInternal _MsfSensorMsgStatus_default_instance_;
}  // namespace localization
}  // namespace control
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_localization_5fmsgs_2flocalization_5fstatus_2eproto[9];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_localization_5fmsgs_2flocalization_5fstatus_2eproto = nullptr;
const ::uint32_t
    TableStruct_localization_5fmsgs_2flocalization_5fstatus_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::control::localization::MsfSensorMsgStatus, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::localization::MsfSensorMsgStatus, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::localization::MsfSensorMsgStatus, _impl_.imu_delay_status_),
        PROTOBUF_FIELD_OFFSET(::control::localization::MsfSensorMsgStatus, _impl_.imu_missing_status_),
        PROTOBUF_FIELD_OFFSET(::control::localization::MsfSensorMsgStatus, _impl_.imu_data_status_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::control::localization::MsfStatus, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::localization::MsfStatus, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::localization::MsfStatus, _impl_.local_lidar_consistency_),
        PROTOBUF_FIELD_OFFSET(::control::localization::MsfStatus, _impl_.gnss_consistency_),
        PROTOBUF_FIELD_OFFSET(::control::localization::MsfStatus, _impl_.local_lidar_status_),
        PROTOBUF_FIELD_OFFSET(::control::localization::MsfStatus, _impl_.local_lidar_quality_),
        PROTOBUF_FIELD_OFFSET(::control::localization::MsfStatus, _impl_.gnsspos_position_type_),
        PROTOBUF_FIELD_OFFSET(::control::localization::MsfStatus, _impl_.msf_running_status_),
        0,
        1,
        2,
        3,
        4,
        5,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::control::localization::MsfSensorMsgStatus)},
        {14, 28, -1, sizeof(::control::localization::MsfStatus)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::control::localization::_MsfSensorMsgStatus_default_instance_._instance,
    &::control::localization::_MsfStatus_default_instance_._instance,
};
const char descriptor_table_protodef_localization_5fmsgs_2flocalization_5fstatus_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n+localization_msgs/localization_status."
    "proto\022\024control.localization\"\337\001\n\022MsfSenso"
    "rMsgStatus\022A\n\020imu_delay_status\030\001 \001(\0162\'.c"
    "ontrol.localization.ImuMsgDelayStatus\022E\n"
    "\022imu_missing_status\030\002 \001(\0162).control.loca"
    "lization.ImuMsgMissingStatus\022\?\n\017imu_data"
    "_status\030\003 \001(\0162&.control.localization.Imu"
    "MsgDataStatus\"\257\003\n\tMsfStatus\022L\n\027local_lid"
    "ar_consistency\030\001 \001(\0162+.control.localizat"
    "ion.LocalLidarConsistency\022\?\n\020gnss_consis"
    "tency\030\002 \001(\0162%.control.localization.GnssC"
    "onsistency\022B\n\022local_lidar_status\030\003 \001(\0162&"
    ".control.localization.LocalLidarStatus\022D"
    "\n\023local_lidar_quality\030\004 \001(\0162\'.control.lo"
    "calization.LocalLidarQuality\022E\n\025gnsspos_"
    "position_type\030\005 \001(\0162&.control.localizati"
    "on.GnssPositionType\022B\n\022msf_running_statu"
    "s\030\006 \001(\0162&.control.localization.MsfRunnin"
    "gStatus*\242\002\n\020LocalLidarStatus\022\032\n\026MSF_LOCA"
    "L_LIDAR_NORMAL\020\000\022\037\n\033MSF_LOCAL_LIDAR_MAP_"
    "MISSING\020\001\022&\n\"MSF_LOCAL_LIDAR_EXTRINSICS_"
    "MISSING\020\002\022&\n\"MSF_LOCAL_LIDAR_MAP_LOADING"
    "_FAILED\020\003\022\035\n\031MSF_LOCAL_LIDAR_NO_OUTPUT\020\004"
    "\022\036\n\032MSF_LOCAL_LIDAR_OUT_OF_MAP\020\005\022\034\n\030MSF_"
    "LOCAL_LIDAR_NOT_GOOD\020\006\022$\n MSF_LOCAL_LIDA"
    "R_UNDEFINED_STATUS\020\007*\202\001\n\021LocalLidarQuali"
    "ty\022\035\n\031MSF_LOCAL_LIDAR_VERY_GOOD\020\000\022\030\n\024MSF"
    "_LOCAL_LIDAR_GOOD\020\001\022\033\n\027MSF_LOCAL_LIDAR_N"
    "OT_BAD\020\002\022\027\n\023MSF_LOCAL_LIDAR_BAD\020\003*\247\001\n\025Lo"
    "calLidarConsistency\022\"\n\036MSF_LOCAL_LIDAR_C"
    "ONSISTENCY_00\020\000\022\"\n\036MSF_LOCAL_LIDAR_CONSI"
    "STENCY_01\020\001\022\"\n\036MSF_LOCAL_LIDAR_CONSISTEN"
    "CY_02\020\002\022\"\n\036MSF_LOCAL_LIDAR_CONSISTENCY_0"
    "3\020\003*\205\001\n\017GnssConsistency\022\033\n\027MSF_GNSS_CONS"
    "ISTENCY_00\020\000\022\033\n\027MSF_GNSS_CONSISTENCY_01\020"
    "\001\022\033\n\027MSF_GNSS_CONSISTENCY_02\020\002\022\033\n\027MSF_GN"
    "SS_CONSISTENCY_03\020\003*\261\004\n\020GnssPositionType"
    "\022\010\n\004NONE\020\000\022\014\n\010FIXEDPOS\020\001\022\017\n\013FIXEDHEIGHT\020"
    "\002\022\r\n\tFLOATCONV\020\004\022\014\n\010WIDELANE\020\005\022\016\n\nNARROW"
    "LANE\020\006\022\024\n\020DOPPLER_VELOCITY\020\010\022\n\n\006SINGLE\020\020"
    "\022\013\n\007PSRDIFF\020\021\022\010\n\004WAAS\020\022\022\016\n\nPROPOGATED\020\023\022"
    "\014\n\010OMNISTAR\020\024\022\014\n\010L1_FLOAT\020 \022\022\n\016IONOFREE_"
    "FLOAT\020!\022\020\n\014NARROW_FLOAT\020\"\022\n\n\006L1_INT\0200\022\014\n"
    "\010WIDE_INT\0201\022\016\n\nNARROW_INT\0202\022\022\n\016RTK_DIREC"
    "T_INS\0203\022\014\n\010INS_SBAS\0204\022\r\n\tINS_PSRSP\0205\022\017\n\013"
    "INS_PSRDIFF\0206\022\020\n\014INS_RTKFLOAT\0207\022\020\n\014INS_R"
    "TKFIXED\0208\022\020\n\014INS_OMNISTAR\0209\022\023\n\017INS_OMNIS"
    "TAR_HP\020:\022\023\n\017INS_OMNISTAR_XP\020;\022\017\n\013OMNISTA"
    "R_HP\020@\022\017\n\013OMNISTAR_XP\020A\022\022\n\016PPP_CONVERGIN"
    "G\020D\022\007\n\003PPP\020E\022\026\n\022INS_PPP_Converging\020I\022\013\n\007"
    "INS_PPP\020J\022\014\n\010MSG_LOSS\020[*t\n\021ImuMsgDelaySt"
    "atus\022\024\n\020IMU_DELAY_NORMAL\020\000\022\017\n\013IMU_DELAY_"
    "1\020\001\022\017\n\013IMU_DELAY_2\020\002\022\017\n\013IMU_DELAY_3\020\003\022\026\n"
    "\022IMU_DELAY_ABNORMAL\020\004*\246\001\n\023ImuMsgMissingS"
    "tatus\022\026\n\022IMU_MISSING_NORMAL\020\000\022\021\n\rIMU_MIS"
    "SING_1\020\001\022\021\n\rIMU_MISSING_2\020\002\022\021\n\rIMU_MISSI"
    "NG_3\020\003\022\021\n\rIMU_MISSING_4\020\004\022\021\n\rIMU_MISSING"
    "_5\020\005\022\030\n\024IMU_MISSING_ABNORMAL\020\006*R\n\020ImuMsg"
    "DataStatus\022\023\n\017IMU_DATA_NORMAL\020\000\022\025\n\021IMU_D"
    "ATA_ABNORMAL\020\001\022\022\n\016IMU_DATA_OTHER\020\002*\254\004\n\020M"
    "sfRunningStatus\022\026\n\022MSF_SOL_LIDAR_GNSS\020\000\022"
    "\022\n\016MSF_SOL_X_GNSS\020\001\022\023\n\017MSF_SOL_LIDAR_X\020\002"
    "\022\024\n\020MSF_SOL_LIDAR_XX\020\003\022\025\n\021MSF_SOL_LIDAR_"
    "XXX\020\004\022\017\n\013MSF_SOL_X_X\020\005\022\020\n\014MSF_SOL_X_XX\020\006"
    "\022\021\n\rMSF_SOL_X_XXX\020\007\022\027\n\023MSF_SSOL_LIDAR_GN"
    "SS\020\010\022\023\n\017MSF_SSOL_X_GNSS\020\t\022\024\n\020MSF_SSOL_LI"
    "DAR_X\020\n\022\025\n\021MSF_SSOL_LIDAR_XX\020\013\022\026\n\022MSF_SS"
    "OL_LIDAR_XXX\020\014\022\020\n\014MSF_SSOL_X_X\020\r\022\021\n\rMSF_"
    "SSOL_X_XX\020\016\022\022\n\016MSF_SSOL_X_XXX\020\017\022\030\n\024MSF_N"
    "OSOL_LIDAR_GNSS\020\020\022\024\n\020MSF_NOSOL_X_GNSS\020\021\022"
    "\025\n\021MSF_NOSOL_LIDAR_X\020\022\022\026\n\022MSF_NOSOL_LIDA"
    "R_XX\020\023\022\027\n\023MSF_NOSOL_LIDAR_XXX\020\024\022\021\n\rMSF_N"
    "OSOL_X_X\020\025\022\022\n\016MSF_NOSOL_X_XX\020\026\022\023\n\017MSF_NO"
    "SOL_X_XXX\020\027\022\024\n\020MSF_RUNNING_INIT\020\030"
};
static ::absl::once_flag descriptor_table_localization_5fmsgs_2flocalization_5fstatus_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_localization_5fmsgs_2flocalization_5fstatus_2eproto = {
    false,
    false,
    2953,
    descriptor_table_protodef_localization_5fmsgs_2flocalization_5fstatus_2eproto,
    "localization_msgs/localization_status.proto",
    &descriptor_table_localization_5fmsgs_2flocalization_5fstatus_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_localization_5fmsgs_2flocalization_5fstatus_2eproto::offsets,
    file_level_enum_descriptors_localization_5fmsgs_2flocalization_5fstatus_2eproto,
    file_level_service_descriptors_localization_5fmsgs_2flocalization_5fstatus_2eproto,
};
namespace control {
namespace localization {
const ::google::protobuf::EnumDescriptor* LocalLidarStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_localization_5fmsgs_2flocalization_5fstatus_2eproto);
  return file_level_enum_descriptors_localization_5fmsgs_2flocalization_5fstatus_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t LocalLidarStatus_internal_data_[] = {
    524288u, 0u, };
bool LocalLidarStatus_IsValid(int value) {
  return 0 <= value && value <= 7;
}
const ::google::protobuf::EnumDescriptor* LocalLidarQuality_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_localization_5fmsgs_2flocalization_5fstatus_2eproto);
  return file_level_enum_descriptors_localization_5fmsgs_2flocalization_5fstatus_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t LocalLidarQuality_internal_data_[] = {
    262144u, 0u, };
bool LocalLidarQuality_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* LocalLidarConsistency_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_localization_5fmsgs_2flocalization_5fstatus_2eproto);
  return file_level_enum_descriptors_localization_5fmsgs_2flocalization_5fstatus_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t LocalLidarConsistency_internal_data_[] = {
    262144u, 0u, };
bool LocalLidarConsistency_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* GnssConsistency_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_localization_5fmsgs_2flocalization_5fstatus_2eproto);
  return file_level_enum_descriptors_localization_5fmsgs_2flocalization_5fstatus_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t GnssConsistency_internal_data_[] = {
    262144u, 0u, };
bool GnssConsistency_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* GnssPositionType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_localization_5fmsgs_2flocalization_5fstatus_2eproto);
  return file_level_enum_descriptors_localization_5fmsgs_2flocalization_5fstatus_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t GnssPositionType_internal_data_[] = {
    196608u, 96u, 3758350382u, 1644158976u, 16777414u, };
bool GnssPositionType_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, GnssPositionType_internal_data_);
}
const ::google::protobuf::EnumDescriptor* ImuMsgDelayStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_localization_5fmsgs_2flocalization_5fstatus_2eproto);
  return file_level_enum_descriptors_localization_5fmsgs_2flocalization_5fstatus_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t ImuMsgDelayStatus_internal_data_[] = {
    327680u, 0u, };
bool ImuMsgDelayStatus_IsValid(int value) {
  return 0 <= value && value <= 4;
}
const ::google::protobuf::EnumDescriptor* ImuMsgMissingStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_localization_5fmsgs_2flocalization_5fstatus_2eproto);
  return file_level_enum_descriptors_localization_5fmsgs_2flocalization_5fstatus_2eproto[6];
}
PROTOBUF_CONSTINIT const uint32_t ImuMsgMissingStatus_internal_data_[] = {
    458752u, 0u, };
bool ImuMsgMissingStatus_IsValid(int value) {
  return 0 <= value && value <= 6;
}
const ::google::protobuf::EnumDescriptor* ImuMsgDataStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_localization_5fmsgs_2flocalization_5fstatus_2eproto);
  return file_level_enum_descriptors_localization_5fmsgs_2flocalization_5fstatus_2eproto[7];
}
PROTOBUF_CONSTINIT const uint32_t ImuMsgDataStatus_internal_data_[] = {
    196608u, 0u, };
bool ImuMsgDataStatus_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* MsfRunningStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_localization_5fmsgs_2flocalization_5fstatus_2eproto);
  return file_level_enum_descriptors_localization_5fmsgs_2flocalization_5fstatus_2eproto[8];
}
PROTOBUF_CONSTINIT const uint32_t MsfRunningStatus_internal_data_[] = {
    1638400u, 0u, };
bool MsfRunningStatus_IsValid(int value) {
  return 0 <= value && value <= 24;
}
// ===================================================================

class MsfSensorMsgStatus::_Internal {
 public:
  using HasBits =
      decltype(std::declval<MsfSensorMsgStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MsfSensorMsgStatus, _impl_._has_bits_);
};

MsfSensorMsgStatus::MsfSensorMsgStatus(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.localization.MsfSensorMsgStatus)
}
MsfSensorMsgStatus::MsfSensorMsgStatus(
    ::google::protobuf::Arena* arena, const MsfSensorMsgStatus& from)
    : MsfSensorMsgStatus(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MsfSensorMsgStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MsfSensorMsgStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, imu_delay_status_),
           0,
           offsetof(Impl_, imu_data_status_) -
               offsetof(Impl_, imu_delay_status_) +
               sizeof(Impl_::imu_data_status_));
}
MsfSensorMsgStatus::~MsfSensorMsgStatus() {
  // @@protoc_insertion_point(destructor:control.localization.MsfSensorMsgStatus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MsfSensorMsgStatus::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    MsfSensorMsgStatus::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &MsfSensorMsgStatus::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<MsfSensorMsgStatus>(),
            ::google::protobuf::Message::GetNewImpl<MsfSensorMsgStatus>(),
            ::google::protobuf::Message::GetClearImpl<MsfSensorMsgStatus>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<MsfSensorMsgStatus>(),
                ::google::protobuf::Message::GetSerializeImpl<MsfSensorMsgStatus>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(MsfSensorMsgStatus, _impl_._cached_size_),
            false,
        },
        &MsfSensorMsgStatus::kDescriptorMethods,
        &descriptor_table_localization_5fmsgs_2flocalization_5fstatus_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* MsfSensorMsgStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> MsfSensorMsgStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MsfSensorMsgStatus, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_MsfSensorMsgStatus_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::localization::MsfSensorMsgStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .control.localization.ImuMsgDelayStatus imu_delay_status = 1;
    {::_pbi::TcParser::FastEr0S1,
     {8, 0, 4, PROTOBUF_FIELD_OFFSET(MsfSensorMsgStatus, _impl_.imu_delay_status_)}},
    // optional .control.localization.ImuMsgMissingStatus imu_missing_status = 2;
    {::_pbi::TcParser::FastEr0S1,
     {16, 1, 6, PROTOBUF_FIELD_OFFSET(MsfSensorMsgStatus, _impl_.imu_missing_status_)}},
    // optional .control.localization.ImuMsgDataStatus imu_data_status = 3;
    {::_pbi::TcParser::FastEr0S1,
     {24, 2, 2, PROTOBUF_FIELD_OFFSET(MsfSensorMsgStatus, _impl_.imu_data_status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .control.localization.ImuMsgDelayStatus imu_delay_status = 1;
    {PROTOBUF_FIELD_OFFSET(MsfSensorMsgStatus, _impl_.imu_delay_status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional .control.localization.ImuMsgMissingStatus imu_missing_status = 2;
    {PROTOBUF_FIELD_OFFSET(MsfSensorMsgStatus, _impl_.imu_missing_status_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional .control.localization.ImuMsgDataStatus imu_data_status = 3;
    {PROTOBUF_FIELD_OFFSET(MsfSensorMsgStatus, _impl_.imu_data_status_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {0, 5},
    {0, 7},
    {0, 3},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void MsfSensorMsgStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:control.localization.MsfSensorMsgStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.imu_delay_status_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.imu_data_status_) -
        reinterpret_cast<char*>(&_impl_.imu_delay_status_)) + sizeof(_impl_.imu_data_status_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* MsfSensorMsgStatus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.localization.MsfSensorMsgStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .control.localization.ImuMsgDelayStatus imu_delay_status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_imu_delay_status(), target);
  }

  // optional .control.localization.ImuMsgMissingStatus imu_missing_status = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_imu_missing_status(), target);
  }

  // optional .control.localization.ImuMsgDataStatus imu_data_status = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_imu_data_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.localization.MsfSensorMsgStatus)
  return target;
}

::size_t MsfSensorMsgStatus::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.localization.MsfSensorMsgStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .control.localization.ImuMsgDelayStatus imu_delay_status = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_imu_delay_status());
    }
    // optional .control.localization.ImuMsgMissingStatus imu_missing_status = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_imu_missing_status());
    }
    // optional .control.localization.ImuMsgDataStatus imu_data_status = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_imu_data_status());
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void MsfSensorMsgStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MsfSensorMsgStatus*>(&to_msg);
  auto& from = static_cast<const MsfSensorMsgStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.localization.MsfSensorMsgStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.imu_delay_status_ = from._impl_.imu_delay_status_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.imu_missing_status_ = from._impl_.imu_missing_status_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.imu_data_status_ = from._impl_.imu_data_status_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MsfSensorMsgStatus::CopyFrom(const MsfSensorMsgStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.localization.MsfSensorMsgStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MsfSensorMsgStatus::InternalSwap(MsfSensorMsgStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MsfSensorMsgStatus, _impl_.imu_data_status_)
      + sizeof(MsfSensorMsgStatus::_impl_.imu_data_status_)
      - PROTOBUF_FIELD_OFFSET(MsfSensorMsgStatus, _impl_.imu_delay_status_)>(
          reinterpret_cast<char*>(&_impl_.imu_delay_status_),
          reinterpret_cast<char*>(&other->_impl_.imu_delay_status_));
}

::google::protobuf::Metadata MsfSensorMsgStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MsfStatus::_Internal {
 public:
  using HasBits =
      decltype(std::declval<MsfStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MsfStatus, _impl_._has_bits_);
};

MsfStatus::MsfStatus(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.localization.MsfStatus)
}
MsfStatus::MsfStatus(
    ::google::protobuf::Arena* arena, const MsfStatus& from)
    : MsfStatus(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MsfStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MsfStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, local_lidar_consistency_),
           0,
           offsetof(Impl_, msf_running_status_) -
               offsetof(Impl_, local_lidar_consistency_) +
               sizeof(Impl_::msf_running_status_));
}
MsfStatus::~MsfStatus() {
  // @@protoc_insertion_point(destructor:control.localization.MsfStatus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MsfStatus::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    MsfStatus::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &MsfStatus::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<MsfStatus>(),
            ::google::protobuf::Message::GetNewImpl<MsfStatus>(),
            ::google::protobuf::Message::GetClearImpl<MsfStatus>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<MsfStatus>(),
                ::google::protobuf::Message::GetSerializeImpl<MsfStatus>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(MsfStatus, _impl_._cached_size_),
            false,
        },
        &MsfStatus::kDescriptorMethods,
        &descriptor_table_localization_5fmsgs_2flocalization_5fstatus_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* MsfStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 6, 0, 2> MsfStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MsfStatus, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_MsfStatus_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::localization::MsfStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .control.localization.LocalLidarConsistency local_lidar_consistency = 1;
    {::_pbi::TcParser::FastEr0S1,
     {8, 0, 3, PROTOBUF_FIELD_OFFSET(MsfStatus, _impl_.local_lidar_consistency_)}},
    // optional .control.localization.GnssConsistency gnss_consistency = 2;
    {::_pbi::TcParser::FastEr0S1,
     {16, 1, 3, PROTOBUF_FIELD_OFFSET(MsfStatus, _impl_.gnss_consistency_)}},
    // optional .control.localization.LocalLidarStatus local_lidar_status = 3;
    {::_pbi::TcParser::FastEr0S1,
     {24, 2, 7, PROTOBUF_FIELD_OFFSET(MsfStatus, _impl_.local_lidar_status_)}},
    // optional .control.localization.LocalLidarQuality local_lidar_quality = 4;
    {::_pbi::TcParser::FastEr0S1,
     {32, 3, 3, PROTOBUF_FIELD_OFFSET(MsfStatus, _impl_.local_lidar_quality_)}},
    // optional .control.localization.GnssPositionType gnsspos_position_type = 5;
    {::_pbi::TcParser::FastEvS1,
     {40, 4, 4, PROTOBUF_FIELD_OFFSET(MsfStatus, _impl_.gnsspos_position_type_)}},
    // optional .control.localization.MsfRunningStatus msf_running_status = 6;
    {::_pbi::TcParser::FastEr0S1,
     {48, 5, 24, PROTOBUF_FIELD_OFFSET(MsfStatus, _impl_.msf_running_status_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .control.localization.LocalLidarConsistency local_lidar_consistency = 1;
    {PROTOBUF_FIELD_OFFSET(MsfStatus, _impl_.local_lidar_consistency_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional .control.localization.GnssConsistency gnss_consistency = 2;
    {PROTOBUF_FIELD_OFFSET(MsfStatus, _impl_.gnss_consistency_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional .control.localization.LocalLidarStatus local_lidar_status = 3;
    {PROTOBUF_FIELD_OFFSET(MsfStatus, _impl_.local_lidar_status_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional .control.localization.LocalLidarQuality local_lidar_quality = 4;
    {PROTOBUF_FIELD_OFFSET(MsfStatus, _impl_.local_lidar_quality_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional .control.localization.GnssPositionType gnsspos_position_type = 5;
    {PROTOBUF_FIELD_OFFSET(MsfStatus, _impl_.gnsspos_position_type_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional .control.localization.MsfRunningStatus msf_running_status = 6;
    {PROTOBUF_FIELD_OFFSET(MsfStatus, _impl_.msf_running_status_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {0, 4},
    {0, 4},
    {0, 8},
    {0, 4},
    {::_pbi::FieldAuxEnumData{}, ::control::localization::GnssPositionType_internal_data_},
    {0, 25},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void MsfStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:control.localization.MsfStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&_impl_.local_lidar_consistency_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.msf_running_status_) -
        reinterpret_cast<char*>(&_impl_.local_lidar_consistency_)) + sizeof(_impl_.msf_running_status_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* MsfStatus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.localization.MsfStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .control.localization.LocalLidarConsistency local_lidar_consistency = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_local_lidar_consistency(), target);
  }

  // optional .control.localization.GnssConsistency gnss_consistency = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_gnss_consistency(), target);
  }

  // optional .control.localization.LocalLidarStatus local_lidar_status = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_local_lidar_status(), target);
  }

  // optional .control.localization.LocalLidarQuality local_lidar_quality = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_local_lidar_quality(), target);
  }

  // optional .control.localization.GnssPositionType gnsspos_position_type = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        5, this->_internal_gnsspos_position_type(), target);
  }

  // optional .control.localization.MsfRunningStatus msf_running_status = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        6, this->_internal_msf_running_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.localization.MsfStatus)
  return target;
}

::size_t MsfStatus::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.localization.MsfStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional .control.localization.LocalLidarConsistency local_lidar_consistency = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_local_lidar_consistency());
    }
    // optional .control.localization.GnssConsistency gnss_consistency = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_gnss_consistency());
    }
    // optional .control.localization.LocalLidarStatus local_lidar_status = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_local_lidar_status());
    }
    // optional .control.localization.LocalLidarQuality local_lidar_quality = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_local_lidar_quality());
    }
    // optional .control.localization.GnssPositionType gnsspos_position_type = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_gnsspos_position_type());
    }
    // optional .control.localization.MsfRunningStatus msf_running_status = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_msf_running_status());
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void MsfStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MsfStatus*>(&to_msg);
  auto& from = static_cast<const MsfStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.localization.MsfStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.local_lidar_consistency_ = from._impl_.local_lidar_consistency_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.gnss_consistency_ = from._impl_.gnss_consistency_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.local_lidar_status_ = from._impl_.local_lidar_status_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.local_lidar_quality_ = from._impl_.local_lidar_quality_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.gnsspos_position_type_ = from._impl_.gnsspos_position_type_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.msf_running_status_ = from._impl_.msf_running_status_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MsfStatus::CopyFrom(const MsfStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.localization.MsfStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MsfStatus::InternalSwap(MsfStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MsfStatus, _impl_.msf_running_status_)
      + sizeof(MsfStatus::_impl_.msf_running_status_)
      - PROTOBUF_FIELD_OFFSET(MsfStatus, _impl_.local_lidar_consistency_)>(
          reinterpret_cast<char*>(&_impl_.local_lidar_consistency_),
          reinterpret_cast<char*>(&other->_impl_.local_lidar_consistency_));
}

::google::protobuf::Metadata MsfStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace localization
}  // namespace control
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_localization_5fmsgs_2flocalization_5fstatus_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
