// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: control_base/pid_conf.proto
// Protobuf C++ Version: 5.28.0-dev

#include "control_base/pid_conf.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace control {

inline constexpr PidConf::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        integrator_saturation_level_{0},
        kp_{0},
        ki_{0},
        kd_{0},
        kaw_{0},
        output_saturation_level_{0},
        integrator_enable_{false} {}

template <typename>
PROTOBUF_CONSTEXPR PidConf::PidConf(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PidConfDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PidConfDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PidConfDefaultTypeInternal() {}
  union {
    PidConf _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PidConfDefaultTypeInternal _PidConf_default_instance_;
}  // namespace control
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_control_5fbase_2fpid_5fconf_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_control_5fbase_2fpid_5fconf_2eproto = nullptr;
const ::uint32_t
    TableStruct_control_5fbase_2fpid_5fconf_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::control::PidConf, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::PidConf, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::PidConf, _impl_.integrator_enable_),
        PROTOBUF_FIELD_OFFSET(::control::PidConf, _impl_.integrator_saturation_level_),
        PROTOBUF_FIELD_OFFSET(::control::PidConf, _impl_.kp_),
        PROTOBUF_FIELD_OFFSET(::control::PidConf, _impl_.ki_),
        PROTOBUF_FIELD_OFFSET(::control::PidConf, _impl_.kd_),
        PROTOBUF_FIELD_OFFSET(::control::PidConf, _impl_.kaw_),
        PROTOBUF_FIELD_OFFSET(::control::PidConf, _impl_.output_saturation_level_),
        6,
        0,
        1,
        2,
        3,
        4,
        5,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 15, -1, sizeof(::control::PidConf)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::control::_PidConf_default_instance_._instance,
};
const char descriptor_table_protodef_control_5fbase_2fpid_5fconf_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\033control_base/pid_conf.proto\022\007control\"\236"
    "\001\n\007PidConf\022\031\n\021integrator_enable\030\001 \001(\010\022#\n"
    "\033integrator_saturation_level\030\002 \001(\001\022\n\n\002kp"
    "\030\003 \001(\001\022\n\n\002ki\030\004 \001(\001\022\n\n\002kd\030\005 \001(\001\022\016\n\003kaw\030\006 "
    "\001(\001:\0010\022\037\n\027output_saturation_level\030\007 \001(\001"
};
static ::absl::once_flag descriptor_table_control_5fbase_2fpid_5fconf_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_control_5fbase_2fpid_5fconf_2eproto = {
    false,
    false,
    199,
    descriptor_table_protodef_control_5fbase_2fpid_5fconf_2eproto,
    "control_base/pid_conf.proto",
    &descriptor_table_control_5fbase_2fpid_5fconf_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_control_5fbase_2fpid_5fconf_2eproto::offsets,
    file_level_enum_descriptors_control_5fbase_2fpid_5fconf_2eproto,
    file_level_service_descriptors_control_5fbase_2fpid_5fconf_2eproto,
};
namespace control {
// ===================================================================

class PidConf::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PidConf>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PidConf, _impl_._has_bits_);
};

PidConf::PidConf(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.PidConf)
}
PidConf::PidConf(
    ::google::protobuf::Arena* arena, const PidConf& from)
    : PidConf(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PidConf::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PidConf::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, integrator_saturation_level_),
           0,
           offsetof(Impl_, integrator_enable_) -
               offsetof(Impl_, integrator_saturation_level_) +
               sizeof(Impl_::integrator_enable_));
}
PidConf::~PidConf() {
  // @@protoc_insertion_point(destructor:control.PidConf)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PidConf::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PidConf::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &PidConf::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PidConf>(),
            ::google::protobuf::Message::GetNewImpl<PidConf>(),
            ::google::protobuf::Message::GetClearImpl<PidConf>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<PidConf>(),
                ::google::protobuf::Message::GetSerializeImpl<PidConf>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PidConf, _impl_._cached_size_),
            false,
        },
        &PidConf::kDescriptorMethods,
        &descriptor_table_control_5fbase_2fpid_5fconf_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PidConf::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2> PidConf::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PidConf, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PidConf_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::PidConf>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool integrator_enable = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PidConf, _impl_.integrator_enable_), 6>(),
     {8, 6, 0, PROTOBUF_FIELD_OFFSET(PidConf, _impl_.integrator_enable_)}},
    // optional double integrator_saturation_level = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 0, 0, PROTOBUF_FIELD_OFFSET(PidConf, _impl_.integrator_saturation_level_)}},
    // optional double kp = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 1, 0, PROTOBUF_FIELD_OFFSET(PidConf, _impl_.kp_)}},
    // optional double ki = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 2, 0, PROTOBUF_FIELD_OFFSET(PidConf, _impl_.ki_)}},
    // optional double kd = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 3, 0, PROTOBUF_FIELD_OFFSET(PidConf, _impl_.kd_)}},
    // optional double kaw = 6 [default = 0];
    {::_pbi::TcParser::FastF64S1,
     {49, 4, 0, PROTOBUF_FIELD_OFFSET(PidConf, _impl_.kaw_)}},
    // optional double output_saturation_level = 7;
    {::_pbi::TcParser::FastF64S1,
     {57, 5, 0, PROTOBUF_FIELD_OFFSET(PidConf, _impl_.output_saturation_level_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool integrator_enable = 1;
    {PROTOBUF_FIELD_OFFSET(PidConf, _impl_.integrator_enable_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional double integrator_saturation_level = 2;
    {PROTOBUF_FIELD_OFFSET(PidConf, _impl_.integrator_saturation_level_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double kp = 3;
    {PROTOBUF_FIELD_OFFSET(PidConf, _impl_.kp_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double ki = 4;
    {PROTOBUF_FIELD_OFFSET(PidConf, _impl_.ki_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double kd = 5;
    {PROTOBUF_FIELD_OFFSET(PidConf, _impl_.kd_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double kaw = 6 [default = 0];
    {PROTOBUF_FIELD_OFFSET(PidConf, _impl_.kaw_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double output_saturation_level = 7;
    {PROTOBUF_FIELD_OFFSET(PidConf, _impl_.output_saturation_level_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PidConf::Clear() {
// @@protoc_insertion_point(message_clear_start:control.PidConf)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    ::memset(&_impl_.integrator_saturation_level_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.integrator_enable_) -
        reinterpret_cast<char*>(&_impl_.integrator_saturation_level_)) + sizeof(_impl_.integrator_enable_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PidConf::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.PidConf)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool integrator_enable = 1;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_integrator_enable(), target);
  }

  // optional double integrator_saturation_level = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_integrator_saturation_level(), target);
  }

  // optional double kp = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_kp(), target);
  }

  // optional double ki = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_ki(), target);
  }

  // optional double kd = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        5, this->_internal_kd(), target);
  }

  // optional double kaw = 6 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        6, this->_internal_kaw(), target);
  }

  // optional double output_saturation_level = 7;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        7, this->_internal_output_saturation_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.PidConf)
  return target;
}

::size_t PidConf::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.PidConf)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional double integrator_saturation_level = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 9;
    }
    // optional double kp = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }
    // optional double ki = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 9;
    }
    // optional double kd = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 9;
    }
    // optional double kaw = 6 [default = 0];
    if (cached_has_bits & 0x00000010u) {
      total_size += 9;
    }
    // optional double output_saturation_level = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += 9;
    }
    // optional bool integrator_enable = 1;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void PidConf::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PidConf*>(&to_msg);
  auto& from = static_cast<const PidConf&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.PidConf)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.integrator_saturation_level_ = from._impl_.integrator_saturation_level_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.kp_ = from._impl_.kp_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.ki_ = from._impl_.ki_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.kd_ = from._impl_.kd_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.kaw_ = from._impl_.kaw_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.output_saturation_level_ = from._impl_.output_saturation_level_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.integrator_enable_ = from._impl_.integrator_enable_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PidConf::CopyFrom(const PidConf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.PidConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PidConf::InternalSwap(PidConf* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PidConf, _impl_.integrator_enable_)
      + sizeof(PidConf::_impl_.integrator_enable_)
      - PROTOBUF_FIELD_OFFSET(PidConf, _impl_.integrator_saturation_level_)>(
          reinterpret_cast<char*>(&_impl_.integrator_saturation_level_),
          reinterpret_cast<char*>(&other->_impl_.integrator_saturation_level_));
}

::google::protobuf::Metadata PidConf::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace control
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_control_5fbase_2fpid_5fconf_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
