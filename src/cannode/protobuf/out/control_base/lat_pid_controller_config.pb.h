// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: control_base/lat_pid_controller_config.proto
// Protobuf C++ Version: 5.28.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto;
namespace control {
class LatPidConfig;
struct LatPidConfigDefaultTypeInternal;
extern LatPidConfigDefaultTypeInternal _LatPidConfig_default_instance_;
class PiffCCSteeringFakeDeadZoneConfig;
struct PiffCCSteeringFakeDeadZoneConfigDefaultTypeInternal;
extern PiffCCSteeringFakeDeadZoneConfigDefaultTypeInternal _PiffCCSteeringFakeDeadZoneConfig_default_instance_;
class PiffCoeffientGainConfig;
struct PiffCoeffientGainConfigDefaultTypeInternal;
extern PiffCoeffientGainConfigDefaultTypeInternal _PiffCoeffientGainConfig_default_instance_;
class PiffCommonParametersConfig;
struct PiffCommonParametersConfigDefaultTypeInternal;
extern PiffCommonParametersConfigDefaultTypeInternal _PiffCommonParametersConfig_default_instance_;
class PiffControllerContentConfig;
struct PiffControllerContentConfigDefaultTypeInternal;
extern PiffControllerContentConfigDefaultTypeInternal _PiffControllerContentConfig_default_instance_;
class PiffControllerContentRateConfig;
struct PiffControllerContentRateConfigDefaultTypeInternal;
extern PiffControllerContentRateConfigDefaultTypeInternal _PiffControllerContentRateConfig_default_instance_;
class PiffDTInputFrameLimitConfig;
struct PiffDTInputFrameLimitConfigDefaultTypeInternal;
extern PiffDTInputFrameLimitConfigDefaultTypeInternal _PiffDTInputFrameLimitConfig_default_instance_;
class PiffDTInputMaxLimitConfig;
struct PiffDTInputMaxLimitConfigDefaultTypeInternal;
extern PiffDTInputMaxLimitConfigDefaultTypeInternal _PiffDTInputMaxLimitConfig_default_instance_;
class PiffDataTransformConfig;
struct PiffDataTransformConfigDefaultTypeInternal;
extern PiffDataTransformConfigDefaultTypeInternal _PiffDataTransformConfig_default_instance_;
class PiffIntegratorConfig;
struct PiffIntegratorConfigDefaultTypeInternal;
extern PiffIntegratorConfigDefaultTypeInternal _PiffIntegratorConfig_default_instance_;
class PiffLinearModeIntegratorConfig;
struct PiffLinearModeIntegratorConfigDefaultTypeInternal;
extern PiffLinearModeIntegratorConfigDefaultTypeInternal _PiffLinearModeIntegratorConfig_default_instance_;
class PiffMeanFilterConfig;
struct PiffMeanFilterConfigDefaultTypeInternal;
extern PiffMeanFilterConfigDefaultTypeInternal _PiffMeanFilterConfig_default_instance_;
class PiffMeanFilterSwitch;
struct PiffMeanFilterSwitchDefaultTypeInternal;
extern PiffMeanFilterSwitchDefaultTypeInternal _PiffMeanFilterSwitch_default_instance_;
class PiffMeanFilterWindowSize;
struct PiffMeanFilterWindowSizeDefaultTypeInternal;
extern PiffMeanFilterWindowSizeDefaultTypeInternal _PiffMeanFilterWindowSize_default_instance_;
class PiffPPActivateControlConfig;
struct PiffPPActivateControlConfigDefaultTypeInternal;
extern PiffPPActivateControlConfigDefaultTypeInternal _PiffPPActivateControlConfig_default_instance_;
class PiffPPActivateControlContentConfig;
struct PiffPPActivateControlContentConfigDefaultTypeInternal;
extern PiffPPActivateControlContentConfigDefaultTypeInternal _PiffPPActivateControlContentConfig_default_instance_;
class PiffPPDeactivateControlConfig;
struct PiffPPDeactivateControlConfigDefaultTypeInternal;
extern PiffPPDeactivateControlConfigDefaultTypeInternal _PiffPPDeactivateControlConfig_default_instance_;
class PiffPPDectivateControlContentConfig;
struct PiffPPDectivateControlContentConfigDefaultTypeInternal;
extern PiffPPDectivateControlContentConfigDefaultTypeInternal _PiffPPDectivateControlContentConfig_default_instance_;
class PiffPPSteeringAngleLimit;
struct PiffPPSteeringAngleLimitDefaultTypeInternal;
extern PiffPPSteeringAngleLimitDefaultTypeInternal _PiffPPSteeringAngleLimit_default_instance_;
class PiffParameters;
struct PiffParametersDefaultTypeInternal;
extern PiffParametersDefaultTypeInternal _PiffParameters_default_instance_;
class PiffPercentageModeIntegratorConfig;
struct PiffPercentageModeIntegratorConfigDefaultTypeInternal;
extern PiffPercentageModeIntegratorConfigDefaultTypeInternal _PiffPercentageModeIntegratorConfig_default_instance_;
class PiffPostProcessConfig;
struct PiffPostProcessConfigDefaultTypeInternal;
extern PiffPostProcessConfigDefaultTypeInternal _PiffPostProcessConfig_default_instance_;
class PiffProtectIntegratorConfig;
struct PiffProtectIntegratorConfigDefaultTypeInternal;
extern PiffProtectIntegratorConfigDefaultTypeInternal _PiffProtectIntegratorConfig_default_instance_;
class PiffTrackingDifferentiatorConfig;
struct PiffTrackingDifferentiatorConfigDefaultTypeInternal;
extern PiffTrackingDifferentiatorConfigDefaultTypeInternal _PiffTrackingDifferentiatorConfig_default_instance_;
class PiffTrackingDifferentiatorStateParameters;
struct PiffTrackingDifferentiatorStateParametersDefaultTypeInternal;
extern PiffTrackingDifferentiatorStateParametersDefaultTypeInternal _PiffTrackingDifferentiatorStateParameters_default_instance_;
class PiffTrackingDifferentiatorSwitch;
struct PiffTrackingDifferentiatorSwitchDefaultTypeInternal;
extern PiffTrackingDifferentiatorSwitchDefaultTypeInternal _PiffTrackingDifferentiatorSwitch_default_instance_;
}  // namespace control
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace control {

// ===================================================================


// -------------------------------------------------------------------

class PiffTrackingDifferentiatorSwitch final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.PiffTrackingDifferentiatorSwitch) */ {
 public:
  inline PiffTrackingDifferentiatorSwitch() : PiffTrackingDifferentiatorSwitch(nullptr) {}
  ~PiffTrackingDifferentiatorSwitch() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PiffTrackingDifferentiatorSwitch(
      ::google::protobuf::internal::ConstantInitialized);

  inline PiffTrackingDifferentiatorSwitch(const PiffTrackingDifferentiatorSwitch& from) : PiffTrackingDifferentiatorSwitch(nullptr, from) {}
  inline PiffTrackingDifferentiatorSwitch(PiffTrackingDifferentiatorSwitch&& from) noexcept
      : PiffTrackingDifferentiatorSwitch(nullptr, std::move(from)) {}
  inline PiffTrackingDifferentiatorSwitch& operator=(const PiffTrackingDifferentiatorSwitch& from) {
    CopyFrom(from);
    return *this;
  }
  inline PiffTrackingDifferentiatorSwitch& operator=(PiffTrackingDifferentiatorSwitch&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PiffTrackingDifferentiatorSwitch& default_instance() {
    return *internal_default_instance();
  }
  static inline const PiffTrackingDifferentiatorSwitch* internal_default_instance() {
    return reinterpret_cast<const PiffTrackingDifferentiatorSwitch*>(
        &_PiffTrackingDifferentiatorSwitch_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(PiffTrackingDifferentiatorSwitch& a, PiffTrackingDifferentiatorSwitch& b) { a.Swap(&b); }
  inline void Swap(PiffTrackingDifferentiatorSwitch* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PiffTrackingDifferentiatorSwitch* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PiffTrackingDifferentiatorSwitch* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PiffTrackingDifferentiatorSwitch>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PiffTrackingDifferentiatorSwitch& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PiffTrackingDifferentiatorSwitch& from) { PiffTrackingDifferentiatorSwitch::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PiffTrackingDifferentiatorSwitch* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.PiffTrackingDifferentiatorSwitch"; }

 protected:
  explicit PiffTrackingDifferentiatorSwitch(::google::protobuf::Arena* arena);
  PiffTrackingDifferentiatorSwitch(::google::protobuf::Arena* arena, const PiffTrackingDifferentiatorSwitch& from);
  PiffTrackingDifferentiatorSwitch(::google::protobuf::Arena* arena, PiffTrackingDifferentiatorSwitch&& from) noexcept
      : PiffTrackingDifferentiatorSwitch(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEnableCenterLineC2FieldNumber = 1,
    kEnableYawRateFieldNumber = 2,
  };
  // required bool enable_center_line_c2 = 1;
  bool has_enable_center_line_c2() const;
  void clear_enable_center_line_c2() ;
  bool enable_center_line_c2() const;
  void set_enable_center_line_c2(bool value);

  private:
  bool _internal_enable_center_line_c2() const;
  void _internal_set_enable_center_line_c2(bool value);

  public:
  // required bool enable_yaw_rate = 2;
  bool has_enable_yaw_rate() const;
  void clear_enable_yaw_rate() ;
  bool enable_yaw_rate() const;
  void set_enable_yaw_rate(bool value);

  private:
  bool _internal_enable_yaw_rate() const;
  void _internal_set_enable_yaw_rate(bool value);

  public:
  // @@protoc_insertion_point(class_scope:control.PiffTrackingDifferentiatorSwitch)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PiffTrackingDifferentiatorSwitch_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PiffTrackingDifferentiatorSwitch& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    bool enable_center_line_c2_;
    bool enable_yaw_rate_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PiffTrackingDifferentiatorStateParameters final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.PiffTrackingDifferentiatorStateParameters) */ {
 public:
  inline PiffTrackingDifferentiatorStateParameters() : PiffTrackingDifferentiatorStateParameters(nullptr) {}
  ~PiffTrackingDifferentiatorStateParameters() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PiffTrackingDifferentiatorStateParameters(
      ::google::protobuf::internal::ConstantInitialized);

  inline PiffTrackingDifferentiatorStateParameters(const PiffTrackingDifferentiatorStateParameters& from) : PiffTrackingDifferentiatorStateParameters(nullptr, from) {}
  inline PiffTrackingDifferentiatorStateParameters(PiffTrackingDifferentiatorStateParameters&& from) noexcept
      : PiffTrackingDifferentiatorStateParameters(nullptr, std::move(from)) {}
  inline PiffTrackingDifferentiatorStateParameters& operator=(const PiffTrackingDifferentiatorStateParameters& from) {
    CopyFrom(from);
    return *this;
  }
  inline PiffTrackingDifferentiatorStateParameters& operator=(PiffTrackingDifferentiatorStateParameters&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PiffTrackingDifferentiatorStateParameters& default_instance() {
    return *internal_default_instance();
  }
  static inline const PiffTrackingDifferentiatorStateParameters* internal_default_instance() {
    return reinterpret_cast<const PiffTrackingDifferentiatorStateParameters*>(
        &_PiffTrackingDifferentiatorStateParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(PiffTrackingDifferentiatorStateParameters& a, PiffTrackingDifferentiatorStateParameters& b) { a.Swap(&b); }
  inline void Swap(PiffTrackingDifferentiatorStateParameters* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PiffTrackingDifferentiatorStateParameters* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PiffTrackingDifferentiatorStateParameters* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PiffTrackingDifferentiatorStateParameters>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PiffTrackingDifferentiatorStateParameters& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PiffTrackingDifferentiatorStateParameters& from) { PiffTrackingDifferentiatorStateParameters::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PiffTrackingDifferentiatorStateParameters* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.PiffTrackingDifferentiatorStateParameters"; }

 protected:
  explicit PiffTrackingDifferentiatorStateParameters(::google::protobuf::Arena* arena);
  PiffTrackingDifferentiatorStateParameters(::google::protobuf::Arena* arena, const PiffTrackingDifferentiatorStateParameters& from);
  PiffTrackingDifferentiatorStateParameters(::google::protobuf::Arena* arena, PiffTrackingDifferentiatorStateParameters&& from) noexcept
      : PiffTrackingDifferentiatorStateParameters(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTrackingRateFieldNumber = 1,
    kSmoothFrameFieldNumber = 2,
  };
  // required float tracking_rate = 1;
  bool has_tracking_rate() const;
  void clear_tracking_rate() ;
  float tracking_rate() const;
  void set_tracking_rate(float value);

  private:
  float _internal_tracking_rate() const;
  void _internal_set_tracking_rate(float value);

  public:
  // required int32 smooth_frame = 2;
  bool has_smooth_frame() const;
  void clear_smooth_frame() ;
  ::int32_t smooth_frame() const;
  void set_smooth_frame(::int32_t value);

  private:
  ::int32_t _internal_smooth_frame() const;
  void _internal_set_smooth_frame(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:control.PiffTrackingDifferentiatorStateParameters)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PiffTrackingDifferentiatorStateParameters_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PiffTrackingDifferentiatorStateParameters& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    float tracking_rate_;
    ::int32_t smooth_frame_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PiffProtectIntegratorConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.PiffProtectIntegratorConfig) */ {
 public:
  inline PiffProtectIntegratorConfig() : PiffProtectIntegratorConfig(nullptr) {}
  ~PiffProtectIntegratorConfig() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PiffProtectIntegratorConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline PiffProtectIntegratorConfig(const PiffProtectIntegratorConfig& from) : PiffProtectIntegratorConfig(nullptr, from) {}
  inline PiffProtectIntegratorConfig(PiffProtectIntegratorConfig&& from) noexcept
      : PiffProtectIntegratorConfig(nullptr, std::move(from)) {}
  inline PiffProtectIntegratorConfig& operator=(const PiffProtectIntegratorConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline PiffProtectIntegratorConfig& operator=(PiffProtectIntegratorConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PiffProtectIntegratorConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const PiffProtectIntegratorConfig* internal_default_instance() {
    return reinterpret_cast<const PiffProtectIntegratorConfig*>(
        &_PiffProtectIntegratorConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(PiffProtectIntegratorConfig& a, PiffProtectIntegratorConfig& b) { a.Swap(&b); }
  inline void Swap(PiffProtectIntegratorConfig* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PiffProtectIntegratorConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PiffProtectIntegratorConfig* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PiffProtectIntegratorConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PiffProtectIntegratorConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PiffProtectIntegratorConfig& from) { PiffProtectIntegratorConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PiffProtectIntegratorConfig* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.PiffProtectIntegratorConfig"; }

 protected:
  explicit PiffProtectIntegratorConfig(::google::protobuf::Arena* arena);
  PiffProtectIntegratorConfig(::google::protobuf::Arena* arena, const PiffProtectIntegratorConfig& from);
  PiffProtectIntegratorConfig(::google::protobuf::Arena* arena, PiffProtectIntegratorConfig&& from) noexcept
      : PiffProtectIntegratorConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFlagProtectionFieldNumber = 1,
    kFramesProtectionFieldNumber = 2,
  };
  // required bool flag_protection = 1;
  bool has_flag_protection() const;
  void clear_flag_protection() ;
  bool flag_protection() const;
  void set_flag_protection(bool value);

  private:
  bool _internal_flag_protection() const;
  void _internal_set_flag_protection(bool value);

  public:
  // required int32 frames_protection = 2;
  bool has_frames_protection() const;
  void clear_frames_protection() ;
  ::int32_t frames_protection() const;
  void set_frames_protection(::int32_t value);

  private:
  ::int32_t _internal_frames_protection() const;
  void _internal_set_frames_protection(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:control.PiffProtectIntegratorConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PiffProtectIntegratorConfig_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PiffProtectIntegratorConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    bool flag_protection_;
    ::int32_t frames_protection_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PiffPercentageModeIntegratorConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.PiffPercentageModeIntegratorConfig) */ {
 public:
  inline PiffPercentageModeIntegratorConfig() : PiffPercentageModeIntegratorConfig(nullptr) {}
  ~PiffPercentageModeIntegratorConfig() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PiffPercentageModeIntegratorConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline PiffPercentageModeIntegratorConfig(const PiffPercentageModeIntegratorConfig& from) : PiffPercentageModeIntegratorConfig(nullptr, from) {}
  inline PiffPercentageModeIntegratorConfig(PiffPercentageModeIntegratorConfig&& from) noexcept
      : PiffPercentageModeIntegratorConfig(nullptr, std::move(from)) {}
  inline PiffPercentageModeIntegratorConfig& operator=(const PiffPercentageModeIntegratorConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline PiffPercentageModeIntegratorConfig& operator=(PiffPercentageModeIntegratorConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PiffPercentageModeIntegratorConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const PiffPercentageModeIntegratorConfig* internal_default_instance() {
    return reinterpret_cast<const PiffPercentageModeIntegratorConfig*>(
        &_PiffPercentageModeIntegratorConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(PiffPercentageModeIntegratorConfig& a, PiffPercentageModeIntegratorConfig& b) { a.Swap(&b); }
  inline void Swap(PiffPercentageModeIntegratorConfig* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PiffPercentageModeIntegratorConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PiffPercentageModeIntegratorConfig* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PiffPercentageModeIntegratorConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PiffPercentageModeIntegratorConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PiffPercentageModeIntegratorConfig& from) { PiffPercentageModeIntegratorConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PiffPercentageModeIntegratorConfig* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.PiffPercentageModeIntegratorConfig"; }

 protected:
  explicit PiffPercentageModeIntegratorConfig(::google::protobuf::Arena* arena);
  PiffPercentageModeIntegratorConfig(::google::protobuf::Arena* arena, const PiffPercentageModeIntegratorConfig& from);
  PiffPercentageModeIntegratorConfig(::google::protobuf::Arena* arena, PiffPercentageModeIntegratorConfig&& from) noexcept
      : PiffPercentageModeIntegratorConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTrackPercentageFieldNumber = 1,
    kEnableLateralErrContributionFieldNumber = 2,
    kEnableLateralErrRateContributionFieldNumber = 3,
    kEnableHeadingErrContributionFieldNumber = 4,
    kEnableHeadingErrRateContributionFieldNumber = 5,
  };
  // required float track_percentage = 1;
  bool has_track_percentage() const;
  void clear_track_percentage() ;
  float track_percentage() const;
  void set_track_percentage(float value);

  private:
  float _internal_track_percentage() const;
  void _internal_set_track_percentage(float value);

  public:
  // required bool enable_lateral_err_contribution = 2;
  bool has_enable_lateral_err_contribution() const;
  void clear_enable_lateral_err_contribution() ;
  bool enable_lateral_err_contribution() const;
  void set_enable_lateral_err_contribution(bool value);

  private:
  bool _internal_enable_lateral_err_contribution() const;
  void _internal_set_enable_lateral_err_contribution(bool value);

  public:
  // required bool enable_lateral_err_rate_contribution = 3;
  bool has_enable_lateral_err_rate_contribution() const;
  void clear_enable_lateral_err_rate_contribution() ;
  bool enable_lateral_err_rate_contribution() const;
  void set_enable_lateral_err_rate_contribution(bool value);

  private:
  bool _internal_enable_lateral_err_rate_contribution() const;
  void _internal_set_enable_lateral_err_rate_contribution(bool value);

  public:
  // required bool enable_heading_err_contribution = 4;
  bool has_enable_heading_err_contribution() const;
  void clear_enable_heading_err_contribution() ;
  bool enable_heading_err_contribution() const;
  void set_enable_heading_err_contribution(bool value);

  private:
  bool _internal_enable_heading_err_contribution() const;
  void _internal_set_enable_heading_err_contribution(bool value);

  public:
  // required bool enable_heading_err_rate_contribution = 5;
  bool has_enable_heading_err_rate_contribution() const;
  void clear_enable_heading_err_rate_contribution() ;
  bool enable_heading_err_rate_contribution() const;
  void set_enable_heading_err_rate_contribution(bool value);

  private:
  bool _internal_enable_heading_err_rate_contribution() const;
  void _internal_set_enable_heading_err_rate_contribution(bool value);

  public:
  // @@protoc_insertion_point(class_scope:control.PiffPercentageModeIntegratorConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PiffPercentageModeIntegratorConfig_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PiffPercentageModeIntegratorConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    float track_percentage_;
    bool enable_lateral_err_contribution_;
    bool enable_lateral_err_rate_contribution_;
    bool enable_heading_err_contribution_;
    bool enable_heading_err_rate_contribution_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PiffParameters final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.PiffParameters) */ {
 public:
  inline PiffParameters() : PiffParameters(nullptr) {}
  ~PiffParameters() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PiffParameters(
      ::google::protobuf::internal::ConstantInitialized);

  inline PiffParameters(const PiffParameters& from) : PiffParameters(nullptr, from) {}
  inline PiffParameters(PiffParameters&& from) noexcept
      : PiffParameters(nullptr, std::move(from)) {}
  inline PiffParameters& operator=(const PiffParameters& from) {
    CopyFrom(from);
    return *this;
  }
  inline PiffParameters& operator=(PiffParameters&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PiffParameters& default_instance() {
    return *internal_default_instance();
  }
  static inline const PiffParameters* internal_default_instance() {
    return reinterpret_cast<const PiffParameters*>(
        &_PiffParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(PiffParameters& a, PiffParameters& b) { a.Swap(&b); }
  inline void Swap(PiffParameters* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PiffParameters* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PiffParameters* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PiffParameters>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PiffParameters& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PiffParameters& from) { PiffParameters::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PiffParameters* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.PiffParameters"; }

 protected:
  explicit PiffParameters(::google::protobuf::Arena* arena);
  PiffParameters(::google::protobuf::Arena* arena, const PiffParameters& from);
  PiffParameters(::google::protobuf::Arena* arena, PiffParameters&& from) noexcept
      : PiffParameters(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMatrixKFieldNumber = 3,
    kCurvatureFieldNumber = 1,
    kSpeedKphFieldNumber = 2,
  };
  // repeated float matrix_k = 3;
  int matrix_k_size() const;
  private:
  int _internal_matrix_k_size() const;

  public:
  void clear_matrix_k() ;
  float matrix_k(int index) const;
  void set_matrix_k(int index, float value);
  void add_matrix_k(float value);
  const ::google::protobuf::RepeatedField<float>& matrix_k() const;
  ::google::protobuf::RepeatedField<float>* mutable_matrix_k();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_matrix_k() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_matrix_k();

  public:
  // required float curvature = 1;
  bool has_curvature() const;
  void clear_curvature() ;
  float curvature() const;
  void set_curvature(float value);

  private:
  float _internal_curvature() const;
  void _internal_set_curvature(float value);

  public:
  // required float speed_kph = 2;
  bool has_speed_kph() const;
  void clear_speed_kph() ;
  float speed_kph() const;
  void set_speed_kph(float value);

  private:
  float _internal_speed_kph() const;
  void _internal_set_speed_kph(float value);

  public:
  // @@protoc_insertion_point(class_scope:control.PiffParameters)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PiffParameters_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PiffParameters& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<float> matrix_k_;
    float curvature_;
    float speed_kph_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PiffPPSteeringAngleLimit final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.PiffPPSteeringAngleLimit) */ {
 public:
  inline PiffPPSteeringAngleLimit() : PiffPPSteeringAngleLimit(nullptr) {}
  ~PiffPPSteeringAngleLimit() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PiffPPSteeringAngleLimit(
      ::google::protobuf::internal::ConstantInitialized);

  inline PiffPPSteeringAngleLimit(const PiffPPSteeringAngleLimit& from) : PiffPPSteeringAngleLimit(nullptr, from) {}
  inline PiffPPSteeringAngleLimit(PiffPPSteeringAngleLimit&& from) noexcept
      : PiffPPSteeringAngleLimit(nullptr, std::move(from)) {}
  inline PiffPPSteeringAngleLimit& operator=(const PiffPPSteeringAngleLimit& from) {
    CopyFrom(from);
    return *this;
  }
  inline PiffPPSteeringAngleLimit& operator=(PiffPPSteeringAngleLimit&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PiffPPSteeringAngleLimit& default_instance() {
    return *internal_default_instance();
  }
  static inline const PiffPPSteeringAngleLimit* internal_default_instance() {
    return reinterpret_cast<const PiffPPSteeringAngleLimit*>(
        &_PiffPPSteeringAngleLimit_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(PiffPPSteeringAngleLimit& a, PiffPPSteeringAngleLimit& b) { a.Swap(&b); }
  inline void Swap(PiffPPSteeringAngleLimit* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PiffPPSteeringAngleLimit* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PiffPPSteeringAngleLimit* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PiffPPSteeringAngleLimit>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PiffPPSteeringAngleLimit& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PiffPPSteeringAngleLimit& from) { PiffPPSteeringAngleLimit::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PiffPPSteeringAngleLimit* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.PiffPPSteeringAngleLimit"; }

 protected:
  explicit PiffPPSteeringAngleLimit(::google::protobuf::Arena* arena);
  PiffPPSteeringAngleLimit(::google::protobuf::Arena* arena, const PiffPPSteeringAngleLimit& from);
  PiffPPSteeringAngleLimit(::google::protobuf::Arena* arena, PiffPPSteeringAngleLimit&& from) noexcept
      : PiffPPSteeringAngleLimit(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSpeedKphFieldNumber = 1,
    kSteeringRangeDegFieldNumber = 2,
    kSteeringRateRangeDegpsFieldNumber = 3,
  };
  // required float speed_kph = 1;
  bool has_speed_kph() const;
  void clear_speed_kph() ;
  float speed_kph() const;
  void set_speed_kph(float value);

  private:
  float _internal_speed_kph() const;
  void _internal_set_speed_kph(float value);

  public:
  // required float steering_range_deg = 2;
  bool has_steering_range_deg() const;
  void clear_steering_range_deg() ;
  float steering_range_deg() const;
  void set_steering_range_deg(float value);

  private:
  float _internal_steering_range_deg() const;
  void _internal_set_steering_range_deg(float value);

  public:
  // required float steering_rate_range_degps = 3;
  bool has_steering_rate_range_degps() const;
  void clear_steering_rate_range_degps() ;
  float steering_rate_range_degps() const;
  void set_steering_rate_range_degps(float value);

  private:
  float _internal_steering_rate_range_degps() const;
  void _internal_set_steering_rate_range_degps(float value);

  public:
  // @@protoc_insertion_point(class_scope:control.PiffPPSteeringAngleLimit)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PiffPPSteeringAngleLimit_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PiffPPSteeringAngleLimit& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    float speed_kph_;
    float steering_range_deg_;
    float steering_rate_range_degps_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PiffPPDectivateControlContentConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.PiffPPDectivateControlContentConfig) */ {
 public:
  inline PiffPPDectivateControlContentConfig() : PiffPPDectivateControlContentConfig(nullptr) {}
  ~PiffPPDectivateControlContentConfig() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PiffPPDectivateControlContentConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline PiffPPDectivateControlContentConfig(const PiffPPDectivateControlContentConfig& from) : PiffPPDectivateControlContentConfig(nullptr, from) {}
  inline PiffPPDectivateControlContentConfig(PiffPPDectivateControlContentConfig&& from) noexcept
      : PiffPPDectivateControlContentConfig(nullptr, std::move(from)) {}
  inline PiffPPDectivateControlContentConfig& operator=(const PiffPPDectivateControlContentConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline PiffPPDectivateControlContentConfig& operator=(PiffPPDectivateControlContentConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PiffPPDectivateControlContentConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const PiffPPDectivateControlContentConfig* internal_default_instance() {
    return reinterpret_cast<const PiffPPDectivateControlContentConfig*>(
        &_PiffPPDectivateControlContentConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(PiffPPDectivateControlContentConfig& a, PiffPPDectivateControlContentConfig& b) { a.Swap(&b); }
  inline void Swap(PiffPPDectivateControlContentConfig* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PiffPPDectivateControlContentConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PiffPPDectivateControlContentConfig* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PiffPPDectivateControlContentConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PiffPPDectivateControlContentConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PiffPPDectivateControlContentConfig& from) { PiffPPDectivateControlContentConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PiffPPDectivateControlContentConfig* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.PiffPPDectivateControlContentConfig"; }

 protected:
  explicit PiffPPDectivateControlContentConfig(::google::protobuf::Arena* arena);
  PiffPPDectivateControlContentConfig(::google::protobuf::Arena* arena, const PiffPPDectivateControlContentConfig& from);
  PiffPPDectivateControlContentConfig(::google::protobuf::Arena* arena, PiffPPDectivateControlContentConfig&& from) noexcept
      : PiffPPDectivateControlContentConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSpeedKphFieldNumber = 1,
    kSteeringRateDegpsFieldNumber = 2,
    kSteeringFrameTrackPercentageFieldNumber = 3,
  };
  // required float speed_kph = 1;
  bool has_speed_kph() const;
  void clear_speed_kph() ;
  float speed_kph() const;
  void set_speed_kph(float value);

  private:
  float _internal_speed_kph() const;
  void _internal_set_speed_kph(float value);

  public:
  // required float steering_rate_degps = 2;
  bool has_steering_rate_degps() const;
  void clear_steering_rate_degps() ;
  float steering_rate_degps() const;
  void set_steering_rate_degps(float value);

  private:
  float _internal_steering_rate_degps() const;
  void _internal_set_steering_rate_degps(float value);

  public:
  // required float steering_frame_track_percentage = 3;
  bool has_steering_frame_track_percentage() const;
  void clear_steering_frame_track_percentage() ;
  float steering_frame_track_percentage() const;
  void set_steering_frame_track_percentage(float value);

  private:
  float _internal_steering_frame_track_percentage() const;
  void _internal_set_steering_frame_track_percentage(float value);

  public:
  // @@protoc_insertion_point(class_scope:control.PiffPPDectivateControlContentConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PiffPPDectivateControlContentConfig_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PiffPPDectivateControlContentConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    float speed_kph_;
    float steering_rate_degps_;
    float steering_frame_track_percentage_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PiffPPActivateControlContentConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.PiffPPActivateControlContentConfig) */ {
 public:
  inline PiffPPActivateControlContentConfig() : PiffPPActivateControlContentConfig(nullptr) {}
  ~PiffPPActivateControlContentConfig() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PiffPPActivateControlContentConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline PiffPPActivateControlContentConfig(const PiffPPActivateControlContentConfig& from) : PiffPPActivateControlContentConfig(nullptr, from) {}
  inline PiffPPActivateControlContentConfig(PiffPPActivateControlContentConfig&& from) noexcept
      : PiffPPActivateControlContentConfig(nullptr, std::move(from)) {}
  inline PiffPPActivateControlContentConfig& operator=(const PiffPPActivateControlContentConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline PiffPPActivateControlContentConfig& operator=(PiffPPActivateControlContentConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PiffPPActivateControlContentConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const PiffPPActivateControlContentConfig* internal_default_instance() {
    return reinterpret_cast<const PiffPPActivateControlContentConfig*>(
        &_PiffPPActivateControlContentConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(PiffPPActivateControlContentConfig& a, PiffPPActivateControlContentConfig& b) { a.Swap(&b); }
  inline void Swap(PiffPPActivateControlContentConfig* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PiffPPActivateControlContentConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PiffPPActivateControlContentConfig* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PiffPPActivateControlContentConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PiffPPActivateControlContentConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PiffPPActivateControlContentConfig& from) { PiffPPActivateControlContentConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PiffPPActivateControlContentConfig* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.PiffPPActivateControlContentConfig"; }

 protected:
  explicit PiffPPActivateControlContentConfig(::google::protobuf::Arena* arena);
  PiffPPActivateControlContentConfig(::google::protobuf::Arena* arena, const PiffPPActivateControlContentConfig& from);
  PiffPPActivateControlContentConfig(::google::protobuf::Arena* arena, PiffPPActivateControlContentConfig&& from) noexcept
      : PiffPPActivateControlContentConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSpeedKphFieldNumber = 1,
    kSteeringRateDegpsFieldNumber = 2,
    kSteeringDeadZoneDegFieldNumber = 3,
    kSteeringFrameTrackPercentageFieldNumber = 4,
  };
  // required float speed_kph = 1;
  bool has_speed_kph() const;
  void clear_speed_kph() ;
  float speed_kph() const;
  void set_speed_kph(float value);

  private:
  float _internal_speed_kph() const;
  void _internal_set_speed_kph(float value);

  public:
  // required float steering_rate_degps = 2;
  bool has_steering_rate_degps() const;
  void clear_steering_rate_degps() ;
  float steering_rate_degps() const;
  void set_steering_rate_degps(float value);

  private:
  float _internal_steering_rate_degps() const;
  void _internal_set_steering_rate_degps(float value);

  public:
  // required float steering_dead_zone_deg = 3;
  bool has_steering_dead_zone_deg() const;
  void clear_steering_dead_zone_deg() ;
  float steering_dead_zone_deg() const;
  void set_steering_dead_zone_deg(float value);

  private:
  float _internal_steering_dead_zone_deg() const;
  void _internal_set_steering_dead_zone_deg(float value);

  public:
  // required float steering_frame_track_percentage = 4;
  bool has_steering_frame_track_percentage() const;
  void clear_steering_frame_track_percentage() ;
  float steering_frame_track_percentage() const;
  void set_steering_frame_track_percentage(float value);

  private:
  float _internal_steering_frame_track_percentage() const;
  void _internal_set_steering_frame_track_percentage(float value);

  public:
  // @@protoc_insertion_point(class_scope:control.PiffPPActivateControlContentConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PiffPPActivateControlContentConfig_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PiffPPActivateControlContentConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    float speed_kph_;
    float steering_rate_degps_;
    float steering_dead_zone_deg_;
    float steering_frame_track_percentage_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PiffMeanFilterWindowSize final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.PiffMeanFilterWindowSize) */ {
 public:
  inline PiffMeanFilterWindowSize() : PiffMeanFilterWindowSize(nullptr) {}
  ~PiffMeanFilterWindowSize() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PiffMeanFilterWindowSize(
      ::google::protobuf::internal::ConstantInitialized);

  inline PiffMeanFilterWindowSize(const PiffMeanFilterWindowSize& from) : PiffMeanFilterWindowSize(nullptr, from) {}
  inline PiffMeanFilterWindowSize(PiffMeanFilterWindowSize&& from) noexcept
      : PiffMeanFilterWindowSize(nullptr, std::move(from)) {}
  inline PiffMeanFilterWindowSize& operator=(const PiffMeanFilterWindowSize& from) {
    CopyFrom(from);
    return *this;
  }
  inline PiffMeanFilterWindowSize& operator=(PiffMeanFilterWindowSize&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PiffMeanFilterWindowSize& default_instance() {
    return *internal_default_instance();
  }
  static inline const PiffMeanFilterWindowSize* internal_default_instance() {
    return reinterpret_cast<const PiffMeanFilterWindowSize*>(
        &_PiffMeanFilterWindowSize_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(PiffMeanFilterWindowSize& a, PiffMeanFilterWindowSize& b) { a.Swap(&b); }
  inline void Swap(PiffMeanFilterWindowSize* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PiffMeanFilterWindowSize* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PiffMeanFilterWindowSize* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PiffMeanFilterWindowSize>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PiffMeanFilterWindowSize& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PiffMeanFilterWindowSize& from) { PiffMeanFilterWindowSize::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PiffMeanFilterWindowSize* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.PiffMeanFilterWindowSize"; }

 protected:
  explicit PiffMeanFilterWindowSize(::google::protobuf::Arena* arena);
  PiffMeanFilterWindowSize(::google::protobuf::Arena* arena, const PiffMeanFilterWindowSize& from);
  PiffMeanFilterWindowSize(::google::protobuf::Arena* arena, PiffMeanFilterWindowSize&& from) noexcept
      : PiffMeanFilterWindowSize(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCenterLineC0MfwsFieldNumber = 1,
    kCenterLineC1MfwsFieldNumber = 2,
    kCenterLineC2MfwsFieldNumber = 3,
    kSpeedMpsMfwsFieldNumber = 4,
    kYawRateMfwsFieldNumber = 5,
  };
  // required int32 center_line_c0_mfws = 1;
  bool has_center_line_c0_mfws() const;
  void clear_center_line_c0_mfws() ;
  ::int32_t center_line_c0_mfws() const;
  void set_center_line_c0_mfws(::int32_t value);

  private:
  ::int32_t _internal_center_line_c0_mfws() const;
  void _internal_set_center_line_c0_mfws(::int32_t value);

  public:
  // required int32 center_line_c1_mfws = 2;
  bool has_center_line_c1_mfws() const;
  void clear_center_line_c1_mfws() ;
  ::int32_t center_line_c1_mfws() const;
  void set_center_line_c1_mfws(::int32_t value);

  private:
  ::int32_t _internal_center_line_c1_mfws() const;
  void _internal_set_center_line_c1_mfws(::int32_t value);

  public:
  // required int32 center_line_c2_mfws = 3;
  bool has_center_line_c2_mfws() const;
  void clear_center_line_c2_mfws() ;
  ::int32_t center_line_c2_mfws() const;
  void set_center_line_c2_mfws(::int32_t value);

  private:
  ::int32_t _internal_center_line_c2_mfws() const;
  void _internal_set_center_line_c2_mfws(::int32_t value);

  public:
  // required int32 speed_mps_mfws = 4;
  bool has_speed_mps_mfws() const;
  void clear_speed_mps_mfws() ;
  ::int32_t speed_mps_mfws() const;
  void set_speed_mps_mfws(::int32_t value);

  private:
  ::int32_t _internal_speed_mps_mfws() const;
  void _internal_set_speed_mps_mfws(::int32_t value);

  public:
  // required int32 yaw_rate_mfws = 5;
  bool has_yaw_rate_mfws() const;
  void clear_yaw_rate_mfws() ;
  ::int32_t yaw_rate_mfws() const;
  void set_yaw_rate_mfws(::int32_t value);

  private:
  ::int32_t _internal_yaw_rate_mfws() const;
  void _internal_set_yaw_rate_mfws(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:control.PiffMeanFilterWindowSize)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PiffMeanFilterWindowSize_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PiffMeanFilterWindowSize& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t center_line_c0_mfws_;
    ::int32_t center_line_c1_mfws_;
    ::int32_t center_line_c2_mfws_;
    ::int32_t speed_mps_mfws_;
    ::int32_t yaw_rate_mfws_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PiffMeanFilterSwitch final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.PiffMeanFilterSwitch) */ {
 public:
  inline PiffMeanFilterSwitch() : PiffMeanFilterSwitch(nullptr) {}
  ~PiffMeanFilterSwitch() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PiffMeanFilterSwitch(
      ::google::protobuf::internal::ConstantInitialized);

  inline PiffMeanFilterSwitch(const PiffMeanFilterSwitch& from) : PiffMeanFilterSwitch(nullptr, from) {}
  inline PiffMeanFilterSwitch(PiffMeanFilterSwitch&& from) noexcept
      : PiffMeanFilterSwitch(nullptr, std::move(from)) {}
  inline PiffMeanFilterSwitch& operator=(const PiffMeanFilterSwitch& from) {
    CopyFrom(from);
    return *this;
  }
  inline PiffMeanFilterSwitch& operator=(PiffMeanFilterSwitch&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PiffMeanFilterSwitch& default_instance() {
    return *internal_default_instance();
  }
  static inline const PiffMeanFilterSwitch* internal_default_instance() {
    return reinterpret_cast<const PiffMeanFilterSwitch*>(
        &_PiffMeanFilterSwitch_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(PiffMeanFilterSwitch& a, PiffMeanFilterSwitch& b) { a.Swap(&b); }
  inline void Swap(PiffMeanFilterSwitch* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PiffMeanFilterSwitch* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PiffMeanFilterSwitch* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PiffMeanFilterSwitch>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PiffMeanFilterSwitch& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PiffMeanFilterSwitch& from) { PiffMeanFilterSwitch::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PiffMeanFilterSwitch* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.PiffMeanFilterSwitch"; }

 protected:
  explicit PiffMeanFilterSwitch(::google::protobuf::Arena* arena);
  PiffMeanFilterSwitch(::google::protobuf::Arena* arena, const PiffMeanFilterSwitch& from);
  PiffMeanFilterSwitch(::google::protobuf::Arena* arena, PiffMeanFilterSwitch&& from) noexcept
      : PiffMeanFilterSwitch(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEnableCenterLineC0FieldNumber = 1,
    kEnableCenterLineC1FieldNumber = 2,
    kEnableCenterLineC2FieldNumber = 3,
    kEnableSpeedMpsFieldNumber = 4,
    kEnableYawRateFieldNumber = 5,
  };
  // required bool enable_center_line_c0 = 1;
  bool has_enable_center_line_c0() const;
  void clear_enable_center_line_c0() ;
  bool enable_center_line_c0() const;
  void set_enable_center_line_c0(bool value);

  private:
  bool _internal_enable_center_line_c0() const;
  void _internal_set_enable_center_line_c0(bool value);

  public:
  // required bool enable_center_line_c1 = 2;
  bool has_enable_center_line_c1() const;
  void clear_enable_center_line_c1() ;
  bool enable_center_line_c1() const;
  void set_enable_center_line_c1(bool value);

  private:
  bool _internal_enable_center_line_c1() const;
  void _internal_set_enable_center_line_c1(bool value);

  public:
  // required bool enable_center_line_c2 = 3;
  bool has_enable_center_line_c2() const;
  void clear_enable_center_line_c2() ;
  bool enable_center_line_c2() const;
  void set_enable_center_line_c2(bool value);

  private:
  bool _internal_enable_center_line_c2() const;
  void _internal_set_enable_center_line_c2(bool value);

  public:
  // required bool enable_speed_mps = 4;
  bool has_enable_speed_mps() const;
  void clear_enable_speed_mps() ;
  bool enable_speed_mps() const;
  void set_enable_speed_mps(bool value);

  private:
  bool _internal_enable_speed_mps() const;
  void _internal_set_enable_speed_mps(bool value);

  public:
  // required bool enable_yaw_rate = 5;
  bool has_enable_yaw_rate() const;
  void clear_enable_yaw_rate() ;
  bool enable_yaw_rate() const;
  void set_enable_yaw_rate(bool value);

  private:
  bool _internal_enable_yaw_rate() const;
  void _internal_set_enable_yaw_rate(bool value);

  public:
  // @@protoc_insertion_point(class_scope:control.PiffMeanFilterSwitch)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PiffMeanFilterSwitch_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PiffMeanFilterSwitch& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    bool enable_center_line_c0_;
    bool enable_center_line_c1_;
    bool enable_center_line_c2_;
    bool enable_speed_mps_;
    bool enable_yaw_rate_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PiffLinearModeIntegratorConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.PiffLinearModeIntegratorConfig) */ {
 public:
  inline PiffLinearModeIntegratorConfig() : PiffLinearModeIntegratorConfig(nullptr) {}
  ~PiffLinearModeIntegratorConfig() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PiffLinearModeIntegratorConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline PiffLinearModeIntegratorConfig(const PiffLinearModeIntegratorConfig& from) : PiffLinearModeIntegratorConfig(nullptr, from) {}
  inline PiffLinearModeIntegratorConfig(PiffLinearModeIntegratorConfig&& from) noexcept
      : PiffLinearModeIntegratorConfig(nullptr, std::move(from)) {}
  inline PiffLinearModeIntegratorConfig& operator=(const PiffLinearModeIntegratorConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline PiffLinearModeIntegratorConfig& operator=(PiffLinearModeIntegratorConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PiffLinearModeIntegratorConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const PiffLinearModeIntegratorConfig* internal_default_instance() {
    return reinterpret_cast<const PiffLinearModeIntegratorConfig*>(
        &_PiffLinearModeIntegratorConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(PiffLinearModeIntegratorConfig& a, PiffLinearModeIntegratorConfig& b) { a.Swap(&b); }
  inline void Swap(PiffLinearModeIntegratorConfig* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PiffLinearModeIntegratorConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PiffLinearModeIntegratorConfig* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PiffLinearModeIntegratorConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PiffLinearModeIntegratorConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PiffLinearModeIntegratorConfig& from) { PiffLinearModeIntegratorConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PiffLinearModeIntegratorConfig* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.PiffLinearModeIntegratorConfig"; }

 protected:
  explicit PiffLinearModeIntegratorConfig(::google::protobuf::Arena* arena);
  PiffLinearModeIntegratorConfig(::google::protobuf::Arena* arena, const PiffLinearModeIntegratorConfig& from);
  PiffLinearModeIntegratorConfig(::google::protobuf::Arena* arena, PiffLinearModeIntegratorConfig&& from) noexcept
      : PiffLinearModeIntegratorConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kKiFieldNumber = 2,
    kKiModeFieldNumber = 1,
  };
  // repeated float ki = 2;
  int ki_size() const;
  private:
  int _internal_ki_size() const;

  public:
  void clear_ki() ;
  float ki(int index) const;
  void set_ki(int index, float value);
  void add_ki(float value);
  const ::google::protobuf::RepeatedField<float>& ki() const;
  ::google::protobuf::RepeatedField<float>* mutable_ki();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_ki() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_ki();

  public:
  // required int32 ki_mode = 1;
  bool has_ki_mode() const;
  void clear_ki_mode() ;
  ::int32_t ki_mode() const;
  void set_ki_mode(::int32_t value);

  private:
  ::int32_t _internal_ki_mode() const;
  void _internal_set_ki_mode(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:control.PiffLinearModeIntegratorConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PiffLinearModeIntegratorConfig_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PiffLinearModeIntegratorConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<float> ki_;
    ::int32_t ki_mode_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PiffDTInputMaxLimitConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.PiffDTInputMaxLimitConfig) */ {
 public:
  inline PiffDTInputMaxLimitConfig() : PiffDTInputMaxLimitConfig(nullptr) {}
  ~PiffDTInputMaxLimitConfig() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PiffDTInputMaxLimitConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline PiffDTInputMaxLimitConfig(const PiffDTInputMaxLimitConfig& from) : PiffDTInputMaxLimitConfig(nullptr, from) {}
  inline PiffDTInputMaxLimitConfig(PiffDTInputMaxLimitConfig&& from) noexcept
      : PiffDTInputMaxLimitConfig(nullptr, std::move(from)) {}
  inline PiffDTInputMaxLimitConfig& operator=(const PiffDTInputMaxLimitConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline PiffDTInputMaxLimitConfig& operator=(PiffDTInputMaxLimitConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PiffDTInputMaxLimitConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const PiffDTInputMaxLimitConfig* internal_default_instance() {
    return reinterpret_cast<const PiffDTInputMaxLimitConfig*>(
        &_PiffDTInputMaxLimitConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(PiffDTInputMaxLimitConfig& a, PiffDTInputMaxLimitConfig& b) { a.Swap(&b); }
  inline void Swap(PiffDTInputMaxLimitConfig* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PiffDTInputMaxLimitConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PiffDTInputMaxLimitConfig* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PiffDTInputMaxLimitConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PiffDTInputMaxLimitConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PiffDTInputMaxLimitConfig& from) { PiffDTInputMaxLimitConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PiffDTInputMaxLimitConfig* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.PiffDTInputMaxLimitConfig"; }

 protected:
  explicit PiffDTInputMaxLimitConfig(::google::protobuf::Arena* arena);
  PiffDTInputMaxLimitConfig(::google::protobuf::Arena* arena, const PiffDTInputMaxLimitConfig& from);
  PiffDTInputMaxLimitConfig(::google::protobuf::Arena* arena, PiffDTInputMaxLimitConfig&& from) noexcept
      : PiffDTInputMaxLimitConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSpeedKphFieldNumber = 1,
    kLateralErrorFieldNumber = 2,
    kHeadingErrorDegFieldNumber = 3,
  };
  // required float speed_kph = 1;
  bool has_speed_kph() const;
  void clear_speed_kph() ;
  float speed_kph() const;
  void set_speed_kph(float value);

  private:
  float _internal_speed_kph() const;
  void _internal_set_speed_kph(float value);

  public:
  // required float lateral_error = 2;
  bool has_lateral_error() const;
  void clear_lateral_error() ;
  float lateral_error() const;
  void set_lateral_error(float value);

  private:
  float _internal_lateral_error() const;
  void _internal_set_lateral_error(float value);

  public:
  // required float heading_error_deg = 3;
  bool has_heading_error_deg() const;
  void clear_heading_error_deg() ;
  float heading_error_deg() const;
  void set_heading_error_deg(float value);

  private:
  float _internal_heading_error_deg() const;
  void _internal_set_heading_error_deg(float value);

  public:
  // @@protoc_insertion_point(class_scope:control.PiffDTInputMaxLimitConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PiffDTInputMaxLimitConfig_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PiffDTInputMaxLimitConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    float speed_kph_;
    float lateral_error_;
    float heading_error_deg_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PiffDTInputFrameLimitConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.PiffDTInputFrameLimitConfig) */ {
 public:
  inline PiffDTInputFrameLimitConfig() : PiffDTInputFrameLimitConfig(nullptr) {}
  ~PiffDTInputFrameLimitConfig() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PiffDTInputFrameLimitConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline PiffDTInputFrameLimitConfig(const PiffDTInputFrameLimitConfig& from) : PiffDTInputFrameLimitConfig(nullptr, from) {}
  inline PiffDTInputFrameLimitConfig(PiffDTInputFrameLimitConfig&& from) noexcept
      : PiffDTInputFrameLimitConfig(nullptr, std::move(from)) {}
  inline PiffDTInputFrameLimitConfig& operator=(const PiffDTInputFrameLimitConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline PiffDTInputFrameLimitConfig& operator=(PiffDTInputFrameLimitConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PiffDTInputFrameLimitConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const PiffDTInputFrameLimitConfig* internal_default_instance() {
    return reinterpret_cast<const PiffDTInputFrameLimitConfig*>(
        &_PiffDTInputFrameLimitConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(PiffDTInputFrameLimitConfig& a, PiffDTInputFrameLimitConfig& b) { a.Swap(&b); }
  inline void Swap(PiffDTInputFrameLimitConfig* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PiffDTInputFrameLimitConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PiffDTInputFrameLimitConfig* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PiffDTInputFrameLimitConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PiffDTInputFrameLimitConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PiffDTInputFrameLimitConfig& from) { PiffDTInputFrameLimitConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PiffDTInputFrameLimitConfig* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.PiffDTInputFrameLimitConfig"; }

 protected:
  explicit PiffDTInputFrameLimitConfig(::google::protobuf::Arena* arena);
  PiffDTInputFrameLimitConfig(::google::protobuf::Arena* arena, const PiffDTInputFrameLimitConfig& from);
  PiffDTInputFrameLimitConfig(::google::protobuf::Arena* arena, PiffDTInputFrameLimitConfig&& from) noexcept
      : PiffDTInputFrameLimitConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSpeedKphFieldNumber = 1,
    kC0JumpMaxMFieldNumber = 2,
    kC0TransitRateMpsFieldNumber = 3,
    kC0TrackPercentageFieldNumber = 4,
    kC1JumpMaxRadFieldNumber = 5,
    kC1TransitRateRadpsFieldNumber = 6,
    kC1TrackPercentageFieldNumber = 7,
    kC2JumpMaxFieldNumber = 8,
    kC2TransitRateFieldNumber = 9,
    kC2TrackPercentageFieldNumber = 10,
  };
  // required float speed_kph = 1;
  bool has_speed_kph() const;
  void clear_speed_kph() ;
  float speed_kph() const;
  void set_speed_kph(float value);

  private:
  float _internal_speed_kph() const;
  void _internal_set_speed_kph(float value);

  public:
  // required float c0_jump_max_m = 2;
  bool has_c0_jump_max_m() const;
  void clear_c0_jump_max_m() ;
  float c0_jump_max_m() const;
  void set_c0_jump_max_m(float value);

  private:
  float _internal_c0_jump_max_m() const;
  void _internal_set_c0_jump_max_m(float value);

  public:
  // required float c0_transit_rate_mps = 3;
  bool has_c0_transit_rate_mps() const;
  void clear_c0_transit_rate_mps() ;
  float c0_transit_rate_mps() const;
  void set_c0_transit_rate_mps(float value);

  private:
  float _internal_c0_transit_rate_mps() const;
  void _internal_set_c0_transit_rate_mps(float value);

  public:
  // required float c0_track_percentage = 4;
  bool has_c0_track_percentage() const;
  void clear_c0_track_percentage() ;
  float c0_track_percentage() const;
  void set_c0_track_percentage(float value);

  private:
  float _internal_c0_track_percentage() const;
  void _internal_set_c0_track_percentage(float value);

  public:
  // required float c1_jump_max_rad = 5;
  bool has_c1_jump_max_rad() const;
  void clear_c1_jump_max_rad() ;
  float c1_jump_max_rad() const;
  void set_c1_jump_max_rad(float value);

  private:
  float _internal_c1_jump_max_rad() const;
  void _internal_set_c1_jump_max_rad(float value);

  public:
  // required float c1_transit_rate_radps = 6;
  bool has_c1_transit_rate_radps() const;
  void clear_c1_transit_rate_radps() ;
  float c1_transit_rate_radps() const;
  void set_c1_transit_rate_radps(float value);

  private:
  float _internal_c1_transit_rate_radps() const;
  void _internal_set_c1_transit_rate_radps(float value);

  public:
  // required float c1_track_percentage = 7;
  bool has_c1_track_percentage() const;
  void clear_c1_track_percentage() ;
  float c1_track_percentage() const;
  void set_c1_track_percentage(float value);

  private:
  float _internal_c1_track_percentage() const;
  void _internal_set_c1_track_percentage(float value);

  public:
  // required float c2_jump_max = 8;
  bool has_c2_jump_max() const;
  void clear_c2_jump_max() ;
  float c2_jump_max() const;
  void set_c2_jump_max(float value);

  private:
  float _internal_c2_jump_max() const;
  void _internal_set_c2_jump_max(float value);

  public:
  // required float c2_transit_rate = 9;
  bool has_c2_transit_rate() const;
  void clear_c2_transit_rate() ;
  float c2_transit_rate() const;
  void set_c2_transit_rate(float value);

  private:
  float _internal_c2_transit_rate() const;
  void _internal_set_c2_transit_rate(float value);

  public:
  // required float c2_track_percentage = 10;
  bool has_c2_track_percentage() const;
  void clear_c2_track_percentage() ;
  float c2_track_percentage() const;
  void set_c2_track_percentage(float value);

  private:
  float _internal_c2_track_percentage() const;
  void _internal_set_c2_track_percentage(float value);

  public:
  // @@protoc_insertion_point(class_scope:control.PiffDTInputFrameLimitConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PiffDTInputFrameLimitConfig_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PiffDTInputFrameLimitConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    float speed_kph_;
    float c0_jump_max_m_;
    float c0_transit_rate_mps_;
    float c0_track_percentage_;
    float c1_jump_max_rad_;
    float c1_transit_rate_radps_;
    float c1_track_percentage_;
    float c2_jump_max_;
    float c2_transit_rate_;
    float c2_track_percentage_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PiffControllerContentRateConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.PiffControllerContentRateConfig) */ {
 public:
  inline PiffControllerContentRateConfig() : PiffControllerContentRateConfig(nullptr) {}
  ~PiffControllerContentRateConfig() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PiffControllerContentRateConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline PiffControllerContentRateConfig(const PiffControllerContentRateConfig& from) : PiffControllerContentRateConfig(nullptr, from) {}
  inline PiffControllerContentRateConfig(PiffControllerContentRateConfig&& from) noexcept
      : PiffControllerContentRateConfig(nullptr, std::move(from)) {}
  inline PiffControllerContentRateConfig& operator=(const PiffControllerContentRateConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline PiffControllerContentRateConfig& operator=(PiffControllerContentRateConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PiffControllerContentRateConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const PiffControllerContentRateConfig* internal_default_instance() {
    return reinterpret_cast<const PiffControllerContentRateConfig*>(
        &_PiffControllerContentRateConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(PiffControllerContentRateConfig& a, PiffControllerContentRateConfig& b) { a.Swap(&b); }
  inline void Swap(PiffControllerContentRateConfig* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PiffControllerContentRateConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PiffControllerContentRateConfig* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PiffControllerContentRateConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PiffControllerContentRateConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PiffControllerContentRateConfig& from) { PiffControllerContentRateConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PiffControllerContentRateConfig* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.PiffControllerContentRateConfig"; }

 protected:
  explicit PiffControllerContentRateConfig(::google::protobuf::Arena* arena);
  PiffControllerContentRateConfig(::google::protobuf::Arena* arena, const PiffControllerContentRateConfig& from);
  PiffControllerContentRateConfig(::google::protobuf::Arena* arena, PiffControllerContentRateConfig&& from) noexcept
      : PiffControllerContentRateConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCurvatureFieldNumber = 1,
    kSpeedKphFieldNumber = 2,
    kFfRateFieldNumber = 3,
    kFbRateFieldNumber = 4,
  };
  // required float curvature = 1;
  bool has_curvature() const;
  void clear_curvature() ;
  float curvature() const;
  void set_curvature(float value);

  private:
  float _internal_curvature() const;
  void _internal_set_curvature(float value);

  public:
  // required float speed_kph = 2;
  bool has_speed_kph() const;
  void clear_speed_kph() ;
  float speed_kph() const;
  void set_speed_kph(float value);

  private:
  float _internal_speed_kph() const;
  void _internal_set_speed_kph(float value);

  public:
  // required float ff_rate = 3;
  bool has_ff_rate() const;
  void clear_ff_rate() ;
  float ff_rate() const;
  void set_ff_rate(float value);

  private:
  float _internal_ff_rate() const;
  void _internal_set_ff_rate(float value);

  public:
  // required float fb_rate = 4;
  bool has_fb_rate() const;
  void clear_fb_rate() ;
  float fb_rate() const;
  void set_fb_rate(float value);

  private:
  float _internal_fb_rate() const;
  void _internal_set_fb_rate(float value);

  public:
  // @@protoc_insertion_point(class_scope:control.PiffControllerContentRateConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PiffControllerContentRateConfig_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PiffControllerContentRateConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    float curvature_;
    float speed_kph_;
    float ff_rate_;
    float fb_rate_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PiffCommonParametersConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.PiffCommonParametersConfig) */ {
 public:
  inline PiffCommonParametersConfig() : PiffCommonParametersConfig(nullptr) {}
  ~PiffCommonParametersConfig() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PiffCommonParametersConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline PiffCommonParametersConfig(const PiffCommonParametersConfig& from) : PiffCommonParametersConfig(nullptr, from) {}
  inline PiffCommonParametersConfig(PiffCommonParametersConfig&& from) noexcept
      : PiffCommonParametersConfig(nullptr, std::move(from)) {}
  inline PiffCommonParametersConfig& operator=(const PiffCommonParametersConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline PiffCommonParametersConfig& operator=(PiffCommonParametersConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PiffCommonParametersConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const PiffCommonParametersConfig* internal_default_instance() {
    return reinterpret_cast<const PiffCommonParametersConfig*>(
        &_PiffCommonParametersConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(PiffCommonParametersConfig& a, PiffCommonParametersConfig& b) { a.Swap(&b); }
  inline void Swap(PiffCommonParametersConfig* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PiffCommonParametersConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PiffCommonParametersConfig* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PiffCommonParametersConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PiffCommonParametersConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PiffCommonParametersConfig& from) { PiffCommonParametersConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PiffCommonParametersConfig* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.PiffCommonParametersConfig"; }

 protected:
  explicit PiffCommonParametersConfig(::google::protobuf::Arena* arena);
  PiffCommonParametersConfig(::google::protobuf::Arena* arena, const PiffCommonParametersConfig& from);
  PiffCommonParametersConfig(::google::protobuf::Arena* arena, PiffCommonParametersConfig&& from) noexcept
      : PiffCommonParametersConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kControlPeriodFieldNumber = 1,
    kStandstillSpeedMpsFieldNumber = 3,
  };
  // required float control_period = 1;
  bool has_control_period() const;
  void clear_control_period() ;
  float control_period() const;
  void set_control_period(float value);

  private:
  float _internal_control_period() const;
  void _internal_set_control_period(float value);

  public:
  // required float standstill_speed_mps = 3;
  bool has_standstill_speed_mps() const;
  void clear_standstill_speed_mps() ;
  float standstill_speed_mps() const;
  void set_standstill_speed_mps(float value);

  private:
  float _internal_standstill_speed_mps() const;
  void _internal_set_standstill_speed_mps(float value);

  public:
  // @@protoc_insertion_point(class_scope:control.PiffCommonParametersConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PiffCommonParametersConfig_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PiffCommonParametersConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    float control_period_;
    float standstill_speed_mps_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PiffCoeffientGainConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.PiffCoeffientGainConfig) */ {
 public:
  inline PiffCoeffientGainConfig() : PiffCoeffientGainConfig(nullptr) {}
  ~PiffCoeffientGainConfig() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PiffCoeffientGainConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline PiffCoeffientGainConfig(const PiffCoeffientGainConfig& from) : PiffCoeffientGainConfig(nullptr, from) {}
  inline PiffCoeffientGainConfig(PiffCoeffientGainConfig&& from) noexcept
      : PiffCoeffientGainConfig(nullptr, std::move(from)) {}
  inline PiffCoeffientGainConfig& operator=(const PiffCoeffientGainConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline PiffCoeffientGainConfig& operator=(PiffCoeffientGainConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PiffCoeffientGainConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const PiffCoeffientGainConfig* internal_default_instance() {
    return reinterpret_cast<const PiffCoeffientGainConfig*>(
        &_PiffCoeffientGainConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(PiffCoeffientGainConfig& a, PiffCoeffientGainConfig& b) { a.Swap(&b); }
  inline void Swap(PiffCoeffientGainConfig* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PiffCoeffientGainConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PiffCoeffientGainConfig* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PiffCoeffientGainConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PiffCoeffientGainConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PiffCoeffientGainConfig& from) { PiffCoeffientGainConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PiffCoeffientGainConfig* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.PiffCoeffientGainConfig"; }

 protected:
  explicit PiffCoeffientGainConfig(::google::protobuf::Arena* arena);
  PiffCoeffientGainConfig(::google::protobuf::Arena* arena, const PiffCoeffientGainConfig& from);
  PiffCoeffientGainConfig(::google::protobuf::Arena* arena, PiffCoeffientGainConfig&& from) noexcept
      : PiffCoeffientGainConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kC0ThresholdFieldNumber = 1,
    kC1CoefFieldNumber = 2,
    kC2CoefFieldNumber = 3,
  };
  // required float c0_threshold = 1;
  bool has_c0_threshold() const;
  void clear_c0_threshold() ;
  float c0_threshold() const;
  void set_c0_threshold(float value);

  private:
  float _internal_c0_threshold() const;
  void _internal_set_c0_threshold(float value);

  public:
  // required float c1_coef = 2;
  bool has_c1_coef() const;
  void clear_c1_coef() ;
  float c1_coef() const;
  void set_c1_coef(float value);

  private:
  float _internal_c1_coef() const;
  void _internal_set_c1_coef(float value);

  public:
  // required float c2_coef = 3;
  bool has_c2_coef() const;
  void clear_c2_coef() ;
  float c2_coef() const;
  void set_c2_coef(float value);

  private:
  float _internal_c2_coef() const;
  void _internal_set_c2_coef(float value);

  public:
  // @@protoc_insertion_point(class_scope:control.PiffCoeffientGainConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PiffCoeffientGainConfig_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PiffCoeffientGainConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    float c0_threshold_;
    float c1_coef_;
    float c2_coef_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PiffCCSteeringFakeDeadZoneConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.PiffCCSteeringFakeDeadZoneConfig) */ {
 public:
  inline PiffCCSteeringFakeDeadZoneConfig() : PiffCCSteeringFakeDeadZoneConfig(nullptr) {}
  ~PiffCCSteeringFakeDeadZoneConfig() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PiffCCSteeringFakeDeadZoneConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline PiffCCSteeringFakeDeadZoneConfig(const PiffCCSteeringFakeDeadZoneConfig& from) : PiffCCSteeringFakeDeadZoneConfig(nullptr, from) {}
  inline PiffCCSteeringFakeDeadZoneConfig(PiffCCSteeringFakeDeadZoneConfig&& from) noexcept
      : PiffCCSteeringFakeDeadZoneConfig(nullptr, std::move(from)) {}
  inline PiffCCSteeringFakeDeadZoneConfig& operator=(const PiffCCSteeringFakeDeadZoneConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline PiffCCSteeringFakeDeadZoneConfig& operator=(PiffCCSteeringFakeDeadZoneConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PiffCCSteeringFakeDeadZoneConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const PiffCCSteeringFakeDeadZoneConfig* internal_default_instance() {
    return reinterpret_cast<const PiffCCSteeringFakeDeadZoneConfig*>(
        &_PiffCCSteeringFakeDeadZoneConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(PiffCCSteeringFakeDeadZoneConfig& a, PiffCCSteeringFakeDeadZoneConfig& b) { a.Swap(&b); }
  inline void Swap(PiffCCSteeringFakeDeadZoneConfig* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PiffCCSteeringFakeDeadZoneConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PiffCCSteeringFakeDeadZoneConfig* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PiffCCSteeringFakeDeadZoneConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PiffCCSteeringFakeDeadZoneConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PiffCCSteeringFakeDeadZoneConfig& from) { PiffCCSteeringFakeDeadZoneConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PiffCCSteeringFakeDeadZoneConfig* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.PiffCCSteeringFakeDeadZoneConfig"; }

 protected:
  explicit PiffCCSteeringFakeDeadZoneConfig(::google::protobuf::Arena* arena);
  PiffCCSteeringFakeDeadZoneConfig(::google::protobuf::Arena* arena, const PiffCCSteeringFakeDeadZoneConfig& from);
  PiffCCSteeringFakeDeadZoneConfig(::google::protobuf::Arena* arena, PiffCCSteeringFakeDeadZoneConfig&& from) noexcept
      : PiffCCSteeringFakeDeadZoneConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLateralErrorMFakeZoneFieldNumber = 2,
    kEnableFakeDeadZoneFieldNumber = 1,
    kEnableFakeTransitionZoneFieldNumber = 4,
    kHeadingErrorRadFakeZoneFieldNumber = 3,
    kLateralErrorMTransitionZoneFieldNumber = 5,
    kHeadingErrorRadTransitionZoneFieldNumber = 6,
    kModeFieldNumber = 7,
  };
  // required float lateral_error_m_fake_zone = 2;
  bool has_lateral_error_m_fake_zone() const;
  void clear_lateral_error_m_fake_zone() ;
  float lateral_error_m_fake_zone() const;
  void set_lateral_error_m_fake_zone(float value);

  private:
  float _internal_lateral_error_m_fake_zone() const;
  void _internal_set_lateral_error_m_fake_zone(float value);

  public:
  // required bool enable_fake_dead_zone = 1;
  bool has_enable_fake_dead_zone() const;
  void clear_enable_fake_dead_zone() ;
  bool enable_fake_dead_zone() const;
  void set_enable_fake_dead_zone(bool value);

  private:
  bool _internal_enable_fake_dead_zone() const;
  void _internal_set_enable_fake_dead_zone(bool value);

  public:
  // required bool enable_fake_transition_zone = 4;
  bool has_enable_fake_transition_zone() const;
  void clear_enable_fake_transition_zone() ;
  bool enable_fake_transition_zone() const;
  void set_enable_fake_transition_zone(bool value);

  private:
  bool _internal_enable_fake_transition_zone() const;
  void _internal_set_enable_fake_transition_zone(bool value);

  public:
  // required float heading_error_rad_fake_zone = 3;
  bool has_heading_error_rad_fake_zone() const;
  void clear_heading_error_rad_fake_zone() ;
  float heading_error_rad_fake_zone() const;
  void set_heading_error_rad_fake_zone(float value);

  private:
  float _internal_heading_error_rad_fake_zone() const;
  void _internal_set_heading_error_rad_fake_zone(float value);

  public:
  // required float lateral_error_m_transition_zone = 5;
  bool has_lateral_error_m_transition_zone() const;
  void clear_lateral_error_m_transition_zone() ;
  float lateral_error_m_transition_zone() const;
  void set_lateral_error_m_transition_zone(float value);

  private:
  float _internal_lateral_error_m_transition_zone() const;
  void _internal_set_lateral_error_m_transition_zone(float value);

  public:
  // required float heading_error_rad_transition_zone = 6;
  bool has_heading_error_rad_transition_zone() const;
  void clear_heading_error_rad_transition_zone() ;
  float heading_error_rad_transition_zone() const;
  void set_heading_error_rad_transition_zone(float value);

  private:
  float _internal_heading_error_rad_transition_zone() const;
  void _internal_set_heading_error_rad_transition_zone(float value);

  public:
  // required int32 mode = 7;
  bool has_mode() const;
  void clear_mode() ;
  ::int32_t mode() const;
  void set_mode(::int32_t value);

  private:
  ::int32_t _internal_mode() const;
  void _internal_set_mode(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:control.PiffCCSteeringFakeDeadZoneConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PiffCCSteeringFakeDeadZoneConfig_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PiffCCSteeringFakeDeadZoneConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    float lateral_error_m_fake_zone_;
    bool enable_fake_dead_zone_;
    bool enable_fake_transition_zone_;
    float heading_error_rad_fake_zone_;
    float lateral_error_m_transition_zone_;
    float heading_error_rad_transition_zone_;
    ::int32_t mode_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PiffTrackingDifferentiatorConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.PiffTrackingDifferentiatorConfig) */ {
 public:
  inline PiffTrackingDifferentiatorConfig() : PiffTrackingDifferentiatorConfig(nullptr) {}
  ~PiffTrackingDifferentiatorConfig() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PiffTrackingDifferentiatorConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline PiffTrackingDifferentiatorConfig(const PiffTrackingDifferentiatorConfig& from) : PiffTrackingDifferentiatorConfig(nullptr, from) {}
  inline PiffTrackingDifferentiatorConfig(PiffTrackingDifferentiatorConfig&& from) noexcept
      : PiffTrackingDifferentiatorConfig(nullptr, std::move(from)) {}
  inline PiffTrackingDifferentiatorConfig& operator=(const PiffTrackingDifferentiatorConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline PiffTrackingDifferentiatorConfig& operator=(PiffTrackingDifferentiatorConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PiffTrackingDifferentiatorConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const PiffTrackingDifferentiatorConfig* internal_default_instance() {
    return reinterpret_cast<const PiffTrackingDifferentiatorConfig*>(
        &_PiffTrackingDifferentiatorConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(PiffTrackingDifferentiatorConfig& a, PiffTrackingDifferentiatorConfig& b) { a.Swap(&b); }
  inline void Swap(PiffTrackingDifferentiatorConfig* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PiffTrackingDifferentiatorConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PiffTrackingDifferentiatorConfig* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PiffTrackingDifferentiatorConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PiffTrackingDifferentiatorConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PiffTrackingDifferentiatorConfig& from) { PiffTrackingDifferentiatorConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PiffTrackingDifferentiatorConfig* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.PiffTrackingDifferentiatorConfig"; }

 protected:
  explicit PiffTrackingDifferentiatorConfig(::google::protobuf::Arena* arena);
  PiffTrackingDifferentiatorConfig(::google::protobuf::Arena* arena, const PiffTrackingDifferentiatorConfig& from);
  PiffTrackingDifferentiatorConfig(::google::protobuf::Arena* arena, PiffTrackingDifferentiatorConfig&& from) noexcept
      : PiffTrackingDifferentiatorConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTdSwitchFieldNumber = 1,
    kCenterLineC2ParasFieldNumber = 2,
    kYawRateParasFieldNumber = 3,
  };
  // required .control.PiffTrackingDifferentiatorSwitch td_switch = 1;
  bool has_td_switch() const;
  void clear_td_switch() ;
  const ::control::PiffTrackingDifferentiatorSwitch& td_switch() const;
  PROTOBUF_NODISCARD ::control::PiffTrackingDifferentiatorSwitch* release_td_switch();
  ::control::PiffTrackingDifferentiatorSwitch* mutable_td_switch();
  void set_allocated_td_switch(::control::PiffTrackingDifferentiatorSwitch* value);
  void unsafe_arena_set_allocated_td_switch(::control::PiffTrackingDifferentiatorSwitch* value);
  ::control::PiffTrackingDifferentiatorSwitch* unsafe_arena_release_td_switch();

  private:
  const ::control::PiffTrackingDifferentiatorSwitch& _internal_td_switch() const;
  ::control::PiffTrackingDifferentiatorSwitch* _internal_mutable_td_switch();

  public:
  // required .control.PiffTrackingDifferentiatorStateParameters center_line_c2_paras = 2;
  bool has_center_line_c2_paras() const;
  void clear_center_line_c2_paras() ;
  const ::control::PiffTrackingDifferentiatorStateParameters& center_line_c2_paras() const;
  PROTOBUF_NODISCARD ::control::PiffTrackingDifferentiatorStateParameters* release_center_line_c2_paras();
  ::control::PiffTrackingDifferentiatorStateParameters* mutable_center_line_c2_paras();
  void set_allocated_center_line_c2_paras(::control::PiffTrackingDifferentiatorStateParameters* value);
  void unsafe_arena_set_allocated_center_line_c2_paras(::control::PiffTrackingDifferentiatorStateParameters* value);
  ::control::PiffTrackingDifferentiatorStateParameters* unsafe_arena_release_center_line_c2_paras();

  private:
  const ::control::PiffTrackingDifferentiatorStateParameters& _internal_center_line_c2_paras() const;
  ::control::PiffTrackingDifferentiatorStateParameters* _internal_mutable_center_line_c2_paras();

  public:
  // required .control.PiffTrackingDifferentiatorStateParameters yaw_rate_paras = 3;
  bool has_yaw_rate_paras() const;
  void clear_yaw_rate_paras() ;
  const ::control::PiffTrackingDifferentiatorStateParameters& yaw_rate_paras() const;
  PROTOBUF_NODISCARD ::control::PiffTrackingDifferentiatorStateParameters* release_yaw_rate_paras();
  ::control::PiffTrackingDifferentiatorStateParameters* mutable_yaw_rate_paras();
  void set_allocated_yaw_rate_paras(::control::PiffTrackingDifferentiatorStateParameters* value);
  void unsafe_arena_set_allocated_yaw_rate_paras(::control::PiffTrackingDifferentiatorStateParameters* value);
  ::control::PiffTrackingDifferentiatorStateParameters* unsafe_arena_release_yaw_rate_paras();

  private:
  const ::control::PiffTrackingDifferentiatorStateParameters& _internal_yaw_rate_paras() const;
  ::control::PiffTrackingDifferentiatorStateParameters* _internal_mutable_yaw_rate_paras();

  public:
  // @@protoc_insertion_point(class_scope:control.PiffTrackingDifferentiatorConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PiffTrackingDifferentiatorConfig_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PiffTrackingDifferentiatorConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::control::PiffTrackingDifferentiatorSwitch* td_switch_;
    ::control::PiffTrackingDifferentiatorStateParameters* center_line_c2_paras_;
    ::control::PiffTrackingDifferentiatorStateParameters* yaw_rate_paras_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PiffPPDeactivateControlConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.PiffPPDeactivateControlConfig) */ {
 public:
  inline PiffPPDeactivateControlConfig() : PiffPPDeactivateControlConfig(nullptr) {}
  ~PiffPPDeactivateControlConfig() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PiffPPDeactivateControlConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline PiffPPDeactivateControlConfig(const PiffPPDeactivateControlConfig& from) : PiffPPDeactivateControlConfig(nullptr, from) {}
  inline PiffPPDeactivateControlConfig(PiffPPDeactivateControlConfig&& from) noexcept
      : PiffPPDeactivateControlConfig(nullptr, std::move(from)) {}
  inline PiffPPDeactivateControlConfig& operator=(const PiffPPDeactivateControlConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline PiffPPDeactivateControlConfig& operator=(PiffPPDeactivateControlConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PiffPPDeactivateControlConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const PiffPPDeactivateControlConfig* internal_default_instance() {
    return reinterpret_cast<const PiffPPDeactivateControlConfig*>(
        &_PiffPPDeactivateControlConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(PiffPPDeactivateControlConfig& a, PiffPPDeactivateControlConfig& b) { a.Swap(&b); }
  inline void Swap(PiffPPDeactivateControlConfig* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PiffPPDeactivateControlConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PiffPPDeactivateControlConfig* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PiffPPDeactivateControlConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PiffPPDeactivateControlConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PiffPPDeactivateControlConfig& from) { PiffPPDeactivateControlConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PiffPPDeactivateControlConfig* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.PiffPPDeactivateControlConfig"; }

 protected:
  explicit PiffPPDeactivateControlConfig(::google::protobuf::Arena* arena);
  PiffPPDeactivateControlConfig(::google::protobuf::Arena* arena, const PiffPPDeactivateControlConfig& from);
  PiffPPDeactivateControlConfig(::google::protobuf::Arena* arena, PiffPPDeactivateControlConfig&& from) noexcept
      : PiffPPDeactivateControlConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeactivateConfFieldNumber = 2,
    kEnablePostDeactivateControlFieldNumber = 1,
    kRampModeFieldNumber = 3,
  };
  // repeated .control.PiffPPDectivateControlContentConfig deactivate_conf = 2;
  int deactivate_conf_size() const;
  private:
  int _internal_deactivate_conf_size() const;

  public:
  void clear_deactivate_conf() ;
  ::control::PiffPPDectivateControlContentConfig* mutable_deactivate_conf(int index);
  ::google::protobuf::RepeatedPtrField<::control::PiffPPDectivateControlContentConfig>* mutable_deactivate_conf();

  private:
  const ::google::protobuf::RepeatedPtrField<::control::PiffPPDectivateControlContentConfig>& _internal_deactivate_conf() const;
  ::google::protobuf::RepeatedPtrField<::control::PiffPPDectivateControlContentConfig>* _internal_mutable_deactivate_conf();
  public:
  const ::control::PiffPPDectivateControlContentConfig& deactivate_conf(int index) const;
  ::control::PiffPPDectivateControlContentConfig* add_deactivate_conf();
  const ::google::protobuf::RepeatedPtrField<::control::PiffPPDectivateControlContentConfig>& deactivate_conf() const;
  // required bool enable_post_deactivate_control = 1;
  bool has_enable_post_deactivate_control() const;
  void clear_enable_post_deactivate_control() ;
  bool enable_post_deactivate_control() const;
  void set_enable_post_deactivate_control(bool value);

  private:
  bool _internal_enable_post_deactivate_control() const;
  void _internal_set_enable_post_deactivate_control(bool value);

  public:
  // required int32 ramp_mode = 3;
  bool has_ramp_mode() const;
  void clear_ramp_mode() ;
  ::int32_t ramp_mode() const;
  void set_ramp_mode(::int32_t value);

  private:
  ::int32_t _internal_ramp_mode() const;
  void _internal_set_ramp_mode(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:control.PiffPPDeactivateControlConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PiffPPDeactivateControlConfig_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PiffPPDeactivateControlConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::control::PiffPPDectivateControlContentConfig > deactivate_conf_;
    bool enable_post_deactivate_control_;
    ::int32_t ramp_mode_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PiffPPActivateControlConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.PiffPPActivateControlConfig) */ {
 public:
  inline PiffPPActivateControlConfig() : PiffPPActivateControlConfig(nullptr) {}
  ~PiffPPActivateControlConfig() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PiffPPActivateControlConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline PiffPPActivateControlConfig(const PiffPPActivateControlConfig& from) : PiffPPActivateControlConfig(nullptr, from) {}
  inline PiffPPActivateControlConfig(PiffPPActivateControlConfig&& from) noexcept
      : PiffPPActivateControlConfig(nullptr, std::move(from)) {}
  inline PiffPPActivateControlConfig& operator=(const PiffPPActivateControlConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline PiffPPActivateControlConfig& operator=(PiffPPActivateControlConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PiffPPActivateControlConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const PiffPPActivateControlConfig* internal_default_instance() {
    return reinterpret_cast<const PiffPPActivateControlConfig*>(
        &_PiffPPActivateControlConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(PiffPPActivateControlConfig& a, PiffPPActivateControlConfig& b) { a.Swap(&b); }
  inline void Swap(PiffPPActivateControlConfig* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PiffPPActivateControlConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PiffPPActivateControlConfig* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PiffPPActivateControlConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PiffPPActivateControlConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PiffPPActivateControlConfig& from) { PiffPPActivateControlConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PiffPPActivateControlConfig* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.PiffPPActivateControlConfig"; }

 protected:
  explicit PiffPPActivateControlConfig(::google::protobuf::Arena* arena);
  PiffPPActivateControlConfig(::google::protobuf::Arena* arena, const PiffPPActivateControlConfig& from);
  PiffPPActivateControlConfig(::google::protobuf::Arena* arena, PiffPPActivateControlConfig&& from) noexcept
      : PiffPPActivateControlConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kActivateConfFieldNumber = 2,
    kEnablePostActivateControlFieldNumber = 1,
    kRampModeFieldNumber = 3,
  };
  // repeated .control.PiffPPActivateControlContentConfig activate_conf = 2;
  int activate_conf_size() const;
  private:
  int _internal_activate_conf_size() const;

  public:
  void clear_activate_conf() ;
  ::control::PiffPPActivateControlContentConfig* mutable_activate_conf(int index);
  ::google::protobuf::RepeatedPtrField<::control::PiffPPActivateControlContentConfig>* mutable_activate_conf();

  private:
  const ::google::protobuf::RepeatedPtrField<::control::PiffPPActivateControlContentConfig>& _internal_activate_conf() const;
  ::google::protobuf::RepeatedPtrField<::control::PiffPPActivateControlContentConfig>* _internal_mutable_activate_conf();
  public:
  const ::control::PiffPPActivateControlContentConfig& activate_conf(int index) const;
  ::control::PiffPPActivateControlContentConfig* add_activate_conf();
  const ::google::protobuf::RepeatedPtrField<::control::PiffPPActivateControlContentConfig>& activate_conf() const;
  // required bool enable_post_activate_control = 1;
  bool has_enable_post_activate_control() const;
  void clear_enable_post_activate_control() ;
  bool enable_post_activate_control() const;
  void set_enable_post_activate_control(bool value);

  private:
  bool _internal_enable_post_activate_control() const;
  void _internal_set_enable_post_activate_control(bool value);

  public:
  // required int32 ramp_mode = 3;
  bool has_ramp_mode() const;
  void clear_ramp_mode() ;
  ::int32_t ramp_mode() const;
  void set_ramp_mode(::int32_t value);

  private:
  ::int32_t _internal_ramp_mode() const;
  void _internal_set_ramp_mode(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:control.PiffPPActivateControlConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PiffPPActivateControlConfig_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PiffPPActivateControlConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::control::PiffPPActivateControlContentConfig > activate_conf_;
    bool enable_post_activate_control_;
    ::int32_t ramp_mode_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PiffMeanFilterConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.PiffMeanFilterConfig) */ {
 public:
  inline PiffMeanFilterConfig() : PiffMeanFilterConfig(nullptr) {}
  ~PiffMeanFilterConfig() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PiffMeanFilterConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline PiffMeanFilterConfig(const PiffMeanFilterConfig& from) : PiffMeanFilterConfig(nullptr, from) {}
  inline PiffMeanFilterConfig(PiffMeanFilterConfig&& from) noexcept
      : PiffMeanFilterConfig(nullptr, std::move(from)) {}
  inline PiffMeanFilterConfig& operator=(const PiffMeanFilterConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline PiffMeanFilterConfig& operator=(PiffMeanFilterConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PiffMeanFilterConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const PiffMeanFilterConfig* internal_default_instance() {
    return reinterpret_cast<const PiffMeanFilterConfig*>(
        &_PiffMeanFilterConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(PiffMeanFilterConfig& a, PiffMeanFilterConfig& b) { a.Swap(&b); }
  inline void Swap(PiffMeanFilterConfig* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PiffMeanFilterConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PiffMeanFilterConfig* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PiffMeanFilterConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PiffMeanFilterConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PiffMeanFilterConfig& from) { PiffMeanFilterConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PiffMeanFilterConfig* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.PiffMeanFilterConfig"; }

 protected:
  explicit PiffMeanFilterConfig(::google::protobuf::Arena* arena);
  PiffMeanFilterConfig(::google::protobuf::Arena* arena, const PiffMeanFilterConfig& from);
  PiffMeanFilterConfig(::google::protobuf::Arena* arena, PiffMeanFilterConfig&& from) noexcept
      : PiffMeanFilterConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFilterSwitchFieldNumber = 1,
    kWindowSizeFieldNumber = 2,
  };
  // required .control.PiffMeanFilterSwitch filter_switch = 1;
  bool has_filter_switch() const;
  void clear_filter_switch() ;
  const ::control::PiffMeanFilterSwitch& filter_switch() const;
  PROTOBUF_NODISCARD ::control::PiffMeanFilterSwitch* release_filter_switch();
  ::control::PiffMeanFilterSwitch* mutable_filter_switch();
  void set_allocated_filter_switch(::control::PiffMeanFilterSwitch* value);
  void unsafe_arena_set_allocated_filter_switch(::control::PiffMeanFilterSwitch* value);
  ::control::PiffMeanFilterSwitch* unsafe_arena_release_filter_switch();

  private:
  const ::control::PiffMeanFilterSwitch& _internal_filter_switch() const;
  ::control::PiffMeanFilterSwitch* _internal_mutable_filter_switch();

  public:
  // required .control.PiffMeanFilterWindowSize window_size = 2;
  bool has_window_size() const;
  void clear_window_size() ;
  const ::control::PiffMeanFilterWindowSize& window_size() const;
  PROTOBUF_NODISCARD ::control::PiffMeanFilterWindowSize* release_window_size();
  ::control::PiffMeanFilterWindowSize* mutable_window_size();
  void set_allocated_window_size(::control::PiffMeanFilterWindowSize* value);
  void unsafe_arena_set_allocated_window_size(::control::PiffMeanFilterWindowSize* value);
  ::control::PiffMeanFilterWindowSize* unsafe_arena_release_window_size();

  private:
  const ::control::PiffMeanFilterWindowSize& _internal_window_size() const;
  ::control::PiffMeanFilterWindowSize* _internal_mutable_window_size();

  public:
  // @@protoc_insertion_point(class_scope:control.PiffMeanFilterConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PiffMeanFilterConfig_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PiffMeanFilterConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::control::PiffMeanFilterSwitch* filter_switch_;
    ::control::PiffMeanFilterWindowSize* window_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PiffIntegratorConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.PiffIntegratorConfig) */ {
 public:
  inline PiffIntegratorConfig() : PiffIntegratorConfig(nullptr) {}
  ~PiffIntegratorConfig() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PiffIntegratorConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline PiffIntegratorConfig(const PiffIntegratorConfig& from) : PiffIntegratorConfig(nullptr, from) {}
  inline PiffIntegratorConfig(PiffIntegratorConfig&& from) noexcept
      : PiffIntegratorConfig(nullptr, std::move(from)) {}
  inline PiffIntegratorConfig& operator=(const PiffIntegratorConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline PiffIntegratorConfig& operator=(PiffIntegratorConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PiffIntegratorConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const PiffIntegratorConfig* internal_default_instance() {
    return reinterpret_cast<const PiffIntegratorConfig*>(
        &_PiffIntegratorConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(PiffIntegratorConfig& a, PiffIntegratorConfig& b) { a.Swap(&b); }
  inline void Swap(PiffIntegratorConfig* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PiffIntegratorConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PiffIntegratorConfig* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PiffIntegratorConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PiffIntegratorConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PiffIntegratorConfig& from) { PiffIntegratorConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PiffIntegratorConfig* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.PiffIntegratorConfig"; }

 protected:
  explicit PiffIntegratorConfig(::google::protobuf::Arena* arena);
  PiffIntegratorConfig(::google::protobuf::Arena* arena, const PiffIntegratorConfig& from);
  PiffIntegratorConfig(::google::protobuf::Arena* arena, PiffIntegratorConfig&& from) noexcept
      : PiffIntegratorConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLinearModeIntegratorConfFieldNumber = 4,
    kPercentageModeIntegratorConfFieldNumber = 5,
    kProtectIntegratorConfFieldNumber = 6,
    kEnableIntegratorFieldNumber = 1,
    kSteeringSaturationLevelDegFieldNumber = 2,
    kModeIntegratorFieldNumber = 3,
  };
  // required .control.PiffLinearModeIntegratorConfig linear_mode_integrator_conf = 4;
  bool has_linear_mode_integrator_conf() const;
  void clear_linear_mode_integrator_conf() ;
  const ::control::PiffLinearModeIntegratorConfig& linear_mode_integrator_conf() const;
  PROTOBUF_NODISCARD ::control::PiffLinearModeIntegratorConfig* release_linear_mode_integrator_conf();
  ::control::PiffLinearModeIntegratorConfig* mutable_linear_mode_integrator_conf();
  void set_allocated_linear_mode_integrator_conf(::control::PiffLinearModeIntegratorConfig* value);
  void unsafe_arena_set_allocated_linear_mode_integrator_conf(::control::PiffLinearModeIntegratorConfig* value);
  ::control::PiffLinearModeIntegratorConfig* unsafe_arena_release_linear_mode_integrator_conf();

  private:
  const ::control::PiffLinearModeIntegratorConfig& _internal_linear_mode_integrator_conf() const;
  ::control::PiffLinearModeIntegratorConfig* _internal_mutable_linear_mode_integrator_conf();

  public:
  // required .control.PiffPercentageModeIntegratorConfig percentage_mode_integrator_conf = 5;
  bool has_percentage_mode_integrator_conf() const;
  void clear_percentage_mode_integrator_conf() ;
  const ::control::PiffPercentageModeIntegratorConfig& percentage_mode_integrator_conf() const;
  PROTOBUF_NODISCARD ::control::PiffPercentageModeIntegratorConfig* release_percentage_mode_integrator_conf();
  ::control::PiffPercentageModeIntegratorConfig* mutable_percentage_mode_integrator_conf();
  void set_allocated_percentage_mode_integrator_conf(::control::PiffPercentageModeIntegratorConfig* value);
  void unsafe_arena_set_allocated_percentage_mode_integrator_conf(::control::PiffPercentageModeIntegratorConfig* value);
  ::control::PiffPercentageModeIntegratorConfig* unsafe_arena_release_percentage_mode_integrator_conf();

  private:
  const ::control::PiffPercentageModeIntegratorConfig& _internal_percentage_mode_integrator_conf() const;
  ::control::PiffPercentageModeIntegratorConfig* _internal_mutable_percentage_mode_integrator_conf();

  public:
  // required .control.PiffProtectIntegratorConfig protect_integrator_conf = 6;
  bool has_protect_integrator_conf() const;
  void clear_protect_integrator_conf() ;
  const ::control::PiffProtectIntegratorConfig& protect_integrator_conf() const;
  PROTOBUF_NODISCARD ::control::PiffProtectIntegratorConfig* release_protect_integrator_conf();
  ::control::PiffProtectIntegratorConfig* mutable_protect_integrator_conf();
  void set_allocated_protect_integrator_conf(::control::PiffProtectIntegratorConfig* value);
  void unsafe_arena_set_allocated_protect_integrator_conf(::control::PiffProtectIntegratorConfig* value);
  ::control::PiffProtectIntegratorConfig* unsafe_arena_release_protect_integrator_conf();

  private:
  const ::control::PiffProtectIntegratorConfig& _internal_protect_integrator_conf() const;
  ::control::PiffProtectIntegratorConfig* _internal_mutable_protect_integrator_conf();

  public:
  // required bool enable_integrator = 1;
  bool has_enable_integrator() const;
  void clear_enable_integrator() ;
  bool enable_integrator() const;
  void set_enable_integrator(bool value);

  private:
  bool _internal_enable_integrator() const;
  void _internal_set_enable_integrator(bool value);

  public:
  // required float steering_saturation_level_deg = 2;
  bool has_steering_saturation_level_deg() const;
  void clear_steering_saturation_level_deg() ;
  float steering_saturation_level_deg() const;
  void set_steering_saturation_level_deg(float value);

  private:
  float _internal_steering_saturation_level_deg() const;
  void _internal_set_steering_saturation_level_deg(float value);

  public:
  // required int32 mode_integrator = 3;
  bool has_mode_integrator() const;
  void clear_mode_integrator() ;
  ::int32_t mode_integrator() const;
  void set_mode_integrator(::int32_t value);

  private:
  ::int32_t _internal_mode_integrator() const;
  void _internal_set_mode_integrator(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:control.PiffIntegratorConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PiffIntegratorConfig_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PiffIntegratorConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::control::PiffLinearModeIntegratorConfig* linear_mode_integrator_conf_;
    ::control::PiffPercentageModeIntegratorConfig* percentage_mode_integrator_conf_;
    ::control::PiffProtectIntegratorConfig* protect_integrator_conf_;
    bool enable_integrator_;
    float steering_saturation_level_deg_;
    ::int32_t mode_integrator_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PiffDataTransformConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.PiffDataTransformConfig) */ {
 public:
  inline PiffDataTransformConfig() : PiffDataTransformConfig(nullptr) {}
  ~PiffDataTransformConfig() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PiffDataTransformConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline PiffDataTransformConfig(const PiffDataTransformConfig& from) : PiffDataTransformConfig(nullptr, from) {}
  inline PiffDataTransformConfig(PiffDataTransformConfig&& from) noexcept
      : PiffDataTransformConfig(nullptr, std::move(from)) {}
  inline PiffDataTransformConfig& operator=(const PiffDataTransformConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline PiffDataTransformConfig& operator=(PiffDataTransformConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PiffDataTransformConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const PiffDataTransformConfig* internal_default_instance() {
    return reinterpret_cast<const PiffDataTransformConfig*>(
        &_PiffDataTransformConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(PiffDataTransformConfig& a, PiffDataTransformConfig& b) { a.Swap(&b); }
  inline void Swap(PiffDataTransformConfig* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PiffDataTransformConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PiffDataTransformConfig* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PiffDataTransformConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PiffDataTransformConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PiffDataTransformConfig& from) { PiffDataTransformConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PiffDataTransformConfig* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.PiffDataTransformConfig"; }

 protected:
  explicit PiffDataTransformConfig(::google::protobuf::Arena* arena);
  PiffDataTransformConfig(::google::protobuf::Arena* arena, const PiffDataTransformConfig& from);
  PiffDataTransformConfig(::google::protobuf::Arena* arena, PiffDataTransformConfig&& from) noexcept
      : PiffDataTransformConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInputMaxLimitConfFieldNumber = 2,
    kInputFrameLimitConfFieldNumber = 4,
    kEnableInputMaxLimitFieldNumber = 1,
    kEnableInputFrameLimitFieldNumber = 3,
    kFrameRampModeFieldNumber = 5,
  };
  // repeated .control.PiffDTInputMaxLimitConfig input_max_limit_conf = 2;
  int input_max_limit_conf_size() const;
  private:
  int _internal_input_max_limit_conf_size() const;

  public:
  void clear_input_max_limit_conf() ;
  ::control::PiffDTInputMaxLimitConfig* mutable_input_max_limit_conf(int index);
  ::google::protobuf::RepeatedPtrField<::control::PiffDTInputMaxLimitConfig>* mutable_input_max_limit_conf();

  private:
  const ::google::protobuf::RepeatedPtrField<::control::PiffDTInputMaxLimitConfig>& _internal_input_max_limit_conf() const;
  ::google::protobuf::RepeatedPtrField<::control::PiffDTInputMaxLimitConfig>* _internal_mutable_input_max_limit_conf();
  public:
  const ::control::PiffDTInputMaxLimitConfig& input_max_limit_conf(int index) const;
  ::control::PiffDTInputMaxLimitConfig* add_input_max_limit_conf();
  const ::google::protobuf::RepeatedPtrField<::control::PiffDTInputMaxLimitConfig>& input_max_limit_conf() const;
  // repeated .control.PiffDTInputFrameLimitConfig input_frame_limit_conf = 4;
  int input_frame_limit_conf_size() const;
  private:
  int _internal_input_frame_limit_conf_size() const;

  public:
  void clear_input_frame_limit_conf() ;
  ::control::PiffDTInputFrameLimitConfig* mutable_input_frame_limit_conf(int index);
  ::google::protobuf::RepeatedPtrField<::control::PiffDTInputFrameLimitConfig>* mutable_input_frame_limit_conf();

  private:
  const ::google::protobuf::RepeatedPtrField<::control::PiffDTInputFrameLimitConfig>& _internal_input_frame_limit_conf() const;
  ::google::protobuf::RepeatedPtrField<::control::PiffDTInputFrameLimitConfig>* _internal_mutable_input_frame_limit_conf();
  public:
  const ::control::PiffDTInputFrameLimitConfig& input_frame_limit_conf(int index) const;
  ::control::PiffDTInputFrameLimitConfig* add_input_frame_limit_conf();
  const ::google::protobuf::RepeatedPtrField<::control::PiffDTInputFrameLimitConfig>& input_frame_limit_conf() const;
  // required bool enable_input_max_limit = 1;
  bool has_enable_input_max_limit() const;
  void clear_enable_input_max_limit() ;
  bool enable_input_max_limit() const;
  void set_enable_input_max_limit(bool value);

  private:
  bool _internal_enable_input_max_limit() const;
  void _internal_set_enable_input_max_limit(bool value);

  public:
  // required bool enable_input_frame_limit = 3;
  bool has_enable_input_frame_limit() const;
  void clear_enable_input_frame_limit() ;
  bool enable_input_frame_limit() const;
  void set_enable_input_frame_limit(bool value);

  private:
  bool _internal_enable_input_frame_limit() const;
  void _internal_set_enable_input_frame_limit(bool value);

  public:
  // required int32 frame_ramp_mode = 5;
  bool has_frame_ramp_mode() const;
  void clear_frame_ramp_mode() ;
  ::int32_t frame_ramp_mode() const;
  void set_frame_ramp_mode(::int32_t value);

  private:
  ::int32_t _internal_frame_ramp_mode() const;
  void _internal_set_frame_ramp_mode(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:control.PiffDataTransformConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PiffDataTransformConfig_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PiffDataTransformConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::control::PiffDTInputMaxLimitConfig > input_max_limit_conf_;
    ::google::protobuf::RepeatedPtrField< ::control::PiffDTInputFrameLimitConfig > input_frame_limit_conf_;
    bool enable_input_max_limit_;
    bool enable_input_frame_limit_;
    ::int32_t frame_ramp_mode_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PiffPostProcessConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.PiffPostProcessConfig) */ {
 public:
  inline PiffPostProcessConfig() : PiffPostProcessConfig(nullptr) {}
  ~PiffPostProcessConfig() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PiffPostProcessConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline PiffPostProcessConfig(const PiffPostProcessConfig& from) : PiffPostProcessConfig(nullptr, from) {}
  inline PiffPostProcessConfig(PiffPostProcessConfig&& from) noexcept
      : PiffPostProcessConfig(nullptr, std::move(from)) {}
  inline PiffPostProcessConfig& operator=(const PiffPostProcessConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline PiffPostProcessConfig& operator=(PiffPostProcessConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PiffPostProcessConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const PiffPostProcessConfig* internal_default_instance() {
    return reinterpret_cast<const PiffPostProcessConfig*>(
        &_PiffPostProcessConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(PiffPostProcessConfig& a, PiffPostProcessConfig& b) { a.Swap(&b); }
  inline void Swap(PiffPostProcessConfig* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PiffPostProcessConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PiffPostProcessConfig* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PiffPostProcessConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PiffPostProcessConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PiffPostProcessConfig& from) { PiffPostProcessConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PiffPostProcessConfig* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.PiffPostProcessConfig"; }

 protected:
  explicit PiffPostProcessConfig(::google::protobuf::Arena* arena);
  PiffPostProcessConfig(::google::protobuf::Arena* arena, const PiffPostProcessConfig& from);
  PiffPostProcessConfig(::google::protobuf::Arena* arena, PiffPostProcessConfig&& from) noexcept
      : PiffPostProcessConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSteeringAngleLimitFieldNumber = 4,
    kPostActivateControlConfFieldNumber = 5,
    kPostDeactivateControlConfFieldNumber = 6,
    kEnableSteeringLimitFieldNumber = 1,
    kSteeringRangeFactorFieldNumber = 2,
    kSteeringRateRangeFactorFieldNumber = 3,
  };
  // repeated .control.PiffPPSteeringAngleLimit steering_angle_limit = 4;
  int steering_angle_limit_size() const;
  private:
  int _internal_steering_angle_limit_size() const;

  public:
  void clear_steering_angle_limit() ;
  ::control::PiffPPSteeringAngleLimit* mutable_steering_angle_limit(int index);
  ::google::protobuf::RepeatedPtrField<::control::PiffPPSteeringAngleLimit>* mutable_steering_angle_limit();

  private:
  const ::google::protobuf::RepeatedPtrField<::control::PiffPPSteeringAngleLimit>& _internal_steering_angle_limit() const;
  ::google::protobuf::RepeatedPtrField<::control::PiffPPSteeringAngleLimit>* _internal_mutable_steering_angle_limit();
  public:
  const ::control::PiffPPSteeringAngleLimit& steering_angle_limit(int index) const;
  ::control::PiffPPSteeringAngleLimit* add_steering_angle_limit();
  const ::google::protobuf::RepeatedPtrField<::control::PiffPPSteeringAngleLimit>& steering_angle_limit() const;
  // required .control.PiffPPActivateControlConfig post_activate_control_conf = 5;
  bool has_post_activate_control_conf() const;
  void clear_post_activate_control_conf() ;
  const ::control::PiffPPActivateControlConfig& post_activate_control_conf() const;
  PROTOBUF_NODISCARD ::control::PiffPPActivateControlConfig* release_post_activate_control_conf();
  ::control::PiffPPActivateControlConfig* mutable_post_activate_control_conf();
  void set_allocated_post_activate_control_conf(::control::PiffPPActivateControlConfig* value);
  void unsafe_arena_set_allocated_post_activate_control_conf(::control::PiffPPActivateControlConfig* value);
  ::control::PiffPPActivateControlConfig* unsafe_arena_release_post_activate_control_conf();

  private:
  const ::control::PiffPPActivateControlConfig& _internal_post_activate_control_conf() const;
  ::control::PiffPPActivateControlConfig* _internal_mutable_post_activate_control_conf();

  public:
  // required .control.PiffPPDeactivateControlConfig post_deactivate_control_conf = 6;
  bool has_post_deactivate_control_conf() const;
  void clear_post_deactivate_control_conf() ;
  const ::control::PiffPPDeactivateControlConfig& post_deactivate_control_conf() const;
  PROTOBUF_NODISCARD ::control::PiffPPDeactivateControlConfig* release_post_deactivate_control_conf();
  ::control::PiffPPDeactivateControlConfig* mutable_post_deactivate_control_conf();
  void set_allocated_post_deactivate_control_conf(::control::PiffPPDeactivateControlConfig* value);
  void unsafe_arena_set_allocated_post_deactivate_control_conf(::control::PiffPPDeactivateControlConfig* value);
  ::control::PiffPPDeactivateControlConfig* unsafe_arena_release_post_deactivate_control_conf();

  private:
  const ::control::PiffPPDeactivateControlConfig& _internal_post_deactivate_control_conf() const;
  ::control::PiffPPDeactivateControlConfig* _internal_mutable_post_deactivate_control_conf();

  public:
  // required bool enable_steering_limit = 1;
  bool has_enable_steering_limit() const;
  void clear_enable_steering_limit() ;
  bool enable_steering_limit() const;
  void set_enable_steering_limit(bool value);

  private:
  bool _internal_enable_steering_limit() const;
  void _internal_set_enable_steering_limit(bool value);

  public:
  // required float steering_range_factor = 2;
  bool has_steering_range_factor() const;
  void clear_steering_range_factor() ;
  float steering_range_factor() const;
  void set_steering_range_factor(float value);

  private:
  float _internal_steering_range_factor() const;
  void _internal_set_steering_range_factor(float value);

  public:
  // required float steering_rate_range_factor = 3;
  bool has_steering_rate_range_factor() const;
  void clear_steering_rate_range_factor() ;
  float steering_rate_range_factor() const;
  void set_steering_rate_range_factor(float value);

  private:
  float _internal_steering_rate_range_factor() const;
  void _internal_set_steering_rate_range_factor(float value);

  public:
  // @@protoc_insertion_point(class_scope:control.PiffPostProcessConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PiffPostProcessConfig_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PiffPostProcessConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::control::PiffPPSteeringAngleLimit > steering_angle_limit_;
    ::control::PiffPPActivateControlConfig* post_activate_control_conf_;
    ::control::PiffPPDeactivateControlConfig* post_deactivate_control_conf_;
    bool enable_steering_limit_;
    float steering_range_factor_;
    float steering_rate_range_factor_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class PiffControllerContentConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.PiffControllerContentConfig) */ {
 public:
  inline PiffControllerContentConfig() : PiffControllerContentConfig(nullptr) {}
  ~PiffControllerContentConfig() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PiffControllerContentConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline PiffControllerContentConfig(const PiffControllerContentConfig& from) : PiffControllerContentConfig(nullptr, from) {}
  inline PiffControllerContentConfig(PiffControllerContentConfig&& from) noexcept
      : PiffControllerContentConfig(nullptr, std::move(from)) {}
  inline PiffControllerContentConfig& operator=(const PiffControllerContentConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline PiffControllerContentConfig& operator=(PiffControllerContentConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PiffControllerContentConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const PiffControllerContentConfig* internal_default_instance() {
    return reinterpret_cast<const PiffControllerContentConfig*>(
        &_PiffControllerContentConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(PiffControllerContentConfig& a, PiffControllerContentConfig& b) { a.Swap(&b); }
  inline void Swap(PiffControllerContentConfig* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PiffControllerContentConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PiffControllerContentConfig* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PiffControllerContentConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PiffControllerContentConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PiffControllerContentConfig& from) { PiffControllerContentConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PiffControllerContentConfig* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.PiffControllerContentConfig"; }

 protected:
  explicit PiffControllerContentConfig(::google::protobuf::Arena* arena);
  PiffControllerContentConfig(::google::protobuf::Arena* arena, const PiffControllerContentConfig& from);
  PiffControllerContentConfig(::google::protobuf::Arena* arena, PiffControllerContentConfig&& from) noexcept
      : PiffControllerContentConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRateConfFieldNumber = 5,
    kIntegratorConfFieldNumber = 6,
    kSteeringFakeDeadZoneConfFieldNumber = 8,
    kPreviewModeFieldNumber = 1,
    kPreviewTimeMsC01FieldNumber = 2,
    kPreviewTimeMsC2FieldNumber = 3,
    kCurvatureMinStartFfFieldNumber = 4,
    kSteeringBiasDegFieldNumber = 7,
    kCurvaturnTransitionFfFieldNumber = 9,
  };
  // repeated .control.PiffControllerContentRateConfig rate_conf = 5;
  int rate_conf_size() const;
  private:
  int _internal_rate_conf_size() const;

  public:
  void clear_rate_conf() ;
  ::control::PiffControllerContentRateConfig* mutable_rate_conf(int index);
  ::google::protobuf::RepeatedPtrField<::control::PiffControllerContentRateConfig>* mutable_rate_conf();

  private:
  const ::google::protobuf::RepeatedPtrField<::control::PiffControllerContentRateConfig>& _internal_rate_conf() const;
  ::google::protobuf::RepeatedPtrField<::control::PiffControllerContentRateConfig>* _internal_mutable_rate_conf();
  public:
  const ::control::PiffControllerContentRateConfig& rate_conf(int index) const;
  ::control::PiffControllerContentRateConfig* add_rate_conf();
  const ::google::protobuf::RepeatedPtrField<::control::PiffControllerContentRateConfig>& rate_conf() const;
  // required .control.PiffIntegratorConfig integrator_conf = 6;
  bool has_integrator_conf() const;
  void clear_integrator_conf() ;
  const ::control::PiffIntegratorConfig& integrator_conf() const;
  PROTOBUF_NODISCARD ::control::PiffIntegratorConfig* release_integrator_conf();
  ::control::PiffIntegratorConfig* mutable_integrator_conf();
  void set_allocated_integrator_conf(::control::PiffIntegratorConfig* value);
  void unsafe_arena_set_allocated_integrator_conf(::control::PiffIntegratorConfig* value);
  ::control::PiffIntegratorConfig* unsafe_arena_release_integrator_conf();

  private:
  const ::control::PiffIntegratorConfig& _internal_integrator_conf() const;
  ::control::PiffIntegratorConfig* _internal_mutable_integrator_conf();

  public:
  // required .control.PiffCCSteeringFakeDeadZoneConfig steering_fake_dead_zone_conf = 8;
  bool has_steering_fake_dead_zone_conf() const;
  void clear_steering_fake_dead_zone_conf() ;
  const ::control::PiffCCSteeringFakeDeadZoneConfig& steering_fake_dead_zone_conf() const;
  PROTOBUF_NODISCARD ::control::PiffCCSteeringFakeDeadZoneConfig* release_steering_fake_dead_zone_conf();
  ::control::PiffCCSteeringFakeDeadZoneConfig* mutable_steering_fake_dead_zone_conf();
  void set_allocated_steering_fake_dead_zone_conf(::control::PiffCCSteeringFakeDeadZoneConfig* value);
  void unsafe_arena_set_allocated_steering_fake_dead_zone_conf(::control::PiffCCSteeringFakeDeadZoneConfig* value);
  ::control::PiffCCSteeringFakeDeadZoneConfig* unsafe_arena_release_steering_fake_dead_zone_conf();

  private:
  const ::control::PiffCCSteeringFakeDeadZoneConfig& _internal_steering_fake_dead_zone_conf() const;
  ::control::PiffCCSteeringFakeDeadZoneConfig* _internal_mutable_steering_fake_dead_zone_conf();

  public:
  // required int32 preview_mode = 1;
  bool has_preview_mode() const;
  void clear_preview_mode() ;
  ::int32_t preview_mode() const;
  void set_preview_mode(::int32_t value);

  private:
  ::int32_t _internal_preview_mode() const;
  void _internal_set_preview_mode(::int32_t value);

  public:
  // required float preview_time_ms_c01 = 2;
  bool has_preview_time_ms_c01() const;
  void clear_preview_time_ms_c01() ;
  float preview_time_ms_c01() const;
  void set_preview_time_ms_c01(float value);

  private:
  float _internal_preview_time_ms_c01() const;
  void _internal_set_preview_time_ms_c01(float value);

  public:
  // required float preview_time_ms_c2 = 3;
  bool has_preview_time_ms_c2() const;
  void clear_preview_time_ms_c2() ;
  float preview_time_ms_c2() const;
  void set_preview_time_ms_c2(float value);

  private:
  float _internal_preview_time_ms_c2() const;
  void _internal_set_preview_time_ms_c2(float value);

  public:
  // required float curvature_min_start_ff = 4;
  bool has_curvature_min_start_ff() const;
  void clear_curvature_min_start_ff() ;
  float curvature_min_start_ff() const;
  void set_curvature_min_start_ff(float value);

  private:
  float _internal_curvature_min_start_ff() const;
  void _internal_set_curvature_min_start_ff(float value);

  public:
  // required float steering_bias_deg = 7;
  bool has_steering_bias_deg() const;
  void clear_steering_bias_deg() ;
  float steering_bias_deg() const;
  void set_steering_bias_deg(float value);

  private:
  float _internal_steering_bias_deg() const;
  void _internal_set_steering_bias_deg(float value);

  public:
  // required float curvaturn_transition_ff = 9;
  bool has_curvaturn_transition_ff() const;
  void clear_curvaturn_transition_ff() ;
  float curvaturn_transition_ff() const;
  void set_curvaturn_transition_ff(float value);

  private:
  float _internal_curvaturn_transition_ff() const;
  void _internal_set_curvaturn_transition_ff(float value);

  public:
  // @@protoc_insertion_point(class_scope:control.PiffControllerContentConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PiffControllerContentConfig_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PiffControllerContentConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::control::PiffControllerContentRateConfig > rate_conf_;
    ::control::PiffIntegratorConfig* integrator_conf_;
    ::control::PiffCCSteeringFakeDeadZoneConfig* steering_fake_dead_zone_conf_;
    ::int32_t preview_mode_;
    float preview_time_ms_c01_;
    float preview_time_ms_c2_;
    float curvature_min_start_ff_;
    float steering_bias_deg_;
    float curvaturn_transition_ff_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class LatPidConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.LatPidConfig) */ {
 public:
  inline LatPidConfig() : LatPidConfig(nullptr) {}
  ~LatPidConfig() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LatPidConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline LatPidConfig(const LatPidConfig& from) : LatPidConfig(nullptr, from) {}
  inline LatPidConfig(LatPidConfig&& from) noexcept
      : LatPidConfig(nullptr, std::move(from)) {}
  inline LatPidConfig& operator=(const LatPidConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline LatPidConfig& operator=(LatPidConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LatPidConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const LatPidConfig* internal_default_instance() {
    return reinterpret_cast<const LatPidConfig*>(
        &_LatPidConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(LatPidConfig& a, LatPidConfig& b) { a.Swap(&b); }
  inline void Swap(LatPidConfig* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LatPidConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LatPidConfig* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<LatPidConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LatPidConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LatPidConfig& from) { LatPidConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LatPidConfig* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.LatPidConfig"; }

 protected:
  explicit LatPidConfig(::google::protobuf::Arena* arena);
  LatPidConfig(::google::protobuf::Arena* arena, const LatPidConfig& from);
  LatPidConfig(::google::protobuf::Arena* arena, LatPidConfig&& from) noexcept
      : LatPidConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPiffParasFieldNumber = 3,
    kCommonParaConfFieldNumber = 1,
    kControllerContentConfFieldNumber = 2,
    kMeanFilterConfFieldNumber = 4,
    kTrackingDifferentiatorConfFieldNumber = 5,
    kDataTransformConfFieldNumber = 6,
    kPostProcessConfFieldNumber = 7,
    kCoeffientGainConfFieldNumber = 8,
  };
  // repeated .control.PiffParameters piff_paras = 3;
  int piff_paras_size() const;
  private:
  int _internal_piff_paras_size() const;

  public:
  void clear_piff_paras() ;
  ::control::PiffParameters* mutable_piff_paras(int index);
  ::google::protobuf::RepeatedPtrField<::control::PiffParameters>* mutable_piff_paras();

  private:
  const ::google::protobuf::RepeatedPtrField<::control::PiffParameters>& _internal_piff_paras() const;
  ::google::protobuf::RepeatedPtrField<::control::PiffParameters>* _internal_mutable_piff_paras();
  public:
  const ::control::PiffParameters& piff_paras(int index) const;
  ::control::PiffParameters* add_piff_paras();
  const ::google::protobuf::RepeatedPtrField<::control::PiffParameters>& piff_paras() const;
  // required .control.PiffCommonParametersConfig common_para_conf = 1;
  bool has_common_para_conf() const;
  void clear_common_para_conf() ;
  const ::control::PiffCommonParametersConfig& common_para_conf() const;
  PROTOBUF_NODISCARD ::control::PiffCommonParametersConfig* release_common_para_conf();
  ::control::PiffCommonParametersConfig* mutable_common_para_conf();
  void set_allocated_common_para_conf(::control::PiffCommonParametersConfig* value);
  void unsafe_arena_set_allocated_common_para_conf(::control::PiffCommonParametersConfig* value);
  ::control::PiffCommonParametersConfig* unsafe_arena_release_common_para_conf();

  private:
  const ::control::PiffCommonParametersConfig& _internal_common_para_conf() const;
  ::control::PiffCommonParametersConfig* _internal_mutable_common_para_conf();

  public:
  // required .control.PiffControllerContentConfig controller_content_conf = 2;
  bool has_controller_content_conf() const;
  void clear_controller_content_conf() ;
  const ::control::PiffControllerContentConfig& controller_content_conf() const;
  PROTOBUF_NODISCARD ::control::PiffControllerContentConfig* release_controller_content_conf();
  ::control::PiffControllerContentConfig* mutable_controller_content_conf();
  void set_allocated_controller_content_conf(::control::PiffControllerContentConfig* value);
  void unsafe_arena_set_allocated_controller_content_conf(::control::PiffControllerContentConfig* value);
  ::control::PiffControllerContentConfig* unsafe_arena_release_controller_content_conf();

  private:
  const ::control::PiffControllerContentConfig& _internal_controller_content_conf() const;
  ::control::PiffControllerContentConfig* _internal_mutable_controller_content_conf();

  public:
  // required .control.PiffMeanFilterConfig mean_filter_conf = 4;
  bool has_mean_filter_conf() const;
  void clear_mean_filter_conf() ;
  const ::control::PiffMeanFilterConfig& mean_filter_conf() const;
  PROTOBUF_NODISCARD ::control::PiffMeanFilterConfig* release_mean_filter_conf();
  ::control::PiffMeanFilterConfig* mutable_mean_filter_conf();
  void set_allocated_mean_filter_conf(::control::PiffMeanFilterConfig* value);
  void unsafe_arena_set_allocated_mean_filter_conf(::control::PiffMeanFilterConfig* value);
  ::control::PiffMeanFilterConfig* unsafe_arena_release_mean_filter_conf();

  private:
  const ::control::PiffMeanFilterConfig& _internal_mean_filter_conf() const;
  ::control::PiffMeanFilterConfig* _internal_mutable_mean_filter_conf();

  public:
  // required .control.PiffTrackingDifferentiatorConfig tracking_differentiator_conf = 5;
  bool has_tracking_differentiator_conf() const;
  void clear_tracking_differentiator_conf() ;
  const ::control::PiffTrackingDifferentiatorConfig& tracking_differentiator_conf() const;
  PROTOBUF_NODISCARD ::control::PiffTrackingDifferentiatorConfig* release_tracking_differentiator_conf();
  ::control::PiffTrackingDifferentiatorConfig* mutable_tracking_differentiator_conf();
  void set_allocated_tracking_differentiator_conf(::control::PiffTrackingDifferentiatorConfig* value);
  void unsafe_arena_set_allocated_tracking_differentiator_conf(::control::PiffTrackingDifferentiatorConfig* value);
  ::control::PiffTrackingDifferentiatorConfig* unsafe_arena_release_tracking_differentiator_conf();

  private:
  const ::control::PiffTrackingDifferentiatorConfig& _internal_tracking_differentiator_conf() const;
  ::control::PiffTrackingDifferentiatorConfig* _internal_mutable_tracking_differentiator_conf();

  public:
  // required .control.PiffDataTransformConfig data_transform_conf = 6;
  bool has_data_transform_conf() const;
  void clear_data_transform_conf() ;
  const ::control::PiffDataTransformConfig& data_transform_conf() const;
  PROTOBUF_NODISCARD ::control::PiffDataTransformConfig* release_data_transform_conf();
  ::control::PiffDataTransformConfig* mutable_data_transform_conf();
  void set_allocated_data_transform_conf(::control::PiffDataTransformConfig* value);
  void unsafe_arena_set_allocated_data_transform_conf(::control::PiffDataTransformConfig* value);
  ::control::PiffDataTransformConfig* unsafe_arena_release_data_transform_conf();

  private:
  const ::control::PiffDataTransformConfig& _internal_data_transform_conf() const;
  ::control::PiffDataTransformConfig* _internal_mutable_data_transform_conf();

  public:
  // required .control.PiffPostProcessConfig post_process_conf = 7;
  bool has_post_process_conf() const;
  void clear_post_process_conf() ;
  const ::control::PiffPostProcessConfig& post_process_conf() const;
  PROTOBUF_NODISCARD ::control::PiffPostProcessConfig* release_post_process_conf();
  ::control::PiffPostProcessConfig* mutable_post_process_conf();
  void set_allocated_post_process_conf(::control::PiffPostProcessConfig* value);
  void unsafe_arena_set_allocated_post_process_conf(::control::PiffPostProcessConfig* value);
  ::control::PiffPostProcessConfig* unsafe_arena_release_post_process_conf();

  private:
  const ::control::PiffPostProcessConfig& _internal_post_process_conf() const;
  ::control::PiffPostProcessConfig* _internal_mutable_post_process_conf();

  public:
  // required .control.PiffCoeffientGainConfig coeffient_gain_conf = 8;
  bool has_coeffient_gain_conf() const;
  void clear_coeffient_gain_conf() ;
  const ::control::PiffCoeffientGainConfig& coeffient_gain_conf() const;
  PROTOBUF_NODISCARD ::control::PiffCoeffientGainConfig* release_coeffient_gain_conf();
  ::control::PiffCoeffientGainConfig* mutable_coeffient_gain_conf();
  void set_allocated_coeffient_gain_conf(::control::PiffCoeffientGainConfig* value);
  void unsafe_arena_set_allocated_coeffient_gain_conf(::control::PiffCoeffientGainConfig* value);
  ::control::PiffCoeffientGainConfig* unsafe_arena_release_coeffient_gain_conf();

  private:
  const ::control::PiffCoeffientGainConfig& _internal_coeffient_gain_conf() const;
  ::control::PiffCoeffientGainConfig* _internal_mutable_coeffient_gain_conf();

  public:
  // @@protoc_insertion_point(class_scope:control.LatPidConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 8,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_LatPidConfig_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LatPidConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::control::PiffParameters > piff_paras_;
    ::control::PiffCommonParametersConfig* common_para_conf_;
    ::control::PiffControllerContentConfig* controller_content_conf_;
    ::control::PiffMeanFilterConfig* mean_filter_conf_;
    ::control::PiffTrackingDifferentiatorConfig* tracking_differentiator_conf_;
    ::control::PiffDataTransformConfig* data_transform_conf_;
    ::control::PiffPostProcessConfig* post_process_conf_;
    ::control::PiffCoeffientGainConfig* coeffient_gain_conf_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PiffParameters

// required float curvature = 1;
inline bool PiffParameters::has_curvature() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PiffParameters::clear_curvature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.curvature_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float PiffParameters::curvature() const {
  // @@protoc_insertion_point(field_get:control.PiffParameters.curvature)
  return _internal_curvature();
}
inline void PiffParameters::set_curvature(float value) {
  _internal_set_curvature(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:control.PiffParameters.curvature)
}
inline float PiffParameters::_internal_curvature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.curvature_;
}
inline void PiffParameters::_internal_set_curvature(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.curvature_ = value;
}

// required float speed_kph = 2;
inline bool PiffParameters::has_speed_kph() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void PiffParameters::clear_speed_kph() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_kph_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float PiffParameters::speed_kph() const {
  // @@protoc_insertion_point(field_get:control.PiffParameters.speed_kph)
  return _internal_speed_kph();
}
inline void PiffParameters::set_speed_kph(float value) {
  _internal_set_speed_kph(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:control.PiffParameters.speed_kph)
}
inline float PiffParameters::_internal_speed_kph() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.speed_kph_;
}
inline void PiffParameters::_internal_set_speed_kph(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_kph_ = value;
}

// repeated float matrix_k = 3;
inline int PiffParameters::_internal_matrix_k_size() const {
  return _internal_matrix_k().size();
}
inline int PiffParameters::matrix_k_size() const {
  return _internal_matrix_k_size();
}
inline void PiffParameters::clear_matrix_k() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.matrix_k_.Clear();
}
inline float PiffParameters::matrix_k(int index) const {
  // @@protoc_insertion_point(field_get:control.PiffParameters.matrix_k)
  return _internal_matrix_k().Get(index);
}
inline void PiffParameters::set_matrix_k(int index, float value) {
  _internal_mutable_matrix_k()->Set(index, value);
  // @@protoc_insertion_point(field_set:control.PiffParameters.matrix_k)
}
inline void PiffParameters::add_matrix_k(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_matrix_k()->Add(value);
  // @@protoc_insertion_point(field_add:control.PiffParameters.matrix_k)
}
inline const ::google::protobuf::RepeatedField<float>& PiffParameters::matrix_k() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:control.PiffParameters.matrix_k)
  return _internal_matrix_k();
}
inline ::google::protobuf::RepeatedField<float>* PiffParameters::mutable_matrix_k()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:control.PiffParameters.matrix_k)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_matrix_k();
}
inline const ::google::protobuf::RepeatedField<float>&
PiffParameters::_internal_matrix_k() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.matrix_k_;
}
inline ::google::protobuf::RepeatedField<float>* PiffParameters::_internal_mutable_matrix_k() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.matrix_k_;
}

// -------------------------------------------------------------------

// PiffMeanFilterSwitch

// required bool enable_center_line_c0 = 1;
inline bool PiffMeanFilterSwitch::has_enable_center_line_c0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PiffMeanFilterSwitch::clear_enable_center_line_c0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_center_line_c0_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool PiffMeanFilterSwitch::enable_center_line_c0() const {
  // @@protoc_insertion_point(field_get:control.PiffMeanFilterSwitch.enable_center_line_c0)
  return _internal_enable_center_line_c0();
}
inline void PiffMeanFilterSwitch::set_enable_center_line_c0(bool value) {
  _internal_set_enable_center_line_c0(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:control.PiffMeanFilterSwitch.enable_center_line_c0)
}
inline bool PiffMeanFilterSwitch::_internal_enable_center_line_c0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_center_line_c0_;
}
inline void PiffMeanFilterSwitch::_internal_set_enable_center_line_c0(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_center_line_c0_ = value;
}

// required bool enable_center_line_c1 = 2;
inline bool PiffMeanFilterSwitch::has_enable_center_line_c1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void PiffMeanFilterSwitch::clear_enable_center_line_c1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_center_line_c1_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool PiffMeanFilterSwitch::enable_center_line_c1() const {
  // @@protoc_insertion_point(field_get:control.PiffMeanFilterSwitch.enable_center_line_c1)
  return _internal_enable_center_line_c1();
}
inline void PiffMeanFilterSwitch::set_enable_center_line_c1(bool value) {
  _internal_set_enable_center_line_c1(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:control.PiffMeanFilterSwitch.enable_center_line_c1)
}
inline bool PiffMeanFilterSwitch::_internal_enable_center_line_c1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_center_line_c1_;
}
inline void PiffMeanFilterSwitch::_internal_set_enable_center_line_c1(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_center_line_c1_ = value;
}

// required bool enable_center_line_c2 = 3;
inline bool PiffMeanFilterSwitch::has_enable_center_line_c2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void PiffMeanFilterSwitch::clear_enable_center_line_c2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_center_line_c2_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool PiffMeanFilterSwitch::enable_center_line_c2() const {
  // @@protoc_insertion_point(field_get:control.PiffMeanFilterSwitch.enable_center_line_c2)
  return _internal_enable_center_line_c2();
}
inline void PiffMeanFilterSwitch::set_enable_center_line_c2(bool value) {
  _internal_set_enable_center_line_c2(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:control.PiffMeanFilterSwitch.enable_center_line_c2)
}
inline bool PiffMeanFilterSwitch::_internal_enable_center_line_c2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_center_line_c2_;
}
inline void PiffMeanFilterSwitch::_internal_set_enable_center_line_c2(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_center_line_c2_ = value;
}

// required bool enable_speed_mps = 4;
inline bool PiffMeanFilterSwitch::has_enable_speed_mps() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void PiffMeanFilterSwitch::clear_enable_speed_mps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_speed_mps_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool PiffMeanFilterSwitch::enable_speed_mps() const {
  // @@protoc_insertion_point(field_get:control.PiffMeanFilterSwitch.enable_speed_mps)
  return _internal_enable_speed_mps();
}
inline void PiffMeanFilterSwitch::set_enable_speed_mps(bool value) {
  _internal_set_enable_speed_mps(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:control.PiffMeanFilterSwitch.enable_speed_mps)
}
inline bool PiffMeanFilterSwitch::_internal_enable_speed_mps() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_speed_mps_;
}
inline void PiffMeanFilterSwitch::_internal_set_enable_speed_mps(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_speed_mps_ = value;
}

// required bool enable_yaw_rate = 5;
inline bool PiffMeanFilterSwitch::has_enable_yaw_rate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void PiffMeanFilterSwitch::clear_enable_yaw_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_yaw_rate_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool PiffMeanFilterSwitch::enable_yaw_rate() const {
  // @@protoc_insertion_point(field_get:control.PiffMeanFilterSwitch.enable_yaw_rate)
  return _internal_enable_yaw_rate();
}
inline void PiffMeanFilterSwitch::set_enable_yaw_rate(bool value) {
  _internal_set_enable_yaw_rate(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:control.PiffMeanFilterSwitch.enable_yaw_rate)
}
inline bool PiffMeanFilterSwitch::_internal_enable_yaw_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_yaw_rate_;
}
inline void PiffMeanFilterSwitch::_internal_set_enable_yaw_rate(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_yaw_rate_ = value;
}

// -------------------------------------------------------------------

// PiffMeanFilterWindowSize

// required int32 center_line_c0_mfws = 1;
inline bool PiffMeanFilterWindowSize::has_center_line_c0_mfws() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PiffMeanFilterWindowSize::clear_center_line_c0_mfws() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.center_line_c0_mfws_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t PiffMeanFilterWindowSize::center_line_c0_mfws() const {
  // @@protoc_insertion_point(field_get:control.PiffMeanFilterWindowSize.center_line_c0_mfws)
  return _internal_center_line_c0_mfws();
}
inline void PiffMeanFilterWindowSize::set_center_line_c0_mfws(::int32_t value) {
  _internal_set_center_line_c0_mfws(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:control.PiffMeanFilterWindowSize.center_line_c0_mfws)
}
inline ::int32_t PiffMeanFilterWindowSize::_internal_center_line_c0_mfws() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.center_line_c0_mfws_;
}
inline void PiffMeanFilterWindowSize::_internal_set_center_line_c0_mfws(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.center_line_c0_mfws_ = value;
}

// required int32 center_line_c1_mfws = 2;
inline bool PiffMeanFilterWindowSize::has_center_line_c1_mfws() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void PiffMeanFilterWindowSize::clear_center_line_c1_mfws() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.center_line_c1_mfws_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t PiffMeanFilterWindowSize::center_line_c1_mfws() const {
  // @@protoc_insertion_point(field_get:control.PiffMeanFilterWindowSize.center_line_c1_mfws)
  return _internal_center_line_c1_mfws();
}
inline void PiffMeanFilterWindowSize::set_center_line_c1_mfws(::int32_t value) {
  _internal_set_center_line_c1_mfws(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:control.PiffMeanFilterWindowSize.center_line_c1_mfws)
}
inline ::int32_t PiffMeanFilterWindowSize::_internal_center_line_c1_mfws() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.center_line_c1_mfws_;
}
inline void PiffMeanFilterWindowSize::_internal_set_center_line_c1_mfws(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.center_line_c1_mfws_ = value;
}

// required int32 center_line_c2_mfws = 3;
inline bool PiffMeanFilterWindowSize::has_center_line_c2_mfws() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void PiffMeanFilterWindowSize::clear_center_line_c2_mfws() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.center_line_c2_mfws_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t PiffMeanFilterWindowSize::center_line_c2_mfws() const {
  // @@protoc_insertion_point(field_get:control.PiffMeanFilterWindowSize.center_line_c2_mfws)
  return _internal_center_line_c2_mfws();
}
inline void PiffMeanFilterWindowSize::set_center_line_c2_mfws(::int32_t value) {
  _internal_set_center_line_c2_mfws(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:control.PiffMeanFilterWindowSize.center_line_c2_mfws)
}
inline ::int32_t PiffMeanFilterWindowSize::_internal_center_line_c2_mfws() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.center_line_c2_mfws_;
}
inline void PiffMeanFilterWindowSize::_internal_set_center_line_c2_mfws(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.center_line_c2_mfws_ = value;
}

// required int32 speed_mps_mfws = 4;
inline bool PiffMeanFilterWindowSize::has_speed_mps_mfws() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void PiffMeanFilterWindowSize::clear_speed_mps_mfws() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_mps_mfws_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t PiffMeanFilterWindowSize::speed_mps_mfws() const {
  // @@protoc_insertion_point(field_get:control.PiffMeanFilterWindowSize.speed_mps_mfws)
  return _internal_speed_mps_mfws();
}
inline void PiffMeanFilterWindowSize::set_speed_mps_mfws(::int32_t value) {
  _internal_set_speed_mps_mfws(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:control.PiffMeanFilterWindowSize.speed_mps_mfws)
}
inline ::int32_t PiffMeanFilterWindowSize::_internal_speed_mps_mfws() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.speed_mps_mfws_;
}
inline void PiffMeanFilterWindowSize::_internal_set_speed_mps_mfws(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_mps_mfws_ = value;
}

// required int32 yaw_rate_mfws = 5;
inline bool PiffMeanFilterWindowSize::has_yaw_rate_mfws() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void PiffMeanFilterWindowSize::clear_yaw_rate_mfws() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.yaw_rate_mfws_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t PiffMeanFilterWindowSize::yaw_rate_mfws() const {
  // @@protoc_insertion_point(field_get:control.PiffMeanFilterWindowSize.yaw_rate_mfws)
  return _internal_yaw_rate_mfws();
}
inline void PiffMeanFilterWindowSize::set_yaw_rate_mfws(::int32_t value) {
  _internal_set_yaw_rate_mfws(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:control.PiffMeanFilterWindowSize.yaw_rate_mfws)
}
inline ::int32_t PiffMeanFilterWindowSize::_internal_yaw_rate_mfws() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.yaw_rate_mfws_;
}
inline void PiffMeanFilterWindowSize::_internal_set_yaw_rate_mfws(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.yaw_rate_mfws_ = value;
}

// -------------------------------------------------------------------

// PiffMeanFilterConfig

// required .control.PiffMeanFilterSwitch filter_switch = 1;
inline bool PiffMeanFilterConfig::has_filter_switch() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.filter_switch_ != nullptr);
  return value;
}
inline void PiffMeanFilterConfig::clear_filter_switch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.filter_switch_ != nullptr) _impl_.filter_switch_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::control::PiffMeanFilterSwitch& PiffMeanFilterConfig::_internal_filter_switch() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::control::PiffMeanFilterSwitch* p = _impl_.filter_switch_;
  return p != nullptr ? *p : reinterpret_cast<const ::control::PiffMeanFilterSwitch&>(::control::_PiffMeanFilterSwitch_default_instance_);
}
inline const ::control::PiffMeanFilterSwitch& PiffMeanFilterConfig::filter_switch() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.PiffMeanFilterConfig.filter_switch)
  return _internal_filter_switch();
}
inline void PiffMeanFilterConfig::unsafe_arena_set_allocated_filter_switch(::control::PiffMeanFilterSwitch* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.filter_switch_);
  }
  _impl_.filter_switch_ = reinterpret_cast<::control::PiffMeanFilterSwitch*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control.PiffMeanFilterConfig.filter_switch)
}
inline ::control::PiffMeanFilterSwitch* PiffMeanFilterConfig::release_filter_switch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::control::PiffMeanFilterSwitch* released = _impl_.filter_switch_;
  _impl_.filter_switch_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::control::PiffMeanFilterSwitch* PiffMeanFilterConfig::unsafe_arena_release_filter_switch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control.PiffMeanFilterConfig.filter_switch)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::control::PiffMeanFilterSwitch* temp = _impl_.filter_switch_;
  _impl_.filter_switch_ = nullptr;
  return temp;
}
inline ::control::PiffMeanFilterSwitch* PiffMeanFilterConfig::_internal_mutable_filter_switch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.filter_switch_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::control::PiffMeanFilterSwitch>(GetArena());
    _impl_.filter_switch_ = reinterpret_cast<::control::PiffMeanFilterSwitch*>(p);
  }
  return _impl_.filter_switch_;
}
inline ::control::PiffMeanFilterSwitch* PiffMeanFilterConfig::mutable_filter_switch() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::control::PiffMeanFilterSwitch* _msg = _internal_mutable_filter_switch();
  // @@protoc_insertion_point(field_mutable:control.PiffMeanFilterConfig.filter_switch)
  return _msg;
}
inline void PiffMeanFilterConfig::set_allocated_filter_switch(::control::PiffMeanFilterSwitch* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.filter_switch_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.filter_switch_ = reinterpret_cast<::control::PiffMeanFilterSwitch*>(value);
  // @@protoc_insertion_point(field_set_allocated:control.PiffMeanFilterConfig.filter_switch)
}

// required .control.PiffMeanFilterWindowSize window_size = 2;
inline bool PiffMeanFilterConfig::has_window_size() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.window_size_ != nullptr);
  return value;
}
inline void PiffMeanFilterConfig::clear_window_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.window_size_ != nullptr) _impl_.window_size_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::control::PiffMeanFilterWindowSize& PiffMeanFilterConfig::_internal_window_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::control::PiffMeanFilterWindowSize* p = _impl_.window_size_;
  return p != nullptr ? *p : reinterpret_cast<const ::control::PiffMeanFilterWindowSize&>(::control::_PiffMeanFilterWindowSize_default_instance_);
}
inline const ::control::PiffMeanFilterWindowSize& PiffMeanFilterConfig::window_size() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.PiffMeanFilterConfig.window_size)
  return _internal_window_size();
}
inline void PiffMeanFilterConfig::unsafe_arena_set_allocated_window_size(::control::PiffMeanFilterWindowSize* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.window_size_);
  }
  _impl_.window_size_ = reinterpret_cast<::control::PiffMeanFilterWindowSize*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control.PiffMeanFilterConfig.window_size)
}
inline ::control::PiffMeanFilterWindowSize* PiffMeanFilterConfig::release_window_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::control::PiffMeanFilterWindowSize* released = _impl_.window_size_;
  _impl_.window_size_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::control::PiffMeanFilterWindowSize* PiffMeanFilterConfig::unsafe_arena_release_window_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control.PiffMeanFilterConfig.window_size)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::control::PiffMeanFilterWindowSize* temp = _impl_.window_size_;
  _impl_.window_size_ = nullptr;
  return temp;
}
inline ::control::PiffMeanFilterWindowSize* PiffMeanFilterConfig::_internal_mutable_window_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.window_size_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::control::PiffMeanFilterWindowSize>(GetArena());
    _impl_.window_size_ = reinterpret_cast<::control::PiffMeanFilterWindowSize*>(p);
  }
  return _impl_.window_size_;
}
inline ::control::PiffMeanFilterWindowSize* PiffMeanFilterConfig::mutable_window_size() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::control::PiffMeanFilterWindowSize* _msg = _internal_mutable_window_size();
  // @@protoc_insertion_point(field_mutable:control.PiffMeanFilterConfig.window_size)
  return _msg;
}
inline void PiffMeanFilterConfig::set_allocated_window_size(::control::PiffMeanFilterWindowSize* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.window_size_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.window_size_ = reinterpret_cast<::control::PiffMeanFilterWindowSize*>(value);
  // @@protoc_insertion_point(field_set_allocated:control.PiffMeanFilterConfig.window_size)
}

// -------------------------------------------------------------------

// PiffControllerContentRateConfig

// required float curvature = 1;
inline bool PiffControllerContentRateConfig::has_curvature() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PiffControllerContentRateConfig::clear_curvature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.curvature_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float PiffControllerContentRateConfig::curvature() const {
  // @@protoc_insertion_point(field_get:control.PiffControllerContentRateConfig.curvature)
  return _internal_curvature();
}
inline void PiffControllerContentRateConfig::set_curvature(float value) {
  _internal_set_curvature(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:control.PiffControllerContentRateConfig.curvature)
}
inline float PiffControllerContentRateConfig::_internal_curvature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.curvature_;
}
inline void PiffControllerContentRateConfig::_internal_set_curvature(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.curvature_ = value;
}

// required float speed_kph = 2;
inline bool PiffControllerContentRateConfig::has_speed_kph() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void PiffControllerContentRateConfig::clear_speed_kph() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_kph_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float PiffControllerContentRateConfig::speed_kph() const {
  // @@protoc_insertion_point(field_get:control.PiffControllerContentRateConfig.speed_kph)
  return _internal_speed_kph();
}
inline void PiffControllerContentRateConfig::set_speed_kph(float value) {
  _internal_set_speed_kph(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:control.PiffControllerContentRateConfig.speed_kph)
}
inline float PiffControllerContentRateConfig::_internal_speed_kph() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.speed_kph_;
}
inline void PiffControllerContentRateConfig::_internal_set_speed_kph(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_kph_ = value;
}

// required float ff_rate = 3;
inline bool PiffControllerContentRateConfig::has_ff_rate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void PiffControllerContentRateConfig::clear_ff_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ff_rate_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float PiffControllerContentRateConfig::ff_rate() const {
  // @@protoc_insertion_point(field_get:control.PiffControllerContentRateConfig.ff_rate)
  return _internal_ff_rate();
}
inline void PiffControllerContentRateConfig::set_ff_rate(float value) {
  _internal_set_ff_rate(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:control.PiffControllerContentRateConfig.ff_rate)
}
inline float PiffControllerContentRateConfig::_internal_ff_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ff_rate_;
}
inline void PiffControllerContentRateConfig::_internal_set_ff_rate(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ff_rate_ = value;
}

// required float fb_rate = 4;
inline bool PiffControllerContentRateConfig::has_fb_rate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void PiffControllerContentRateConfig::clear_fb_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fb_rate_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float PiffControllerContentRateConfig::fb_rate() const {
  // @@protoc_insertion_point(field_get:control.PiffControllerContentRateConfig.fb_rate)
  return _internal_fb_rate();
}
inline void PiffControllerContentRateConfig::set_fb_rate(float value) {
  _internal_set_fb_rate(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:control.PiffControllerContentRateConfig.fb_rate)
}
inline float PiffControllerContentRateConfig::_internal_fb_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fb_rate_;
}
inline void PiffControllerContentRateConfig::_internal_set_fb_rate(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fb_rate_ = value;
}

// -------------------------------------------------------------------

// PiffLinearModeIntegratorConfig

// required int32 ki_mode = 1;
inline bool PiffLinearModeIntegratorConfig::has_ki_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PiffLinearModeIntegratorConfig::clear_ki_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ki_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t PiffLinearModeIntegratorConfig::ki_mode() const {
  // @@protoc_insertion_point(field_get:control.PiffLinearModeIntegratorConfig.ki_mode)
  return _internal_ki_mode();
}
inline void PiffLinearModeIntegratorConfig::set_ki_mode(::int32_t value) {
  _internal_set_ki_mode(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:control.PiffLinearModeIntegratorConfig.ki_mode)
}
inline ::int32_t PiffLinearModeIntegratorConfig::_internal_ki_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ki_mode_;
}
inline void PiffLinearModeIntegratorConfig::_internal_set_ki_mode(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ki_mode_ = value;
}

// repeated float ki = 2;
inline int PiffLinearModeIntegratorConfig::_internal_ki_size() const {
  return _internal_ki().size();
}
inline int PiffLinearModeIntegratorConfig::ki_size() const {
  return _internal_ki_size();
}
inline void PiffLinearModeIntegratorConfig::clear_ki() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ki_.Clear();
}
inline float PiffLinearModeIntegratorConfig::ki(int index) const {
  // @@protoc_insertion_point(field_get:control.PiffLinearModeIntegratorConfig.ki)
  return _internal_ki().Get(index);
}
inline void PiffLinearModeIntegratorConfig::set_ki(int index, float value) {
  _internal_mutable_ki()->Set(index, value);
  // @@protoc_insertion_point(field_set:control.PiffLinearModeIntegratorConfig.ki)
}
inline void PiffLinearModeIntegratorConfig::add_ki(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_ki()->Add(value);
  // @@protoc_insertion_point(field_add:control.PiffLinearModeIntegratorConfig.ki)
}
inline const ::google::protobuf::RepeatedField<float>& PiffLinearModeIntegratorConfig::ki() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:control.PiffLinearModeIntegratorConfig.ki)
  return _internal_ki();
}
inline ::google::protobuf::RepeatedField<float>* PiffLinearModeIntegratorConfig::mutable_ki()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:control.PiffLinearModeIntegratorConfig.ki)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ki();
}
inline const ::google::protobuf::RepeatedField<float>&
PiffLinearModeIntegratorConfig::_internal_ki() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ki_;
}
inline ::google::protobuf::RepeatedField<float>* PiffLinearModeIntegratorConfig::_internal_mutable_ki() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ki_;
}

// -------------------------------------------------------------------

// PiffPercentageModeIntegratorConfig

// required float track_percentage = 1;
inline bool PiffPercentageModeIntegratorConfig::has_track_percentage() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PiffPercentageModeIntegratorConfig::clear_track_percentage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.track_percentage_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float PiffPercentageModeIntegratorConfig::track_percentage() const {
  // @@protoc_insertion_point(field_get:control.PiffPercentageModeIntegratorConfig.track_percentage)
  return _internal_track_percentage();
}
inline void PiffPercentageModeIntegratorConfig::set_track_percentage(float value) {
  _internal_set_track_percentage(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:control.PiffPercentageModeIntegratorConfig.track_percentage)
}
inline float PiffPercentageModeIntegratorConfig::_internal_track_percentage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.track_percentage_;
}
inline void PiffPercentageModeIntegratorConfig::_internal_set_track_percentage(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.track_percentage_ = value;
}

// required bool enable_lateral_err_contribution = 2;
inline bool PiffPercentageModeIntegratorConfig::has_enable_lateral_err_contribution() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void PiffPercentageModeIntegratorConfig::clear_enable_lateral_err_contribution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_lateral_err_contribution_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool PiffPercentageModeIntegratorConfig::enable_lateral_err_contribution() const {
  // @@protoc_insertion_point(field_get:control.PiffPercentageModeIntegratorConfig.enable_lateral_err_contribution)
  return _internal_enable_lateral_err_contribution();
}
inline void PiffPercentageModeIntegratorConfig::set_enable_lateral_err_contribution(bool value) {
  _internal_set_enable_lateral_err_contribution(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:control.PiffPercentageModeIntegratorConfig.enable_lateral_err_contribution)
}
inline bool PiffPercentageModeIntegratorConfig::_internal_enable_lateral_err_contribution() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_lateral_err_contribution_;
}
inline void PiffPercentageModeIntegratorConfig::_internal_set_enable_lateral_err_contribution(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_lateral_err_contribution_ = value;
}

// required bool enable_lateral_err_rate_contribution = 3;
inline bool PiffPercentageModeIntegratorConfig::has_enable_lateral_err_rate_contribution() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void PiffPercentageModeIntegratorConfig::clear_enable_lateral_err_rate_contribution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_lateral_err_rate_contribution_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool PiffPercentageModeIntegratorConfig::enable_lateral_err_rate_contribution() const {
  // @@protoc_insertion_point(field_get:control.PiffPercentageModeIntegratorConfig.enable_lateral_err_rate_contribution)
  return _internal_enable_lateral_err_rate_contribution();
}
inline void PiffPercentageModeIntegratorConfig::set_enable_lateral_err_rate_contribution(bool value) {
  _internal_set_enable_lateral_err_rate_contribution(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:control.PiffPercentageModeIntegratorConfig.enable_lateral_err_rate_contribution)
}
inline bool PiffPercentageModeIntegratorConfig::_internal_enable_lateral_err_rate_contribution() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_lateral_err_rate_contribution_;
}
inline void PiffPercentageModeIntegratorConfig::_internal_set_enable_lateral_err_rate_contribution(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_lateral_err_rate_contribution_ = value;
}

// required bool enable_heading_err_contribution = 4;
inline bool PiffPercentageModeIntegratorConfig::has_enable_heading_err_contribution() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void PiffPercentageModeIntegratorConfig::clear_enable_heading_err_contribution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_heading_err_contribution_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool PiffPercentageModeIntegratorConfig::enable_heading_err_contribution() const {
  // @@protoc_insertion_point(field_get:control.PiffPercentageModeIntegratorConfig.enable_heading_err_contribution)
  return _internal_enable_heading_err_contribution();
}
inline void PiffPercentageModeIntegratorConfig::set_enable_heading_err_contribution(bool value) {
  _internal_set_enable_heading_err_contribution(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:control.PiffPercentageModeIntegratorConfig.enable_heading_err_contribution)
}
inline bool PiffPercentageModeIntegratorConfig::_internal_enable_heading_err_contribution() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_heading_err_contribution_;
}
inline void PiffPercentageModeIntegratorConfig::_internal_set_enable_heading_err_contribution(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_heading_err_contribution_ = value;
}

// required bool enable_heading_err_rate_contribution = 5;
inline bool PiffPercentageModeIntegratorConfig::has_enable_heading_err_rate_contribution() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void PiffPercentageModeIntegratorConfig::clear_enable_heading_err_rate_contribution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_heading_err_rate_contribution_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool PiffPercentageModeIntegratorConfig::enable_heading_err_rate_contribution() const {
  // @@protoc_insertion_point(field_get:control.PiffPercentageModeIntegratorConfig.enable_heading_err_rate_contribution)
  return _internal_enable_heading_err_rate_contribution();
}
inline void PiffPercentageModeIntegratorConfig::set_enable_heading_err_rate_contribution(bool value) {
  _internal_set_enable_heading_err_rate_contribution(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:control.PiffPercentageModeIntegratorConfig.enable_heading_err_rate_contribution)
}
inline bool PiffPercentageModeIntegratorConfig::_internal_enable_heading_err_rate_contribution() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_heading_err_rate_contribution_;
}
inline void PiffPercentageModeIntegratorConfig::_internal_set_enable_heading_err_rate_contribution(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_heading_err_rate_contribution_ = value;
}

// -------------------------------------------------------------------

// PiffProtectIntegratorConfig

// required bool flag_protection = 1;
inline bool PiffProtectIntegratorConfig::has_flag_protection() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PiffProtectIntegratorConfig::clear_flag_protection() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flag_protection_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool PiffProtectIntegratorConfig::flag_protection() const {
  // @@protoc_insertion_point(field_get:control.PiffProtectIntegratorConfig.flag_protection)
  return _internal_flag_protection();
}
inline void PiffProtectIntegratorConfig::set_flag_protection(bool value) {
  _internal_set_flag_protection(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:control.PiffProtectIntegratorConfig.flag_protection)
}
inline bool PiffProtectIntegratorConfig::_internal_flag_protection() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.flag_protection_;
}
inline void PiffProtectIntegratorConfig::_internal_set_flag_protection(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flag_protection_ = value;
}

// required int32 frames_protection = 2;
inline bool PiffProtectIntegratorConfig::has_frames_protection() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void PiffProtectIntegratorConfig::clear_frames_protection() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frames_protection_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t PiffProtectIntegratorConfig::frames_protection() const {
  // @@protoc_insertion_point(field_get:control.PiffProtectIntegratorConfig.frames_protection)
  return _internal_frames_protection();
}
inline void PiffProtectIntegratorConfig::set_frames_protection(::int32_t value) {
  _internal_set_frames_protection(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:control.PiffProtectIntegratorConfig.frames_protection)
}
inline ::int32_t PiffProtectIntegratorConfig::_internal_frames_protection() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frames_protection_;
}
inline void PiffProtectIntegratorConfig::_internal_set_frames_protection(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frames_protection_ = value;
}

// -------------------------------------------------------------------

// PiffIntegratorConfig

// required bool enable_integrator = 1;
inline bool PiffIntegratorConfig::has_enable_integrator() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void PiffIntegratorConfig::clear_enable_integrator() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_integrator_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool PiffIntegratorConfig::enable_integrator() const {
  // @@protoc_insertion_point(field_get:control.PiffIntegratorConfig.enable_integrator)
  return _internal_enable_integrator();
}
inline void PiffIntegratorConfig::set_enable_integrator(bool value) {
  _internal_set_enable_integrator(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:control.PiffIntegratorConfig.enable_integrator)
}
inline bool PiffIntegratorConfig::_internal_enable_integrator() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_integrator_;
}
inline void PiffIntegratorConfig::_internal_set_enable_integrator(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_integrator_ = value;
}

// required float steering_saturation_level_deg = 2;
inline bool PiffIntegratorConfig::has_steering_saturation_level_deg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void PiffIntegratorConfig::clear_steering_saturation_level_deg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steering_saturation_level_deg_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float PiffIntegratorConfig::steering_saturation_level_deg() const {
  // @@protoc_insertion_point(field_get:control.PiffIntegratorConfig.steering_saturation_level_deg)
  return _internal_steering_saturation_level_deg();
}
inline void PiffIntegratorConfig::set_steering_saturation_level_deg(float value) {
  _internal_set_steering_saturation_level_deg(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:control.PiffIntegratorConfig.steering_saturation_level_deg)
}
inline float PiffIntegratorConfig::_internal_steering_saturation_level_deg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.steering_saturation_level_deg_;
}
inline void PiffIntegratorConfig::_internal_set_steering_saturation_level_deg(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steering_saturation_level_deg_ = value;
}

// required int32 mode_integrator = 3;
inline bool PiffIntegratorConfig::has_mode_integrator() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void PiffIntegratorConfig::clear_mode_integrator() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_integrator_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int32_t PiffIntegratorConfig::mode_integrator() const {
  // @@protoc_insertion_point(field_get:control.PiffIntegratorConfig.mode_integrator)
  return _internal_mode_integrator();
}
inline void PiffIntegratorConfig::set_mode_integrator(::int32_t value) {
  _internal_set_mode_integrator(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:control.PiffIntegratorConfig.mode_integrator)
}
inline ::int32_t PiffIntegratorConfig::_internal_mode_integrator() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mode_integrator_;
}
inline void PiffIntegratorConfig::_internal_set_mode_integrator(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_integrator_ = value;
}

// required .control.PiffLinearModeIntegratorConfig linear_mode_integrator_conf = 4;
inline bool PiffIntegratorConfig::has_linear_mode_integrator_conf() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.linear_mode_integrator_conf_ != nullptr);
  return value;
}
inline void PiffIntegratorConfig::clear_linear_mode_integrator_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.linear_mode_integrator_conf_ != nullptr) _impl_.linear_mode_integrator_conf_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::control::PiffLinearModeIntegratorConfig& PiffIntegratorConfig::_internal_linear_mode_integrator_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::control::PiffLinearModeIntegratorConfig* p = _impl_.linear_mode_integrator_conf_;
  return p != nullptr ? *p : reinterpret_cast<const ::control::PiffLinearModeIntegratorConfig&>(::control::_PiffLinearModeIntegratorConfig_default_instance_);
}
inline const ::control::PiffLinearModeIntegratorConfig& PiffIntegratorConfig::linear_mode_integrator_conf() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.PiffIntegratorConfig.linear_mode_integrator_conf)
  return _internal_linear_mode_integrator_conf();
}
inline void PiffIntegratorConfig::unsafe_arena_set_allocated_linear_mode_integrator_conf(::control::PiffLinearModeIntegratorConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.linear_mode_integrator_conf_);
  }
  _impl_.linear_mode_integrator_conf_ = reinterpret_cast<::control::PiffLinearModeIntegratorConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control.PiffIntegratorConfig.linear_mode_integrator_conf)
}
inline ::control::PiffLinearModeIntegratorConfig* PiffIntegratorConfig::release_linear_mode_integrator_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::control::PiffLinearModeIntegratorConfig* released = _impl_.linear_mode_integrator_conf_;
  _impl_.linear_mode_integrator_conf_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::control::PiffLinearModeIntegratorConfig* PiffIntegratorConfig::unsafe_arena_release_linear_mode_integrator_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control.PiffIntegratorConfig.linear_mode_integrator_conf)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::control::PiffLinearModeIntegratorConfig* temp = _impl_.linear_mode_integrator_conf_;
  _impl_.linear_mode_integrator_conf_ = nullptr;
  return temp;
}
inline ::control::PiffLinearModeIntegratorConfig* PiffIntegratorConfig::_internal_mutable_linear_mode_integrator_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.linear_mode_integrator_conf_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::control::PiffLinearModeIntegratorConfig>(GetArena());
    _impl_.linear_mode_integrator_conf_ = reinterpret_cast<::control::PiffLinearModeIntegratorConfig*>(p);
  }
  return _impl_.linear_mode_integrator_conf_;
}
inline ::control::PiffLinearModeIntegratorConfig* PiffIntegratorConfig::mutable_linear_mode_integrator_conf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::control::PiffLinearModeIntegratorConfig* _msg = _internal_mutable_linear_mode_integrator_conf();
  // @@protoc_insertion_point(field_mutable:control.PiffIntegratorConfig.linear_mode_integrator_conf)
  return _msg;
}
inline void PiffIntegratorConfig::set_allocated_linear_mode_integrator_conf(::control::PiffLinearModeIntegratorConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.linear_mode_integrator_conf_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.linear_mode_integrator_conf_ = reinterpret_cast<::control::PiffLinearModeIntegratorConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:control.PiffIntegratorConfig.linear_mode_integrator_conf)
}

// required .control.PiffPercentageModeIntegratorConfig percentage_mode_integrator_conf = 5;
inline bool PiffIntegratorConfig::has_percentage_mode_integrator_conf() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.percentage_mode_integrator_conf_ != nullptr);
  return value;
}
inline void PiffIntegratorConfig::clear_percentage_mode_integrator_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.percentage_mode_integrator_conf_ != nullptr) _impl_.percentage_mode_integrator_conf_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::control::PiffPercentageModeIntegratorConfig& PiffIntegratorConfig::_internal_percentage_mode_integrator_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::control::PiffPercentageModeIntegratorConfig* p = _impl_.percentage_mode_integrator_conf_;
  return p != nullptr ? *p : reinterpret_cast<const ::control::PiffPercentageModeIntegratorConfig&>(::control::_PiffPercentageModeIntegratorConfig_default_instance_);
}
inline const ::control::PiffPercentageModeIntegratorConfig& PiffIntegratorConfig::percentage_mode_integrator_conf() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.PiffIntegratorConfig.percentage_mode_integrator_conf)
  return _internal_percentage_mode_integrator_conf();
}
inline void PiffIntegratorConfig::unsafe_arena_set_allocated_percentage_mode_integrator_conf(::control::PiffPercentageModeIntegratorConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.percentage_mode_integrator_conf_);
  }
  _impl_.percentage_mode_integrator_conf_ = reinterpret_cast<::control::PiffPercentageModeIntegratorConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control.PiffIntegratorConfig.percentage_mode_integrator_conf)
}
inline ::control::PiffPercentageModeIntegratorConfig* PiffIntegratorConfig::release_percentage_mode_integrator_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::control::PiffPercentageModeIntegratorConfig* released = _impl_.percentage_mode_integrator_conf_;
  _impl_.percentage_mode_integrator_conf_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::control::PiffPercentageModeIntegratorConfig* PiffIntegratorConfig::unsafe_arena_release_percentage_mode_integrator_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control.PiffIntegratorConfig.percentage_mode_integrator_conf)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::control::PiffPercentageModeIntegratorConfig* temp = _impl_.percentage_mode_integrator_conf_;
  _impl_.percentage_mode_integrator_conf_ = nullptr;
  return temp;
}
inline ::control::PiffPercentageModeIntegratorConfig* PiffIntegratorConfig::_internal_mutable_percentage_mode_integrator_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.percentage_mode_integrator_conf_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::control::PiffPercentageModeIntegratorConfig>(GetArena());
    _impl_.percentage_mode_integrator_conf_ = reinterpret_cast<::control::PiffPercentageModeIntegratorConfig*>(p);
  }
  return _impl_.percentage_mode_integrator_conf_;
}
inline ::control::PiffPercentageModeIntegratorConfig* PiffIntegratorConfig::mutable_percentage_mode_integrator_conf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::control::PiffPercentageModeIntegratorConfig* _msg = _internal_mutable_percentage_mode_integrator_conf();
  // @@protoc_insertion_point(field_mutable:control.PiffIntegratorConfig.percentage_mode_integrator_conf)
  return _msg;
}
inline void PiffIntegratorConfig::set_allocated_percentage_mode_integrator_conf(::control::PiffPercentageModeIntegratorConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.percentage_mode_integrator_conf_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.percentage_mode_integrator_conf_ = reinterpret_cast<::control::PiffPercentageModeIntegratorConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:control.PiffIntegratorConfig.percentage_mode_integrator_conf)
}

// required .control.PiffProtectIntegratorConfig protect_integrator_conf = 6;
inline bool PiffIntegratorConfig::has_protect_integrator_conf() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.protect_integrator_conf_ != nullptr);
  return value;
}
inline void PiffIntegratorConfig::clear_protect_integrator_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.protect_integrator_conf_ != nullptr) _impl_.protect_integrator_conf_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::control::PiffProtectIntegratorConfig& PiffIntegratorConfig::_internal_protect_integrator_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::control::PiffProtectIntegratorConfig* p = _impl_.protect_integrator_conf_;
  return p != nullptr ? *p : reinterpret_cast<const ::control::PiffProtectIntegratorConfig&>(::control::_PiffProtectIntegratorConfig_default_instance_);
}
inline const ::control::PiffProtectIntegratorConfig& PiffIntegratorConfig::protect_integrator_conf() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.PiffIntegratorConfig.protect_integrator_conf)
  return _internal_protect_integrator_conf();
}
inline void PiffIntegratorConfig::unsafe_arena_set_allocated_protect_integrator_conf(::control::PiffProtectIntegratorConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.protect_integrator_conf_);
  }
  _impl_.protect_integrator_conf_ = reinterpret_cast<::control::PiffProtectIntegratorConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control.PiffIntegratorConfig.protect_integrator_conf)
}
inline ::control::PiffProtectIntegratorConfig* PiffIntegratorConfig::release_protect_integrator_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::control::PiffProtectIntegratorConfig* released = _impl_.protect_integrator_conf_;
  _impl_.protect_integrator_conf_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::control::PiffProtectIntegratorConfig* PiffIntegratorConfig::unsafe_arena_release_protect_integrator_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control.PiffIntegratorConfig.protect_integrator_conf)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::control::PiffProtectIntegratorConfig* temp = _impl_.protect_integrator_conf_;
  _impl_.protect_integrator_conf_ = nullptr;
  return temp;
}
inline ::control::PiffProtectIntegratorConfig* PiffIntegratorConfig::_internal_mutable_protect_integrator_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.protect_integrator_conf_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::control::PiffProtectIntegratorConfig>(GetArena());
    _impl_.protect_integrator_conf_ = reinterpret_cast<::control::PiffProtectIntegratorConfig*>(p);
  }
  return _impl_.protect_integrator_conf_;
}
inline ::control::PiffProtectIntegratorConfig* PiffIntegratorConfig::mutable_protect_integrator_conf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::control::PiffProtectIntegratorConfig* _msg = _internal_mutable_protect_integrator_conf();
  // @@protoc_insertion_point(field_mutable:control.PiffIntegratorConfig.protect_integrator_conf)
  return _msg;
}
inline void PiffIntegratorConfig::set_allocated_protect_integrator_conf(::control::PiffProtectIntegratorConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.protect_integrator_conf_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.protect_integrator_conf_ = reinterpret_cast<::control::PiffProtectIntegratorConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:control.PiffIntegratorConfig.protect_integrator_conf)
}

// -------------------------------------------------------------------

// PiffCCSteeringFakeDeadZoneConfig

// required bool enable_fake_dead_zone = 1;
inline bool PiffCCSteeringFakeDeadZoneConfig::has_enable_fake_dead_zone() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void PiffCCSteeringFakeDeadZoneConfig::clear_enable_fake_dead_zone() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_fake_dead_zone_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool PiffCCSteeringFakeDeadZoneConfig::enable_fake_dead_zone() const {
  // @@protoc_insertion_point(field_get:control.PiffCCSteeringFakeDeadZoneConfig.enable_fake_dead_zone)
  return _internal_enable_fake_dead_zone();
}
inline void PiffCCSteeringFakeDeadZoneConfig::set_enable_fake_dead_zone(bool value) {
  _internal_set_enable_fake_dead_zone(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:control.PiffCCSteeringFakeDeadZoneConfig.enable_fake_dead_zone)
}
inline bool PiffCCSteeringFakeDeadZoneConfig::_internal_enable_fake_dead_zone() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_fake_dead_zone_;
}
inline void PiffCCSteeringFakeDeadZoneConfig::_internal_set_enable_fake_dead_zone(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_fake_dead_zone_ = value;
}

// required float lateral_error_m_fake_zone = 2;
inline bool PiffCCSteeringFakeDeadZoneConfig::has_lateral_error_m_fake_zone() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PiffCCSteeringFakeDeadZoneConfig::clear_lateral_error_m_fake_zone() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lateral_error_m_fake_zone_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float PiffCCSteeringFakeDeadZoneConfig::lateral_error_m_fake_zone() const {
  // @@protoc_insertion_point(field_get:control.PiffCCSteeringFakeDeadZoneConfig.lateral_error_m_fake_zone)
  return _internal_lateral_error_m_fake_zone();
}
inline void PiffCCSteeringFakeDeadZoneConfig::set_lateral_error_m_fake_zone(float value) {
  _internal_set_lateral_error_m_fake_zone(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:control.PiffCCSteeringFakeDeadZoneConfig.lateral_error_m_fake_zone)
}
inline float PiffCCSteeringFakeDeadZoneConfig::_internal_lateral_error_m_fake_zone() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lateral_error_m_fake_zone_;
}
inline void PiffCCSteeringFakeDeadZoneConfig::_internal_set_lateral_error_m_fake_zone(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lateral_error_m_fake_zone_ = value;
}

// required float heading_error_rad_fake_zone = 3;
inline bool PiffCCSteeringFakeDeadZoneConfig::has_heading_error_rad_fake_zone() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void PiffCCSteeringFakeDeadZoneConfig::clear_heading_error_rad_fake_zone() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.heading_error_rad_fake_zone_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float PiffCCSteeringFakeDeadZoneConfig::heading_error_rad_fake_zone() const {
  // @@protoc_insertion_point(field_get:control.PiffCCSteeringFakeDeadZoneConfig.heading_error_rad_fake_zone)
  return _internal_heading_error_rad_fake_zone();
}
inline void PiffCCSteeringFakeDeadZoneConfig::set_heading_error_rad_fake_zone(float value) {
  _internal_set_heading_error_rad_fake_zone(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:control.PiffCCSteeringFakeDeadZoneConfig.heading_error_rad_fake_zone)
}
inline float PiffCCSteeringFakeDeadZoneConfig::_internal_heading_error_rad_fake_zone() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.heading_error_rad_fake_zone_;
}
inline void PiffCCSteeringFakeDeadZoneConfig::_internal_set_heading_error_rad_fake_zone(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.heading_error_rad_fake_zone_ = value;
}

// required bool enable_fake_transition_zone = 4;
inline bool PiffCCSteeringFakeDeadZoneConfig::has_enable_fake_transition_zone() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void PiffCCSteeringFakeDeadZoneConfig::clear_enable_fake_transition_zone() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_fake_transition_zone_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool PiffCCSteeringFakeDeadZoneConfig::enable_fake_transition_zone() const {
  // @@protoc_insertion_point(field_get:control.PiffCCSteeringFakeDeadZoneConfig.enable_fake_transition_zone)
  return _internal_enable_fake_transition_zone();
}
inline void PiffCCSteeringFakeDeadZoneConfig::set_enable_fake_transition_zone(bool value) {
  _internal_set_enable_fake_transition_zone(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:control.PiffCCSteeringFakeDeadZoneConfig.enable_fake_transition_zone)
}
inline bool PiffCCSteeringFakeDeadZoneConfig::_internal_enable_fake_transition_zone() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_fake_transition_zone_;
}
inline void PiffCCSteeringFakeDeadZoneConfig::_internal_set_enable_fake_transition_zone(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_fake_transition_zone_ = value;
}

// required float lateral_error_m_transition_zone = 5;
inline bool PiffCCSteeringFakeDeadZoneConfig::has_lateral_error_m_transition_zone() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void PiffCCSteeringFakeDeadZoneConfig::clear_lateral_error_m_transition_zone() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lateral_error_m_transition_zone_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float PiffCCSteeringFakeDeadZoneConfig::lateral_error_m_transition_zone() const {
  // @@protoc_insertion_point(field_get:control.PiffCCSteeringFakeDeadZoneConfig.lateral_error_m_transition_zone)
  return _internal_lateral_error_m_transition_zone();
}
inline void PiffCCSteeringFakeDeadZoneConfig::set_lateral_error_m_transition_zone(float value) {
  _internal_set_lateral_error_m_transition_zone(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:control.PiffCCSteeringFakeDeadZoneConfig.lateral_error_m_transition_zone)
}
inline float PiffCCSteeringFakeDeadZoneConfig::_internal_lateral_error_m_transition_zone() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lateral_error_m_transition_zone_;
}
inline void PiffCCSteeringFakeDeadZoneConfig::_internal_set_lateral_error_m_transition_zone(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lateral_error_m_transition_zone_ = value;
}

// required float heading_error_rad_transition_zone = 6;
inline bool PiffCCSteeringFakeDeadZoneConfig::has_heading_error_rad_transition_zone() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void PiffCCSteeringFakeDeadZoneConfig::clear_heading_error_rad_transition_zone() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.heading_error_rad_transition_zone_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline float PiffCCSteeringFakeDeadZoneConfig::heading_error_rad_transition_zone() const {
  // @@protoc_insertion_point(field_get:control.PiffCCSteeringFakeDeadZoneConfig.heading_error_rad_transition_zone)
  return _internal_heading_error_rad_transition_zone();
}
inline void PiffCCSteeringFakeDeadZoneConfig::set_heading_error_rad_transition_zone(float value) {
  _internal_set_heading_error_rad_transition_zone(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:control.PiffCCSteeringFakeDeadZoneConfig.heading_error_rad_transition_zone)
}
inline float PiffCCSteeringFakeDeadZoneConfig::_internal_heading_error_rad_transition_zone() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.heading_error_rad_transition_zone_;
}
inline void PiffCCSteeringFakeDeadZoneConfig::_internal_set_heading_error_rad_transition_zone(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.heading_error_rad_transition_zone_ = value;
}

// required int32 mode = 7;
inline bool PiffCCSteeringFakeDeadZoneConfig::has_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void PiffCCSteeringFakeDeadZoneConfig::clear_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int32_t PiffCCSteeringFakeDeadZoneConfig::mode() const {
  // @@protoc_insertion_point(field_get:control.PiffCCSteeringFakeDeadZoneConfig.mode)
  return _internal_mode();
}
inline void PiffCCSteeringFakeDeadZoneConfig::set_mode(::int32_t value) {
  _internal_set_mode(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:control.PiffCCSteeringFakeDeadZoneConfig.mode)
}
inline ::int32_t PiffCCSteeringFakeDeadZoneConfig::_internal_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mode_;
}
inline void PiffCCSteeringFakeDeadZoneConfig::_internal_set_mode(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = value;
}

// -------------------------------------------------------------------

// PiffControllerContentConfig

// required int32 preview_mode = 1;
inline bool PiffControllerContentConfig::has_preview_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void PiffControllerContentConfig::clear_preview_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.preview_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t PiffControllerContentConfig::preview_mode() const {
  // @@protoc_insertion_point(field_get:control.PiffControllerContentConfig.preview_mode)
  return _internal_preview_mode();
}
inline void PiffControllerContentConfig::set_preview_mode(::int32_t value) {
  _internal_set_preview_mode(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:control.PiffControllerContentConfig.preview_mode)
}
inline ::int32_t PiffControllerContentConfig::_internal_preview_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.preview_mode_;
}
inline void PiffControllerContentConfig::_internal_set_preview_mode(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.preview_mode_ = value;
}

// required float preview_time_ms_c01 = 2;
inline bool PiffControllerContentConfig::has_preview_time_ms_c01() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void PiffControllerContentConfig::clear_preview_time_ms_c01() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.preview_time_ms_c01_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float PiffControllerContentConfig::preview_time_ms_c01() const {
  // @@protoc_insertion_point(field_get:control.PiffControllerContentConfig.preview_time_ms_c01)
  return _internal_preview_time_ms_c01();
}
inline void PiffControllerContentConfig::set_preview_time_ms_c01(float value) {
  _internal_set_preview_time_ms_c01(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:control.PiffControllerContentConfig.preview_time_ms_c01)
}
inline float PiffControllerContentConfig::_internal_preview_time_ms_c01() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.preview_time_ms_c01_;
}
inline void PiffControllerContentConfig::_internal_set_preview_time_ms_c01(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.preview_time_ms_c01_ = value;
}

// required float preview_time_ms_c2 = 3;
inline bool PiffControllerContentConfig::has_preview_time_ms_c2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void PiffControllerContentConfig::clear_preview_time_ms_c2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.preview_time_ms_c2_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float PiffControllerContentConfig::preview_time_ms_c2() const {
  // @@protoc_insertion_point(field_get:control.PiffControllerContentConfig.preview_time_ms_c2)
  return _internal_preview_time_ms_c2();
}
inline void PiffControllerContentConfig::set_preview_time_ms_c2(float value) {
  _internal_set_preview_time_ms_c2(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:control.PiffControllerContentConfig.preview_time_ms_c2)
}
inline float PiffControllerContentConfig::_internal_preview_time_ms_c2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.preview_time_ms_c2_;
}
inline void PiffControllerContentConfig::_internal_set_preview_time_ms_c2(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.preview_time_ms_c2_ = value;
}

// required float curvature_min_start_ff = 4;
inline bool PiffControllerContentConfig::has_curvature_min_start_ff() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void PiffControllerContentConfig::clear_curvature_min_start_ff() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.curvature_min_start_ff_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline float PiffControllerContentConfig::curvature_min_start_ff() const {
  // @@protoc_insertion_point(field_get:control.PiffControllerContentConfig.curvature_min_start_ff)
  return _internal_curvature_min_start_ff();
}
inline void PiffControllerContentConfig::set_curvature_min_start_ff(float value) {
  _internal_set_curvature_min_start_ff(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:control.PiffControllerContentConfig.curvature_min_start_ff)
}
inline float PiffControllerContentConfig::_internal_curvature_min_start_ff() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.curvature_min_start_ff_;
}
inline void PiffControllerContentConfig::_internal_set_curvature_min_start_ff(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.curvature_min_start_ff_ = value;
}

// repeated .control.PiffControllerContentRateConfig rate_conf = 5;
inline int PiffControllerContentConfig::_internal_rate_conf_size() const {
  return _internal_rate_conf().size();
}
inline int PiffControllerContentConfig::rate_conf_size() const {
  return _internal_rate_conf_size();
}
inline void PiffControllerContentConfig::clear_rate_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rate_conf_.Clear();
}
inline ::control::PiffControllerContentRateConfig* PiffControllerContentConfig::mutable_rate_conf(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:control.PiffControllerContentConfig.rate_conf)
  return _internal_mutable_rate_conf()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::control::PiffControllerContentRateConfig>* PiffControllerContentConfig::mutable_rate_conf()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:control.PiffControllerContentConfig.rate_conf)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_rate_conf();
}
inline const ::control::PiffControllerContentRateConfig& PiffControllerContentConfig::rate_conf(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.PiffControllerContentConfig.rate_conf)
  return _internal_rate_conf().Get(index);
}
inline ::control::PiffControllerContentRateConfig* PiffControllerContentConfig::add_rate_conf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::control::PiffControllerContentRateConfig* _add = _internal_mutable_rate_conf()->Add();
  // @@protoc_insertion_point(field_add:control.PiffControllerContentConfig.rate_conf)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::control::PiffControllerContentRateConfig>& PiffControllerContentConfig::rate_conf() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:control.PiffControllerContentConfig.rate_conf)
  return _internal_rate_conf();
}
inline const ::google::protobuf::RepeatedPtrField<::control::PiffControllerContentRateConfig>&
PiffControllerContentConfig::_internal_rate_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rate_conf_;
}
inline ::google::protobuf::RepeatedPtrField<::control::PiffControllerContentRateConfig>*
PiffControllerContentConfig::_internal_mutable_rate_conf() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.rate_conf_;
}

// required .control.PiffIntegratorConfig integrator_conf = 6;
inline bool PiffControllerContentConfig::has_integrator_conf() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.integrator_conf_ != nullptr);
  return value;
}
inline void PiffControllerContentConfig::clear_integrator_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.integrator_conf_ != nullptr) _impl_.integrator_conf_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::control::PiffIntegratorConfig& PiffControllerContentConfig::_internal_integrator_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::control::PiffIntegratorConfig* p = _impl_.integrator_conf_;
  return p != nullptr ? *p : reinterpret_cast<const ::control::PiffIntegratorConfig&>(::control::_PiffIntegratorConfig_default_instance_);
}
inline const ::control::PiffIntegratorConfig& PiffControllerContentConfig::integrator_conf() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.PiffControllerContentConfig.integrator_conf)
  return _internal_integrator_conf();
}
inline void PiffControllerContentConfig::unsafe_arena_set_allocated_integrator_conf(::control::PiffIntegratorConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.integrator_conf_);
  }
  _impl_.integrator_conf_ = reinterpret_cast<::control::PiffIntegratorConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control.PiffControllerContentConfig.integrator_conf)
}
inline ::control::PiffIntegratorConfig* PiffControllerContentConfig::release_integrator_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::control::PiffIntegratorConfig* released = _impl_.integrator_conf_;
  _impl_.integrator_conf_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::control::PiffIntegratorConfig* PiffControllerContentConfig::unsafe_arena_release_integrator_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control.PiffControllerContentConfig.integrator_conf)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::control::PiffIntegratorConfig* temp = _impl_.integrator_conf_;
  _impl_.integrator_conf_ = nullptr;
  return temp;
}
inline ::control::PiffIntegratorConfig* PiffControllerContentConfig::_internal_mutable_integrator_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.integrator_conf_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::control::PiffIntegratorConfig>(GetArena());
    _impl_.integrator_conf_ = reinterpret_cast<::control::PiffIntegratorConfig*>(p);
  }
  return _impl_.integrator_conf_;
}
inline ::control::PiffIntegratorConfig* PiffControllerContentConfig::mutable_integrator_conf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::control::PiffIntegratorConfig* _msg = _internal_mutable_integrator_conf();
  // @@protoc_insertion_point(field_mutable:control.PiffControllerContentConfig.integrator_conf)
  return _msg;
}
inline void PiffControllerContentConfig::set_allocated_integrator_conf(::control::PiffIntegratorConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.integrator_conf_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.integrator_conf_ = reinterpret_cast<::control::PiffIntegratorConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:control.PiffControllerContentConfig.integrator_conf)
}

// required float steering_bias_deg = 7;
inline bool PiffControllerContentConfig::has_steering_bias_deg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void PiffControllerContentConfig::clear_steering_bias_deg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steering_bias_deg_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline float PiffControllerContentConfig::steering_bias_deg() const {
  // @@protoc_insertion_point(field_get:control.PiffControllerContentConfig.steering_bias_deg)
  return _internal_steering_bias_deg();
}
inline void PiffControllerContentConfig::set_steering_bias_deg(float value) {
  _internal_set_steering_bias_deg(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:control.PiffControllerContentConfig.steering_bias_deg)
}
inline float PiffControllerContentConfig::_internal_steering_bias_deg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.steering_bias_deg_;
}
inline void PiffControllerContentConfig::_internal_set_steering_bias_deg(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steering_bias_deg_ = value;
}

// required .control.PiffCCSteeringFakeDeadZoneConfig steering_fake_dead_zone_conf = 8;
inline bool PiffControllerContentConfig::has_steering_fake_dead_zone_conf() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.steering_fake_dead_zone_conf_ != nullptr);
  return value;
}
inline void PiffControllerContentConfig::clear_steering_fake_dead_zone_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.steering_fake_dead_zone_conf_ != nullptr) _impl_.steering_fake_dead_zone_conf_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::control::PiffCCSteeringFakeDeadZoneConfig& PiffControllerContentConfig::_internal_steering_fake_dead_zone_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::control::PiffCCSteeringFakeDeadZoneConfig* p = _impl_.steering_fake_dead_zone_conf_;
  return p != nullptr ? *p : reinterpret_cast<const ::control::PiffCCSteeringFakeDeadZoneConfig&>(::control::_PiffCCSteeringFakeDeadZoneConfig_default_instance_);
}
inline const ::control::PiffCCSteeringFakeDeadZoneConfig& PiffControllerContentConfig::steering_fake_dead_zone_conf() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.PiffControllerContentConfig.steering_fake_dead_zone_conf)
  return _internal_steering_fake_dead_zone_conf();
}
inline void PiffControllerContentConfig::unsafe_arena_set_allocated_steering_fake_dead_zone_conf(::control::PiffCCSteeringFakeDeadZoneConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.steering_fake_dead_zone_conf_);
  }
  _impl_.steering_fake_dead_zone_conf_ = reinterpret_cast<::control::PiffCCSteeringFakeDeadZoneConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control.PiffControllerContentConfig.steering_fake_dead_zone_conf)
}
inline ::control::PiffCCSteeringFakeDeadZoneConfig* PiffControllerContentConfig::release_steering_fake_dead_zone_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::control::PiffCCSteeringFakeDeadZoneConfig* released = _impl_.steering_fake_dead_zone_conf_;
  _impl_.steering_fake_dead_zone_conf_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::control::PiffCCSteeringFakeDeadZoneConfig* PiffControllerContentConfig::unsafe_arena_release_steering_fake_dead_zone_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control.PiffControllerContentConfig.steering_fake_dead_zone_conf)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::control::PiffCCSteeringFakeDeadZoneConfig* temp = _impl_.steering_fake_dead_zone_conf_;
  _impl_.steering_fake_dead_zone_conf_ = nullptr;
  return temp;
}
inline ::control::PiffCCSteeringFakeDeadZoneConfig* PiffControllerContentConfig::_internal_mutable_steering_fake_dead_zone_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.steering_fake_dead_zone_conf_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::control::PiffCCSteeringFakeDeadZoneConfig>(GetArena());
    _impl_.steering_fake_dead_zone_conf_ = reinterpret_cast<::control::PiffCCSteeringFakeDeadZoneConfig*>(p);
  }
  return _impl_.steering_fake_dead_zone_conf_;
}
inline ::control::PiffCCSteeringFakeDeadZoneConfig* PiffControllerContentConfig::mutable_steering_fake_dead_zone_conf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::control::PiffCCSteeringFakeDeadZoneConfig* _msg = _internal_mutable_steering_fake_dead_zone_conf();
  // @@protoc_insertion_point(field_mutable:control.PiffControllerContentConfig.steering_fake_dead_zone_conf)
  return _msg;
}
inline void PiffControllerContentConfig::set_allocated_steering_fake_dead_zone_conf(::control::PiffCCSteeringFakeDeadZoneConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.steering_fake_dead_zone_conf_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.steering_fake_dead_zone_conf_ = reinterpret_cast<::control::PiffCCSteeringFakeDeadZoneConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:control.PiffControllerContentConfig.steering_fake_dead_zone_conf)
}

// required float curvaturn_transition_ff = 9;
inline bool PiffControllerContentConfig::has_curvaturn_transition_ff() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void PiffControllerContentConfig::clear_curvaturn_transition_ff() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.curvaturn_transition_ff_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline float PiffControllerContentConfig::curvaturn_transition_ff() const {
  // @@protoc_insertion_point(field_get:control.PiffControllerContentConfig.curvaturn_transition_ff)
  return _internal_curvaturn_transition_ff();
}
inline void PiffControllerContentConfig::set_curvaturn_transition_ff(float value) {
  _internal_set_curvaturn_transition_ff(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:control.PiffControllerContentConfig.curvaturn_transition_ff)
}
inline float PiffControllerContentConfig::_internal_curvaturn_transition_ff() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.curvaturn_transition_ff_;
}
inline void PiffControllerContentConfig::_internal_set_curvaturn_transition_ff(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.curvaturn_transition_ff_ = value;
}

// -------------------------------------------------------------------

// PiffTrackingDifferentiatorSwitch

// required bool enable_center_line_c2 = 1;
inline bool PiffTrackingDifferentiatorSwitch::has_enable_center_line_c2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PiffTrackingDifferentiatorSwitch::clear_enable_center_line_c2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_center_line_c2_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool PiffTrackingDifferentiatorSwitch::enable_center_line_c2() const {
  // @@protoc_insertion_point(field_get:control.PiffTrackingDifferentiatorSwitch.enable_center_line_c2)
  return _internal_enable_center_line_c2();
}
inline void PiffTrackingDifferentiatorSwitch::set_enable_center_line_c2(bool value) {
  _internal_set_enable_center_line_c2(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:control.PiffTrackingDifferentiatorSwitch.enable_center_line_c2)
}
inline bool PiffTrackingDifferentiatorSwitch::_internal_enable_center_line_c2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_center_line_c2_;
}
inline void PiffTrackingDifferentiatorSwitch::_internal_set_enable_center_line_c2(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_center_line_c2_ = value;
}

// required bool enable_yaw_rate = 2;
inline bool PiffTrackingDifferentiatorSwitch::has_enable_yaw_rate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void PiffTrackingDifferentiatorSwitch::clear_enable_yaw_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_yaw_rate_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool PiffTrackingDifferentiatorSwitch::enable_yaw_rate() const {
  // @@protoc_insertion_point(field_get:control.PiffTrackingDifferentiatorSwitch.enable_yaw_rate)
  return _internal_enable_yaw_rate();
}
inline void PiffTrackingDifferentiatorSwitch::set_enable_yaw_rate(bool value) {
  _internal_set_enable_yaw_rate(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:control.PiffTrackingDifferentiatorSwitch.enable_yaw_rate)
}
inline bool PiffTrackingDifferentiatorSwitch::_internal_enable_yaw_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_yaw_rate_;
}
inline void PiffTrackingDifferentiatorSwitch::_internal_set_enable_yaw_rate(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_yaw_rate_ = value;
}

// -------------------------------------------------------------------

// PiffTrackingDifferentiatorStateParameters

// required float tracking_rate = 1;
inline bool PiffTrackingDifferentiatorStateParameters::has_tracking_rate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PiffTrackingDifferentiatorStateParameters::clear_tracking_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tracking_rate_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float PiffTrackingDifferentiatorStateParameters::tracking_rate() const {
  // @@protoc_insertion_point(field_get:control.PiffTrackingDifferentiatorStateParameters.tracking_rate)
  return _internal_tracking_rate();
}
inline void PiffTrackingDifferentiatorStateParameters::set_tracking_rate(float value) {
  _internal_set_tracking_rate(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:control.PiffTrackingDifferentiatorStateParameters.tracking_rate)
}
inline float PiffTrackingDifferentiatorStateParameters::_internal_tracking_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tracking_rate_;
}
inline void PiffTrackingDifferentiatorStateParameters::_internal_set_tracking_rate(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tracking_rate_ = value;
}

// required int32 smooth_frame = 2;
inline bool PiffTrackingDifferentiatorStateParameters::has_smooth_frame() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void PiffTrackingDifferentiatorStateParameters::clear_smooth_frame() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.smooth_frame_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t PiffTrackingDifferentiatorStateParameters::smooth_frame() const {
  // @@protoc_insertion_point(field_get:control.PiffTrackingDifferentiatorStateParameters.smooth_frame)
  return _internal_smooth_frame();
}
inline void PiffTrackingDifferentiatorStateParameters::set_smooth_frame(::int32_t value) {
  _internal_set_smooth_frame(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:control.PiffTrackingDifferentiatorStateParameters.smooth_frame)
}
inline ::int32_t PiffTrackingDifferentiatorStateParameters::_internal_smooth_frame() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.smooth_frame_;
}
inline void PiffTrackingDifferentiatorStateParameters::_internal_set_smooth_frame(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.smooth_frame_ = value;
}

// -------------------------------------------------------------------

// PiffTrackingDifferentiatorConfig

// required .control.PiffTrackingDifferentiatorSwitch td_switch = 1;
inline bool PiffTrackingDifferentiatorConfig::has_td_switch() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.td_switch_ != nullptr);
  return value;
}
inline void PiffTrackingDifferentiatorConfig::clear_td_switch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.td_switch_ != nullptr) _impl_.td_switch_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::control::PiffTrackingDifferentiatorSwitch& PiffTrackingDifferentiatorConfig::_internal_td_switch() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::control::PiffTrackingDifferentiatorSwitch* p = _impl_.td_switch_;
  return p != nullptr ? *p : reinterpret_cast<const ::control::PiffTrackingDifferentiatorSwitch&>(::control::_PiffTrackingDifferentiatorSwitch_default_instance_);
}
inline const ::control::PiffTrackingDifferentiatorSwitch& PiffTrackingDifferentiatorConfig::td_switch() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.PiffTrackingDifferentiatorConfig.td_switch)
  return _internal_td_switch();
}
inline void PiffTrackingDifferentiatorConfig::unsafe_arena_set_allocated_td_switch(::control::PiffTrackingDifferentiatorSwitch* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.td_switch_);
  }
  _impl_.td_switch_ = reinterpret_cast<::control::PiffTrackingDifferentiatorSwitch*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control.PiffTrackingDifferentiatorConfig.td_switch)
}
inline ::control::PiffTrackingDifferentiatorSwitch* PiffTrackingDifferentiatorConfig::release_td_switch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::control::PiffTrackingDifferentiatorSwitch* released = _impl_.td_switch_;
  _impl_.td_switch_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::control::PiffTrackingDifferentiatorSwitch* PiffTrackingDifferentiatorConfig::unsafe_arena_release_td_switch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control.PiffTrackingDifferentiatorConfig.td_switch)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::control::PiffTrackingDifferentiatorSwitch* temp = _impl_.td_switch_;
  _impl_.td_switch_ = nullptr;
  return temp;
}
inline ::control::PiffTrackingDifferentiatorSwitch* PiffTrackingDifferentiatorConfig::_internal_mutable_td_switch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.td_switch_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::control::PiffTrackingDifferentiatorSwitch>(GetArena());
    _impl_.td_switch_ = reinterpret_cast<::control::PiffTrackingDifferentiatorSwitch*>(p);
  }
  return _impl_.td_switch_;
}
inline ::control::PiffTrackingDifferentiatorSwitch* PiffTrackingDifferentiatorConfig::mutable_td_switch() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::control::PiffTrackingDifferentiatorSwitch* _msg = _internal_mutable_td_switch();
  // @@protoc_insertion_point(field_mutable:control.PiffTrackingDifferentiatorConfig.td_switch)
  return _msg;
}
inline void PiffTrackingDifferentiatorConfig::set_allocated_td_switch(::control::PiffTrackingDifferentiatorSwitch* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.td_switch_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.td_switch_ = reinterpret_cast<::control::PiffTrackingDifferentiatorSwitch*>(value);
  // @@protoc_insertion_point(field_set_allocated:control.PiffTrackingDifferentiatorConfig.td_switch)
}

// required .control.PiffTrackingDifferentiatorStateParameters center_line_c2_paras = 2;
inline bool PiffTrackingDifferentiatorConfig::has_center_line_c2_paras() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.center_line_c2_paras_ != nullptr);
  return value;
}
inline void PiffTrackingDifferentiatorConfig::clear_center_line_c2_paras() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.center_line_c2_paras_ != nullptr) _impl_.center_line_c2_paras_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::control::PiffTrackingDifferentiatorStateParameters& PiffTrackingDifferentiatorConfig::_internal_center_line_c2_paras() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::control::PiffTrackingDifferentiatorStateParameters* p = _impl_.center_line_c2_paras_;
  return p != nullptr ? *p : reinterpret_cast<const ::control::PiffTrackingDifferentiatorStateParameters&>(::control::_PiffTrackingDifferentiatorStateParameters_default_instance_);
}
inline const ::control::PiffTrackingDifferentiatorStateParameters& PiffTrackingDifferentiatorConfig::center_line_c2_paras() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.PiffTrackingDifferentiatorConfig.center_line_c2_paras)
  return _internal_center_line_c2_paras();
}
inline void PiffTrackingDifferentiatorConfig::unsafe_arena_set_allocated_center_line_c2_paras(::control::PiffTrackingDifferentiatorStateParameters* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.center_line_c2_paras_);
  }
  _impl_.center_line_c2_paras_ = reinterpret_cast<::control::PiffTrackingDifferentiatorStateParameters*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control.PiffTrackingDifferentiatorConfig.center_line_c2_paras)
}
inline ::control::PiffTrackingDifferentiatorStateParameters* PiffTrackingDifferentiatorConfig::release_center_line_c2_paras() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::control::PiffTrackingDifferentiatorStateParameters* released = _impl_.center_line_c2_paras_;
  _impl_.center_line_c2_paras_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::control::PiffTrackingDifferentiatorStateParameters* PiffTrackingDifferentiatorConfig::unsafe_arena_release_center_line_c2_paras() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control.PiffTrackingDifferentiatorConfig.center_line_c2_paras)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::control::PiffTrackingDifferentiatorStateParameters* temp = _impl_.center_line_c2_paras_;
  _impl_.center_line_c2_paras_ = nullptr;
  return temp;
}
inline ::control::PiffTrackingDifferentiatorStateParameters* PiffTrackingDifferentiatorConfig::_internal_mutable_center_line_c2_paras() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.center_line_c2_paras_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::control::PiffTrackingDifferentiatorStateParameters>(GetArena());
    _impl_.center_line_c2_paras_ = reinterpret_cast<::control::PiffTrackingDifferentiatorStateParameters*>(p);
  }
  return _impl_.center_line_c2_paras_;
}
inline ::control::PiffTrackingDifferentiatorStateParameters* PiffTrackingDifferentiatorConfig::mutable_center_line_c2_paras() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::control::PiffTrackingDifferentiatorStateParameters* _msg = _internal_mutable_center_line_c2_paras();
  // @@protoc_insertion_point(field_mutable:control.PiffTrackingDifferentiatorConfig.center_line_c2_paras)
  return _msg;
}
inline void PiffTrackingDifferentiatorConfig::set_allocated_center_line_c2_paras(::control::PiffTrackingDifferentiatorStateParameters* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.center_line_c2_paras_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.center_line_c2_paras_ = reinterpret_cast<::control::PiffTrackingDifferentiatorStateParameters*>(value);
  // @@protoc_insertion_point(field_set_allocated:control.PiffTrackingDifferentiatorConfig.center_line_c2_paras)
}

// required .control.PiffTrackingDifferentiatorStateParameters yaw_rate_paras = 3;
inline bool PiffTrackingDifferentiatorConfig::has_yaw_rate_paras() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.yaw_rate_paras_ != nullptr);
  return value;
}
inline void PiffTrackingDifferentiatorConfig::clear_yaw_rate_paras() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.yaw_rate_paras_ != nullptr) _impl_.yaw_rate_paras_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::control::PiffTrackingDifferentiatorStateParameters& PiffTrackingDifferentiatorConfig::_internal_yaw_rate_paras() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::control::PiffTrackingDifferentiatorStateParameters* p = _impl_.yaw_rate_paras_;
  return p != nullptr ? *p : reinterpret_cast<const ::control::PiffTrackingDifferentiatorStateParameters&>(::control::_PiffTrackingDifferentiatorStateParameters_default_instance_);
}
inline const ::control::PiffTrackingDifferentiatorStateParameters& PiffTrackingDifferentiatorConfig::yaw_rate_paras() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.PiffTrackingDifferentiatorConfig.yaw_rate_paras)
  return _internal_yaw_rate_paras();
}
inline void PiffTrackingDifferentiatorConfig::unsafe_arena_set_allocated_yaw_rate_paras(::control::PiffTrackingDifferentiatorStateParameters* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.yaw_rate_paras_);
  }
  _impl_.yaw_rate_paras_ = reinterpret_cast<::control::PiffTrackingDifferentiatorStateParameters*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control.PiffTrackingDifferentiatorConfig.yaw_rate_paras)
}
inline ::control::PiffTrackingDifferentiatorStateParameters* PiffTrackingDifferentiatorConfig::release_yaw_rate_paras() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::control::PiffTrackingDifferentiatorStateParameters* released = _impl_.yaw_rate_paras_;
  _impl_.yaw_rate_paras_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::control::PiffTrackingDifferentiatorStateParameters* PiffTrackingDifferentiatorConfig::unsafe_arena_release_yaw_rate_paras() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control.PiffTrackingDifferentiatorConfig.yaw_rate_paras)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::control::PiffTrackingDifferentiatorStateParameters* temp = _impl_.yaw_rate_paras_;
  _impl_.yaw_rate_paras_ = nullptr;
  return temp;
}
inline ::control::PiffTrackingDifferentiatorStateParameters* PiffTrackingDifferentiatorConfig::_internal_mutable_yaw_rate_paras() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.yaw_rate_paras_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::control::PiffTrackingDifferentiatorStateParameters>(GetArena());
    _impl_.yaw_rate_paras_ = reinterpret_cast<::control::PiffTrackingDifferentiatorStateParameters*>(p);
  }
  return _impl_.yaw_rate_paras_;
}
inline ::control::PiffTrackingDifferentiatorStateParameters* PiffTrackingDifferentiatorConfig::mutable_yaw_rate_paras() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::control::PiffTrackingDifferentiatorStateParameters* _msg = _internal_mutable_yaw_rate_paras();
  // @@protoc_insertion_point(field_mutable:control.PiffTrackingDifferentiatorConfig.yaw_rate_paras)
  return _msg;
}
inline void PiffTrackingDifferentiatorConfig::set_allocated_yaw_rate_paras(::control::PiffTrackingDifferentiatorStateParameters* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.yaw_rate_paras_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.yaw_rate_paras_ = reinterpret_cast<::control::PiffTrackingDifferentiatorStateParameters*>(value);
  // @@protoc_insertion_point(field_set_allocated:control.PiffTrackingDifferentiatorConfig.yaw_rate_paras)
}

// -------------------------------------------------------------------

// PiffDTInputMaxLimitConfig

// required float speed_kph = 1;
inline bool PiffDTInputMaxLimitConfig::has_speed_kph() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PiffDTInputMaxLimitConfig::clear_speed_kph() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_kph_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float PiffDTInputMaxLimitConfig::speed_kph() const {
  // @@protoc_insertion_point(field_get:control.PiffDTInputMaxLimitConfig.speed_kph)
  return _internal_speed_kph();
}
inline void PiffDTInputMaxLimitConfig::set_speed_kph(float value) {
  _internal_set_speed_kph(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:control.PiffDTInputMaxLimitConfig.speed_kph)
}
inline float PiffDTInputMaxLimitConfig::_internal_speed_kph() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.speed_kph_;
}
inline void PiffDTInputMaxLimitConfig::_internal_set_speed_kph(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_kph_ = value;
}

// required float lateral_error = 2;
inline bool PiffDTInputMaxLimitConfig::has_lateral_error() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void PiffDTInputMaxLimitConfig::clear_lateral_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lateral_error_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float PiffDTInputMaxLimitConfig::lateral_error() const {
  // @@protoc_insertion_point(field_get:control.PiffDTInputMaxLimitConfig.lateral_error)
  return _internal_lateral_error();
}
inline void PiffDTInputMaxLimitConfig::set_lateral_error(float value) {
  _internal_set_lateral_error(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:control.PiffDTInputMaxLimitConfig.lateral_error)
}
inline float PiffDTInputMaxLimitConfig::_internal_lateral_error() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lateral_error_;
}
inline void PiffDTInputMaxLimitConfig::_internal_set_lateral_error(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lateral_error_ = value;
}

// required float heading_error_deg = 3;
inline bool PiffDTInputMaxLimitConfig::has_heading_error_deg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void PiffDTInputMaxLimitConfig::clear_heading_error_deg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.heading_error_deg_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float PiffDTInputMaxLimitConfig::heading_error_deg() const {
  // @@protoc_insertion_point(field_get:control.PiffDTInputMaxLimitConfig.heading_error_deg)
  return _internal_heading_error_deg();
}
inline void PiffDTInputMaxLimitConfig::set_heading_error_deg(float value) {
  _internal_set_heading_error_deg(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:control.PiffDTInputMaxLimitConfig.heading_error_deg)
}
inline float PiffDTInputMaxLimitConfig::_internal_heading_error_deg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.heading_error_deg_;
}
inline void PiffDTInputMaxLimitConfig::_internal_set_heading_error_deg(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.heading_error_deg_ = value;
}

// -------------------------------------------------------------------

// PiffDTInputFrameLimitConfig

// required float speed_kph = 1;
inline bool PiffDTInputFrameLimitConfig::has_speed_kph() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PiffDTInputFrameLimitConfig::clear_speed_kph() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_kph_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float PiffDTInputFrameLimitConfig::speed_kph() const {
  // @@protoc_insertion_point(field_get:control.PiffDTInputFrameLimitConfig.speed_kph)
  return _internal_speed_kph();
}
inline void PiffDTInputFrameLimitConfig::set_speed_kph(float value) {
  _internal_set_speed_kph(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:control.PiffDTInputFrameLimitConfig.speed_kph)
}
inline float PiffDTInputFrameLimitConfig::_internal_speed_kph() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.speed_kph_;
}
inline void PiffDTInputFrameLimitConfig::_internal_set_speed_kph(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_kph_ = value;
}

// required float c0_jump_max_m = 2;
inline bool PiffDTInputFrameLimitConfig::has_c0_jump_max_m() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void PiffDTInputFrameLimitConfig::clear_c0_jump_max_m() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c0_jump_max_m_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float PiffDTInputFrameLimitConfig::c0_jump_max_m() const {
  // @@protoc_insertion_point(field_get:control.PiffDTInputFrameLimitConfig.c0_jump_max_m)
  return _internal_c0_jump_max_m();
}
inline void PiffDTInputFrameLimitConfig::set_c0_jump_max_m(float value) {
  _internal_set_c0_jump_max_m(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:control.PiffDTInputFrameLimitConfig.c0_jump_max_m)
}
inline float PiffDTInputFrameLimitConfig::_internal_c0_jump_max_m() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.c0_jump_max_m_;
}
inline void PiffDTInputFrameLimitConfig::_internal_set_c0_jump_max_m(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c0_jump_max_m_ = value;
}

// required float c0_transit_rate_mps = 3;
inline bool PiffDTInputFrameLimitConfig::has_c0_transit_rate_mps() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void PiffDTInputFrameLimitConfig::clear_c0_transit_rate_mps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c0_transit_rate_mps_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float PiffDTInputFrameLimitConfig::c0_transit_rate_mps() const {
  // @@protoc_insertion_point(field_get:control.PiffDTInputFrameLimitConfig.c0_transit_rate_mps)
  return _internal_c0_transit_rate_mps();
}
inline void PiffDTInputFrameLimitConfig::set_c0_transit_rate_mps(float value) {
  _internal_set_c0_transit_rate_mps(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:control.PiffDTInputFrameLimitConfig.c0_transit_rate_mps)
}
inline float PiffDTInputFrameLimitConfig::_internal_c0_transit_rate_mps() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.c0_transit_rate_mps_;
}
inline void PiffDTInputFrameLimitConfig::_internal_set_c0_transit_rate_mps(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c0_transit_rate_mps_ = value;
}

// required float c0_track_percentage = 4;
inline bool PiffDTInputFrameLimitConfig::has_c0_track_percentage() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void PiffDTInputFrameLimitConfig::clear_c0_track_percentage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c0_track_percentage_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float PiffDTInputFrameLimitConfig::c0_track_percentage() const {
  // @@protoc_insertion_point(field_get:control.PiffDTInputFrameLimitConfig.c0_track_percentage)
  return _internal_c0_track_percentage();
}
inline void PiffDTInputFrameLimitConfig::set_c0_track_percentage(float value) {
  _internal_set_c0_track_percentage(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:control.PiffDTInputFrameLimitConfig.c0_track_percentage)
}
inline float PiffDTInputFrameLimitConfig::_internal_c0_track_percentage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.c0_track_percentage_;
}
inline void PiffDTInputFrameLimitConfig::_internal_set_c0_track_percentage(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c0_track_percentage_ = value;
}

// required float c1_jump_max_rad = 5;
inline bool PiffDTInputFrameLimitConfig::has_c1_jump_max_rad() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void PiffDTInputFrameLimitConfig::clear_c1_jump_max_rad() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c1_jump_max_rad_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float PiffDTInputFrameLimitConfig::c1_jump_max_rad() const {
  // @@protoc_insertion_point(field_get:control.PiffDTInputFrameLimitConfig.c1_jump_max_rad)
  return _internal_c1_jump_max_rad();
}
inline void PiffDTInputFrameLimitConfig::set_c1_jump_max_rad(float value) {
  _internal_set_c1_jump_max_rad(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:control.PiffDTInputFrameLimitConfig.c1_jump_max_rad)
}
inline float PiffDTInputFrameLimitConfig::_internal_c1_jump_max_rad() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.c1_jump_max_rad_;
}
inline void PiffDTInputFrameLimitConfig::_internal_set_c1_jump_max_rad(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c1_jump_max_rad_ = value;
}

// required float c1_transit_rate_radps = 6;
inline bool PiffDTInputFrameLimitConfig::has_c1_transit_rate_radps() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void PiffDTInputFrameLimitConfig::clear_c1_transit_rate_radps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c1_transit_rate_radps_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline float PiffDTInputFrameLimitConfig::c1_transit_rate_radps() const {
  // @@protoc_insertion_point(field_get:control.PiffDTInputFrameLimitConfig.c1_transit_rate_radps)
  return _internal_c1_transit_rate_radps();
}
inline void PiffDTInputFrameLimitConfig::set_c1_transit_rate_radps(float value) {
  _internal_set_c1_transit_rate_radps(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:control.PiffDTInputFrameLimitConfig.c1_transit_rate_radps)
}
inline float PiffDTInputFrameLimitConfig::_internal_c1_transit_rate_radps() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.c1_transit_rate_radps_;
}
inline void PiffDTInputFrameLimitConfig::_internal_set_c1_transit_rate_radps(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c1_transit_rate_radps_ = value;
}

// required float c1_track_percentage = 7;
inline bool PiffDTInputFrameLimitConfig::has_c1_track_percentage() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void PiffDTInputFrameLimitConfig::clear_c1_track_percentage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c1_track_percentage_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline float PiffDTInputFrameLimitConfig::c1_track_percentage() const {
  // @@protoc_insertion_point(field_get:control.PiffDTInputFrameLimitConfig.c1_track_percentage)
  return _internal_c1_track_percentage();
}
inline void PiffDTInputFrameLimitConfig::set_c1_track_percentage(float value) {
  _internal_set_c1_track_percentage(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:control.PiffDTInputFrameLimitConfig.c1_track_percentage)
}
inline float PiffDTInputFrameLimitConfig::_internal_c1_track_percentage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.c1_track_percentage_;
}
inline void PiffDTInputFrameLimitConfig::_internal_set_c1_track_percentage(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c1_track_percentage_ = value;
}

// required float c2_jump_max = 8;
inline bool PiffDTInputFrameLimitConfig::has_c2_jump_max() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void PiffDTInputFrameLimitConfig::clear_c2_jump_max() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c2_jump_max_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline float PiffDTInputFrameLimitConfig::c2_jump_max() const {
  // @@protoc_insertion_point(field_get:control.PiffDTInputFrameLimitConfig.c2_jump_max)
  return _internal_c2_jump_max();
}
inline void PiffDTInputFrameLimitConfig::set_c2_jump_max(float value) {
  _internal_set_c2_jump_max(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:control.PiffDTInputFrameLimitConfig.c2_jump_max)
}
inline float PiffDTInputFrameLimitConfig::_internal_c2_jump_max() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.c2_jump_max_;
}
inline void PiffDTInputFrameLimitConfig::_internal_set_c2_jump_max(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c2_jump_max_ = value;
}

// required float c2_transit_rate = 9;
inline bool PiffDTInputFrameLimitConfig::has_c2_transit_rate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void PiffDTInputFrameLimitConfig::clear_c2_transit_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c2_transit_rate_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline float PiffDTInputFrameLimitConfig::c2_transit_rate() const {
  // @@protoc_insertion_point(field_get:control.PiffDTInputFrameLimitConfig.c2_transit_rate)
  return _internal_c2_transit_rate();
}
inline void PiffDTInputFrameLimitConfig::set_c2_transit_rate(float value) {
  _internal_set_c2_transit_rate(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:control.PiffDTInputFrameLimitConfig.c2_transit_rate)
}
inline float PiffDTInputFrameLimitConfig::_internal_c2_transit_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.c2_transit_rate_;
}
inline void PiffDTInputFrameLimitConfig::_internal_set_c2_transit_rate(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c2_transit_rate_ = value;
}

// required float c2_track_percentage = 10;
inline bool PiffDTInputFrameLimitConfig::has_c2_track_percentage() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void PiffDTInputFrameLimitConfig::clear_c2_track_percentage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c2_track_percentage_ = 0;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline float PiffDTInputFrameLimitConfig::c2_track_percentage() const {
  // @@protoc_insertion_point(field_get:control.PiffDTInputFrameLimitConfig.c2_track_percentage)
  return _internal_c2_track_percentage();
}
inline void PiffDTInputFrameLimitConfig::set_c2_track_percentage(float value) {
  _internal_set_c2_track_percentage(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:control.PiffDTInputFrameLimitConfig.c2_track_percentage)
}
inline float PiffDTInputFrameLimitConfig::_internal_c2_track_percentage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.c2_track_percentage_;
}
inline void PiffDTInputFrameLimitConfig::_internal_set_c2_track_percentage(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c2_track_percentage_ = value;
}

// -------------------------------------------------------------------

// PiffDataTransformConfig

// required bool enable_input_max_limit = 1;
inline bool PiffDataTransformConfig::has_enable_input_max_limit() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PiffDataTransformConfig::clear_enable_input_max_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_input_max_limit_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool PiffDataTransformConfig::enable_input_max_limit() const {
  // @@protoc_insertion_point(field_get:control.PiffDataTransformConfig.enable_input_max_limit)
  return _internal_enable_input_max_limit();
}
inline void PiffDataTransformConfig::set_enable_input_max_limit(bool value) {
  _internal_set_enable_input_max_limit(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:control.PiffDataTransformConfig.enable_input_max_limit)
}
inline bool PiffDataTransformConfig::_internal_enable_input_max_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_input_max_limit_;
}
inline void PiffDataTransformConfig::_internal_set_enable_input_max_limit(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_input_max_limit_ = value;
}

// repeated .control.PiffDTInputMaxLimitConfig input_max_limit_conf = 2;
inline int PiffDataTransformConfig::_internal_input_max_limit_conf_size() const {
  return _internal_input_max_limit_conf().size();
}
inline int PiffDataTransformConfig::input_max_limit_conf_size() const {
  return _internal_input_max_limit_conf_size();
}
inline void PiffDataTransformConfig::clear_input_max_limit_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.input_max_limit_conf_.Clear();
}
inline ::control::PiffDTInputMaxLimitConfig* PiffDataTransformConfig::mutable_input_max_limit_conf(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:control.PiffDataTransformConfig.input_max_limit_conf)
  return _internal_mutable_input_max_limit_conf()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::control::PiffDTInputMaxLimitConfig>* PiffDataTransformConfig::mutable_input_max_limit_conf()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:control.PiffDataTransformConfig.input_max_limit_conf)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_input_max_limit_conf();
}
inline const ::control::PiffDTInputMaxLimitConfig& PiffDataTransformConfig::input_max_limit_conf(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.PiffDataTransformConfig.input_max_limit_conf)
  return _internal_input_max_limit_conf().Get(index);
}
inline ::control::PiffDTInputMaxLimitConfig* PiffDataTransformConfig::add_input_max_limit_conf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::control::PiffDTInputMaxLimitConfig* _add = _internal_mutable_input_max_limit_conf()->Add();
  // @@protoc_insertion_point(field_add:control.PiffDataTransformConfig.input_max_limit_conf)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::control::PiffDTInputMaxLimitConfig>& PiffDataTransformConfig::input_max_limit_conf() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:control.PiffDataTransformConfig.input_max_limit_conf)
  return _internal_input_max_limit_conf();
}
inline const ::google::protobuf::RepeatedPtrField<::control::PiffDTInputMaxLimitConfig>&
PiffDataTransformConfig::_internal_input_max_limit_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.input_max_limit_conf_;
}
inline ::google::protobuf::RepeatedPtrField<::control::PiffDTInputMaxLimitConfig>*
PiffDataTransformConfig::_internal_mutable_input_max_limit_conf() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.input_max_limit_conf_;
}

// required bool enable_input_frame_limit = 3;
inline bool PiffDataTransformConfig::has_enable_input_frame_limit() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void PiffDataTransformConfig::clear_enable_input_frame_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_input_frame_limit_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool PiffDataTransformConfig::enable_input_frame_limit() const {
  // @@protoc_insertion_point(field_get:control.PiffDataTransformConfig.enable_input_frame_limit)
  return _internal_enable_input_frame_limit();
}
inline void PiffDataTransformConfig::set_enable_input_frame_limit(bool value) {
  _internal_set_enable_input_frame_limit(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:control.PiffDataTransformConfig.enable_input_frame_limit)
}
inline bool PiffDataTransformConfig::_internal_enable_input_frame_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_input_frame_limit_;
}
inline void PiffDataTransformConfig::_internal_set_enable_input_frame_limit(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_input_frame_limit_ = value;
}

// repeated .control.PiffDTInputFrameLimitConfig input_frame_limit_conf = 4;
inline int PiffDataTransformConfig::_internal_input_frame_limit_conf_size() const {
  return _internal_input_frame_limit_conf().size();
}
inline int PiffDataTransformConfig::input_frame_limit_conf_size() const {
  return _internal_input_frame_limit_conf_size();
}
inline void PiffDataTransformConfig::clear_input_frame_limit_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.input_frame_limit_conf_.Clear();
}
inline ::control::PiffDTInputFrameLimitConfig* PiffDataTransformConfig::mutable_input_frame_limit_conf(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:control.PiffDataTransformConfig.input_frame_limit_conf)
  return _internal_mutable_input_frame_limit_conf()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::control::PiffDTInputFrameLimitConfig>* PiffDataTransformConfig::mutable_input_frame_limit_conf()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:control.PiffDataTransformConfig.input_frame_limit_conf)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_input_frame_limit_conf();
}
inline const ::control::PiffDTInputFrameLimitConfig& PiffDataTransformConfig::input_frame_limit_conf(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.PiffDataTransformConfig.input_frame_limit_conf)
  return _internal_input_frame_limit_conf().Get(index);
}
inline ::control::PiffDTInputFrameLimitConfig* PiffDataTransformConfig::add_input_frame_limit_conf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::control::PiffDTInputFrameLimitConfig* _add = _internal_mutable_input_frame_limit_conf()->Add();
  // @@protoc_insertion_point(field_add:control.PiffDataTransformConfig.input_frame_limit_conf)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::control::PiffDTInputFrameLimitConfig>& PiffDataTransformConfig::input_frame_limit_conf() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:control.PiffDataTransformConfig.input_frame_limit_conf)
  return _internal_input_frame_limit_conf();
}
inline const ::google::protobuf::RepeatedPtrField<::control::PiffDTInputFrameLimitConfig>&
PiffDataTransformConfig::_internal_input_frame_limit_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.input_frame_limit_conf_;
}
inline ::google::protobuf::RepeatedPtrField<::control::PiffDTInputFrameLimitConfig>*
PiffDataTransformConfig::_internal_mutable_input_frame_limit_conf() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.input_frame_limit_conf_;
}

// required int32 frame_ramp_mode = 5;
inline bool PiffDataTransformConfig::has_frame_ramp_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void PiffDataTransformConfig::clear_frame_ramp_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frame_ramp_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t PiffDataTransformConfig::frame_ramp_mode() const {
  // @@protoc_insertion_point(field_get:control.PiffDataTransformConfig.frame_ramp_mode)
  return _internal_frame_ramp_mode();
}
inline void PiffDataTransformConfig::set_frame_ramp_mode(::int32_t value) {
  _internal_set_frame_ramp_mode(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:control.PiffDataTransformConfig.frame_ramp_mode)
}
inline ::int32_t PiffDataTransformConfig::_internal_frame_ramp_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frame_ramp_mode_;
}
inline void PiffDataTransformConfig::_internal_set_frame_ramp_mode(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frame_ramp_mode_ = value;
}

// -------------------------------------------------------------------

// PiffPPSteeringAngleLimit

// required float speed_kph = 1;
inline bool PiffPPSteeringAngleLimit::has_speed_kph() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PiffPPSteeringAngleLimit::clear_speed_kph() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_kph_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float PiffPPSteeringAngleLimit::speed_kph() const {
  // @@protoc_insertion_point(field_get:control.PiffPPSteeringAngleLimit.speed_kph)
  return _internal_speed_kph();
}
inline void PiffPPSteeringAngleLimit::set_speed_kph(float value) {
  _internal_set_speed_kph(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:control.PiffPPSteeringAngleLimit.speed_kph)
}
inline float PiffPPSteeringAngleLimit::_internal_speed_kph() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.speed_kph_;
}
inline void PiffPPSteeringAngleLimit::_internal_set_speed_kph(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_kph_ = value;
}

// required float steering_range_deg = 2;
inline bool PiffPPSteeringAngleLimit::has_steering_range_deg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void PiffPPSteeringAngleLimit::clear_steering_range_deg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steering_range_deg_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float PiffPPSteeringAngleLimit::steering_range_deg() const {
  // @@protoc_insertion_point(field_get:control.PiffPPSteeringAngleLimit.steering_range_deg)
  return _internal_steering_range_deg();
}
inline void PiffPPSteeringAngleLimit::set_steering_range_deg(float value) {
  _internal_set_steering_range_deg(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:control.PiffPPSteeringAngleLimit.steering_range_deg)
}
inline float PiffPPSteeringAngleLimit::_internal_steering_range_deg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.steering_range_deg_;
}
inline void PiffPPSteeringAngleLimit::_internal_set_steering_range_deg(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steering_range_deg_ = value;
}

// required float steering_rate_range_degps = 3;
inline bool PiffPPSteeringAngleLimit::has_steering_rate_range_degps() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void PiffPPSteeringAngleLimit::clear_steering_rate_range_degps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steering_rate_range_degps_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float PiffPPSteeringAngleLimit::steering_rate_range_degps() const {
  // @@protoc_insertion_point(field_get:control.PiffPPSteeringAngleLimit.steering_rate_range_degps)
  return _internal_steering_rate_range_degps();
}
inline void PiffPPSteeringAngleLimit::set_steering_rate_range_degps(float value) {
  _internal_set_steering_rate_range_degps(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:control.PiffPPSteeringAngleLimit.steering_rate_range_degps)
}
inline float PiffPPSteeringAngleLimit::_internal_steering_rate_range_degps() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.steering_rate_range_degps_;
}
inline void PiffPPSteeringAngleLimit::_internal_set_steering_rate_range_degps(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steering_rate_range_degps_ = value;
}

// -------------------------------------------------------------------

// PiffPPActivateControlContentConfig

// required float speed_kph = 1;
inline bool PiffPPActivateControlContentConfig::has_speed_kph() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PiffPPActivateControlContentConfig::clear_speed_kph() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_kph_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float PiffPPActivateControlContentConfig::speed_kph() const {
  // @@protoc_insertion_point(field_get:control.PiffPPActivateControlContentConfig.speed_kph)
  return _internal_speed_kph();
}
inline void PiffPPActivateControlContentConfig::set_speed_kph(float value) {
  _internal_set_speed_kph(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:control.PiffPPActivateControlContentConfig.speed_kph)
}
inline float PiffPPActivateControlContentConfig::_internal_speed_kph() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.speed_kph_;
}
inline void PiffPPActivateControlContentConfig::_internal_set_speed_kph(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_kph_ = value;
}

// required float steering_rate_degps = 2;
inline bool PiffPPActivateControlContentConfig::has_steering_rate_degps() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void PiffPPActivateControlContentConfig::clear_steering_rate_degps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steering_rate_degps_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float PiffPPActivateControlContentConfig::steering_rate_degps() const {
  // @@protoc_insertion_point(field_get:control.PiffPPActivateControlContentConfig.steering_rate_degps)
  return _internal_steering_rate_degps();
}
inline void PiffPPActivateControlContentConfig::set_steering_rate_degps(float value) {
  _internal_set_steering_rate_degps(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:control.PiffPPActivateControlContentConfig.steering_rate_degps)
}
inline float PiffPPActivateControlContentConfig::_internal_steering_rate_degps() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.steering_rate_degps_;
}
inline void PiffPPActivateControlContentConfig::_internal_set_steering_rate_degps(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steering_rate_degps_ = value;
}

// required float steering_dead_zone_deg = 3;
inline bool PiffPPActivateControlContentConfig::has_steering_dead_zone_deg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void PiffPPActivateControlContentConfig::clear_steering_dead_zone_deg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steering_dead_zone_deg_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float PiffPPActivateControlContentConfig::steering_dead_zone_deg() const {
  // @@protoc_insertion_point(field_get:control.PiffPPActivateControlContentConfig.steering_dead_zone_deg)
  return _internal_steering_dead_zone_deg();
}
inline void PiffPPActivateControlContentConfig::set_steering_dead_zone_deg(float value) {
  _internal_set_steering_dead_zone_deg(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:control.PiffPPActivateControlContentConfig.steering_dead_zone_deg)
}
inline float PiffPPActivateControlContentConfig::_internal_steering_dead_zone_deg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.steering_dead_zone_deg_;
}
inline void PiffPPActivateControlContentConfig::_internal_set_steering_dead_zone_deg(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steering_dead_zone_deg_ = value;
}

// required float steering_frame_track_percentage = 4;
inline bool PiffPPActivateControlContentConfig::has_steering_frame_track_percentage() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void PiffPPActivateControlContentConfig::clear_steering_frame_track_percentage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steering_frame_track_percentage_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float PiffPPActivateControlContentConfig::steering_frame_track_percentage() const {
  // @@protoc_insertion_point(field_get:control.PiffPPActivateControlContentConfig.steering_frame_track_percentage)
  return _internal_steering_frame_track_percentage();
}
inline void PiffPPActivateControlContentConfig::set_steering_frame_track_percentage(float value) {
  _internal_set_steering_frame_track_percentage(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:control.PiffPPActivateControlContentConfig.steering_frame_track_percentage)
}
inline float PiffPPActivateControlContentConfig::_internal_steering_frame_track_percentage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.steering_frame_track_percentage_;
}
inline void PiffPPActivateControlContentConfig::_internal_set_steering_frame_track_percentage(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steering_frame_track_percentage_ = value;
}

// -------------------------------------------------------------------

// PiffPPDectivateControlContentConfig

// required float speed_kph = 1;
inline bool PiffPPDectivateControlContentConfig::has_speed_kph() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PiffPPDectivateControlContentConfig::clear_speed_kph() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_kph_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float PiffPPDectivateControlContentConfig::speed_kph() const {
  // @@protoc_insertion_point(field_get:control.PiffPPDectivateControlContentConfig.speed_kph)
  return _internal_speed_kph();
}
inline void PiffPPDectivateControlContentConfig::set_speed_kph(float value) {
  _internal_set_speed_kph(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:control.PiffPPDectivateControlContentConfig.speed_kph)
}
inline float PiffPPDectivateControlContentConfig::_internal_speed_kph() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.speed_kph_;
}
inline void PiffPPDectivateControlContentConfig::_internal_set_speed_kph(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_kph_ = value;
}

// required float steering_rate_degps = 2;
inline bool PiffPPDectivateControlContentConfig::has_steering_rate_degps() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void PiffPPDectivateControlContentConfig::clear_steering_rate_degps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steering_rate_degps_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float PiffPPDectivateControlContentConfig::steering_rate_degps() const {
  // @@protoc_insertion_point(field_get:control.PiffPPDectivateControlContentConfig.steering_rate_degps)
  return _internal_steering_rate_degps();
}
inline void PiffPPDectivateControlContentConfig::set_steering_rate_degps(float value) {
  _internal_set_steering_rate_degps(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:control.PiffPPDectivateControlContentConfig.steering_rate_degps)
}
inline float PiffPPDectivateControlContentConfig::_internal_steering_rate_degps() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.steering_rate_degps_;
}
inline void PiffPPDectivateControlContentConfig::_internal_set_steering_rate_degps(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steering_rate_degps_ = value;
}

// required float steering_frame_track_percentage = 3;
inline bool PiffPPDectivateControlContentConfig::has_steering_frame_track_percentage() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void PiffPPDectivateControlContentConfig::clear_steering_frame_track_percentage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steering_frame_track_percentage_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float PiffPPDectivateControlContentConfig::steering_frame_track_percentage() const {
  // @@protoc_insertion_point(field_get:control.PiffPPDectivateControlContentConfig.steering_frame_track_percentage)
  return _internal_steering_frame_track_percentage();
}
inline void PiffPPDectivateControlContentConfig::set_steering_frame_track_percentage(float value) {
  _internal_set_steering_frame_track_percentage(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:control.PiffPPDectivateControlContentConfig.steering_frame_track_percentage)
}
inline float PiffPPDectivateControlContentConfig::_internal_steering_frame_track_percentage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.steering_frame_track_percentage_;
}
inline void PiffPPDectivateControlContentConfig::_internal_set_steering_frame_track_percentage(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steering_frame_track_percentage_ = value;
}

// -------------------------------------------------------------------

// PiffPPActivateControlConfig

// required bool enable_post_activate_control = 1;
inline bool PiffPPActivateControlConfig::has_enable_post_activate_control() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PiffPPActivateControlConfig::clear_enable_post_activate_control() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_post_activate_control_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool PiffPPActivateControlConfig::enable_post_activate_control() const {
  // @@protoc_insertion_point(field_get:control.PiffPPActivateControlConfig.enable_post_activate_control)
  return _internal_enable_post_activate_control();
}
inline void PiffPPActivateControlConfig::set_enable_post_activate_control(bool value) {
  _internal_set_enable_post_activate_control(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:control.PiffPPActivateControlConfig.enable_post_activate_control)
}
inline bool PiffPPActivateControlConfig::_internal_enable_post_activate_control() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_post_activate_control_;
}
inline void PiffPPActivateControlConfig::_internal_set_enable_post_activate_control(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_post_activate_control_ = value;
}

// repeated .control.PiffPPActivateControlContentConfig activate_conf = 2;
inline int PiffPPActivateControlConfig::_internal_activate_conf_size() const {
  return _internal_activate_conf().size();
}
inline int PiffPPActivateControlConfig::activate_conf_size() const {
  return _internal_activate_conf_size();
}
inline void PiffPPActivateControlConfig::clear_activate_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.activate_conf_.Clear();
}
inline ::control::PiffPPActivateControlContentConfig* PiffPPActivateControlConfig::mutable_activate_conf(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:control.PiffPPActivateControlConfig.activate_conf)
  return _internal_mutable_activate_conf()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::control::PiffPPActivateControlContentConfig>* PiffPPActivateControlConfig::mutable_activate_conf()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:control.PiffPPActivateControlConfig.activate_conf)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_activate_conf();
}
inline const ::control::PiffPPActivateControlContentConfig& PiffPPActivateControlConfig::activate_conf(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.PiffPPActivateControlConfig.activate_conf)
  return _internal_activate_conf().Get(index);
}
inline ::control::PiffPPActivateControlContentConfig* PiffPPActivateControlConfig::add_activate_conf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::control::PiffPPActivateControlContentConfig* _add = _internal_mutable_activate_conf()->Add();
  // @@protoc_insertion_point(field_add:control.PiffPPActivateControlConfig.activate_conf)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::control::PiffPPActivateControlContentConfig>& PiffPPActivateControlConfig::activate_conf() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:control.PiffPPActivateControlConfig.activate_conf)
  return _internal_activate_conf();
}
inline const ::google::protobuf::RepeatedPtrField<::control::PiffPPActivateControlContentConfig>&
PiffPPActivateControlConfig::_internal_activate_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.activate_conf_;
}
inline ::google::protobuf::RepeatedPtrField<::control::PiffPPActivateControlContentConfig>*
PiffPPActivateControlConfig::_internal_mutable_activate_conf() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.activate_conf_;
}

// required int32 ramp_mode = 3;
inline bool PiffPPActivateControlConfig::has_ramp_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void PiffPPActivateControlConfig::clear_ramp_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ramp_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t PiffPPActivateControlConfig::ramp_mode() const {
  // @@protoc_insertion_point(field_get:control.PiffPPActivateControlConfig.ramp_mode)
  return _internal_ramp_mode();
}
inline void PiffPPActivateControlConfig::set_ramp_mode(::int32_t value) {
  _internal_set_ramp_mode(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:control.PiffPPActivateControlConfig.ramp_mode)
}
inline ::int32_t PiffPPActivateControlConfig::_internal_ramp_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ramp_mode_;
}
inline void PiffPPActivateControlConfig::_internal_set_ramp_mode(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ramp_mode_ = value;
}

// -------------------------------------------------------------------

// PiffPPDeactivateControlConfig

// required bool enable_post_deactivate_control = 1;
inline bool PiffPPDeactivateControlConfig::has_enable_post_deactivate_control() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PiffPPDeactivateControlConfig::clear_enable_post_deactivate_control() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_post_deactivate_control_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool PiffPPDeactivateControlConfig::enable_post_deactivate_control() const {
  // @@protoc_insertion_point(field_get:control.PiffPPDeactivateControlConfig.enable_post_deactivate_control)
  return _internal_enable_post_deactivate_control();
}
inline void PiffPPDeactivateControlConfig::set_enable_post_deactivate_control(bool value) {
  _internal_set_enable_post_deactivate_control(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:control.PiffPPDeactivateControlConfig.enable_post_deactivate_control)
}
inline bool PiffPPDeactivateControlConfig::_internal_enable_post_deactivate_control() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_post_deactivate_control_;
}
inline void PiffPPDeactivateControlConfig::_internal_set_enable_post_deactivate_control(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_post_deactivate_control_ = value;
}

// repeated .control.PiffPPDectivateControlContentConfig deactivate_conf = 2;
inline int PiffPPDeactivateControlConfig::_internal_deactivate_conf_size() const {
  return _internal_deactivate_conf().size();
}
inline int PiffPPDeactivateControlConfig::deactivate_conf_size() const {
  return _internal_deactivate_conf_size();
}
inline void PiffPPDeactivateControlConfig::clear_deactivate_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deactivate_conf_.Clear();
}
inline ::control::PiffPPDectivateControlContentConfig* PiffPPDeactivateControlConfig::mutable_deactivate_conf(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:control.PiffPPDeactivateControlConfig.deactivate_conf)
  return _internal_mutable_deactivate_conf()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::control::PiffPPDectivateControlContentConfig>* PiffPPDeactivateControlConfig::mutable_deactivate_conf()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:control.PiffPPDeactivateControlConfig.deactivate_conf)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_deactivate_conf();
}
inline const ::control::PiffPPDectivateControlContentConfig& PiffPPDeactivateControlConfig::deactivate_conf(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.PiffPPDeactivateControlConfig.deactivate_conf)
  return _internal_deactivate_conf().Get(index);
}
inline ::control::PiffPPDectivateControlContentConfig* PiffPPDeactivateControlConfig::add_deactivate_conf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::control::PiffPPDectivateControlContentConfig* _add = _internal_mutable_deactivate_conf()->Add();
  // @@protoc_insertion_point(field_add:control.PiffPPDeactivateControlConfig.deactivate_conf)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::control::PiffPPDectivateControlContentConfig>& PiffPPDeactivateControlConfig::deactivate_conf() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:control.PiffPPDeactivateControlConfig.deactivate_conf)
  return _internal_deactivate_conf();
}
inline const ::google::protobuf::RepeatedPtrField<::control::PiffPPDectivateControlContentConfig>&
PiffPPDeactivateControlConfig::_internal_deactivate_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deactivate_conf_;
}
inline ::google::protobuf::RepeatedPtrField<::control::PiffPPDectivateControlContentConfig>*
PiffPPDeactivateControlConfig::_internal_mutable_deactivate_conf() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.deactivate_conf_;
}

// required int32 ramp_mode = 3;
inline bool PiffPPDeactivateControlConfig::has_ramp_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void PiffPPDeactivateControlConfig::clear_ramp_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ramp_mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t PiffPPDeactivateControlConfig::ramp_mode() const {
  // @@protoc_insertion_point(field_get:control.PiffPPDeactivateControlConfig.ramp_mode)
  return _internal_ramp_mode();
}
inline void PiffPPDeactivateControlConfig::set_ramp_mode(::int32_t value) {
  _internal_set_ramp_mode(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:control.PiffPPDeactivateControlConfig.ramp_mode)
}
inline ::int32_t PiffPPDeactivateControlConfig::_internal_ramp_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ramp_mode_;
}
inline void PiffPPDeactivateControlConfig::_internal_set_ramp_mode(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ramp_mode_ = value;
}

// -------------------------------------------------------------------

// PiffPostProcessConfig

// required bool enable_steering_limit = 1;
inline bool PiffPostProcessConfig::has_enable_steering_limit() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void PiffPostProcessConfig::clear_enable_steering_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_steering_limit_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool PiffPostProcessConfig::enable_steering_limit() const {
  // @@protoc_insertion_point(field_get:control.PiffPostProcessConfig.enable_steering_limit)
  return _internal_enable_steering_limit();
}
inline void PiffPostProcessConfig::set_enable_steering_limit(bool value) {
  _internal_set_enable_steering_limit(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:control.PiffPostProcessConfig.enable_steering_limit)
}
inline bool PiffPostProcessConfig::_internal_enable_steering_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_steering_limit_;
}
inline void PiffPostProcessConfig::_internal_set_enable_steering_limit(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_steering_limit_ = value;
}

// required float steering_range_factor = 2;
inline bool PiffPostProcessConfig::has_steering_range_factor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void PiffPostProcessConfig::clear_steering_range_factor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steering_range_factor_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float PiffPostProcessConfig::steering_range_factor() const {
  // @@protoc_insertion_point(field_get:control.PiffPostProcessConfig.steering_range_factor)
  return _internal_steering_range_factor();
}
inline void PiffPostProcessConfig::set_steering_range_factor(float value) {
  _internal_set_steering_range_factor(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:control.PiffPostProcessConfig.steering_range_factor)
}
inline float PiffPostProcessConfig::_internal_steering_range_factor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.steering_range_factor_;
}
inline void PiffPostProcessConfig::_internal_set_steering_range_factor(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steering_range_factor_ = value;
}

// required float steering_rate_range_factor = 3;
inline bool PiffPostProcessConfig::has_steering_rate_range_factor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void PiffPostProcessConfig::clear_steering_rate_range_factor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steering_rate_range_factor_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float PiffPostProcessConfig::steering_rate_range_factor() const {
  // @@protoc_insertion_point(field_get:control.PiffPostProcessConfig.steering_rate_range_factor)
  return _internal_steering_rate_range_factor();
}
inline void PiffPostProcessConfig::set_steering_rate_range_factor(float value) {
  _internal_set_steering_rate_range_factor(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:control.PiffPostProcessConfig.steering_rate_range_factor)
}
inline float PiffPostProcessConfig::_internal_steering_rate_range_factor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.steering_rate_range_factor_;
}
inline void PiffPostProcessConfig::_internal_set_steering_rate_range_factor(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steering_rate_range_factor_ = value;
}

// repeated .control.PiffPPSteeringAngleLimit steering_angle_limit = 4;
inline int PiffPostProcessConfig::_internal_steering_angle_limit_size() const {
  return _internal_steering_angle_limit().size();
}
inline int PiffPostProcessConfig::steering_angle_limit_size() const {
  return _internal_steering_angle_limit_size();
}
inline void PiffPostProcessConfig::clear_steering_angle_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steering_angle_limit_.Clear();
}
inline ::control::PiffPPSteeringAngleLimit* PiffPostProcessConfig::mutable_steering_angle_limit(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:control.PiffPostProcessConfig.steering_angle_limit)
  return _internal_mutable_steering_angle_limit()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::control::PiffPPSteeringAngleLimit>* PiffPostProcessConfig::mutable_steering_angle_limit()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:control.PiffPostProcessConfig.steering_angle_limit)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_steering_angle_limit();
}
inline const ::control::PiffPPSteeringAngleLimit& PiffPostProcessConfig::steering_angle_limit(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.PiffPostProcessConfig.steering_angle_limit)
  return _internal_steering_angle_limit().Get(index);
}
inline ::control::PiffPPSteeringAngleLimit* PiffPostProcessConfig::add_steering_angle_limit() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::control::PiffPPSteeringAngleLimit* _add = _internal_mutable_steering_angle_limit()->Add();
  // @@protoc_insertion_point(field_add:control.PiffPostProcessConfig.steering_angle_limit)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::control::PiffPPSteeringAngleLimit>& PiffPostProcessConfig::steering_angle_limit() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:control.PiffPostProcessConfig.steering_angle_limit)
  return _internal_steering_angle_limit();
}
inline const ::google::protobuf::RepeatedPtrField<::control::PiffPPSteeringAngleLimit>&
PiffPostProcessConfig::_internal_steering_angle_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.steering_angle_limit_;
}
inline ::google::protobuf::RepeatedPtrField<::control::PiffPPSteeringAngleLimit>*
PiffPostProcessConfig::_internal_mutable_steering_angle_limit() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.steering_angle_limit_;
}

// required .control.PiffPPActivateControlConfig post_activate_control_conf = 5;
inline bool PiffPostProcessConfig::has_post_activate_control_conf() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.post_activate_control_conf_ != nullptr);
  return value;
}
inline void PiffPostProcessConfig::clear_post_activate_control_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.post_activate_control_conf_ != nullptr) _impl_.post_activate_control_conf_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::control::PiffPPActivateControlConfig& PiffPostProcessConfig::_internal_post_activate_control_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::control::PiffPPActivateControlConfig* p = _impl_.post_activate_control_conf_;
  return p != nullptr ? *p : reinterpret_cast<const ::control::PiffPPActivateControlConfig&>(::control::_PiffPPActivateControlConfig_default_instance_);
}
inline const ::control::PiffPPActivateControlConfig& PiffPostProcessConfig::post_activate_control_conf() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.PiffPostProcessConfig.post_activate_control_conf)
  return _internal_post_activate_control_conf();
}
inline void PiffPostProcessConfig::unsafe_arena_set_allocated_post_activate_control_conf(::control::PiffPPActivateControlConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.post_activate_control_conf_);
  }
  _impl_.post_activate_control_conf_ = reinterpret_cast<::control::PiffPPActivateControlConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control.PiffPostProcessConfig.post_activate_control_conf)
}
inline ::control::PiffPPActivateControlConfig* PiffPostProcessConfig::release_post_activate_control_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::control::PiffPPActivateControlConfig* released = _impl_.post_activate_control_conf_;
  _impl_.post_activate_control_conf_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::control::PiffPPActivateControlConfig* PiffPostProcessConfig::unsafe_arena_release_post_activate_control_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control.PiffPostProcessConfig.post_activate_control_conf)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::control::PiffPPActivateControlConfig* temp = _impl_.post_activate_control_conf_;
  _impl_.post_activate_control_conf_ = nullptr;
  return temp;
}
inline ::control::PiffPPActivateControlConfig* PiffPostProcessConfig::_internal_mutable_post_activate_control_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.post_activate_control_conf_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::control::PiffPPActivateControlConfig>(GetArena());
    _impl_.post_activate_control_conf_ = reinterpret_cast<::control::PiffPPActivateControlConfig*>(p);
  }
  return _impl_.post_activate_control_conf_;
}
inline ::control::PiffPPActivateControlConfig* PiffPostProcessConfig::mutable_post_activate_control_conf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::control::PiffPPActivateControlConfig* _msg = _internal_mutable_post_activate_control_conf();
  // @@protoc_insertion_point(field_mutable:control.PiffPostProcessConfig.post_activate_control_conf)
  return _msg;
}
inline void PiffPostProcessConfig::set_allocated_post_activate_control_conf(::control::PiffPPActivateControlConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.post_activate_control_conf_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.post_activate_control_conf_ = reinterpret_cast<::control::PiffPPActivateControlConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:control.PiffPostProcessConfig.post_activate_control_conf)
}

// required .control.PiffPPDeactivateControlConfig post_deactivate_control_conf = 6;
inline bool PiffPostProcessConfig::has_post_deactivate_control_conf() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.post_deactivate_control_conf_ != nullptr);
  return value;
}
inline void PiffPostProcessConfig::clear_post_deactivate_control_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.post_deactivate_control_conf_ != nullptr) _impl_.post_deactivate_control_conf_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::control::PiffPPDeactivateControlConfig& PiffPostProcessConfig::_internal_post_deactivate_control_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::control::PiffPPDeactivateControlConfig* p = _impl_.post_deactivate_control_conf_;
  return p != nullptr ? *p : reinterpret_cast<const ::control::PiffPPDeactivateControlConfig&>(::control::_PiffPPDeactivateControlConfig_default_instance_);
}
inline const ::control::PiffPPDeactivateControlConfig& PiffPostProcessConfig::post_deactivate_control_conf() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.PiffPostProcessConfig.post_deactivate_control_conf)
  return _internal_post_deactivate_control_conf();
}
inline void PiffPostProcessConfig::unsafe_arena_set_allocated_post_deactivate_control_conf(::control::PiffPPDeactivateControlConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.post_deactivate_control_conf_);
  }
  _impl_.post_deactivate_control_conf_ = reinterpret_cast<::control::PiffPPDeactivateControlConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control.PiffPostProcessConfig.post_deactivate_control_conf)
}
inline ::control::PiffPPDeactivateControlConfig* PiffPostProcessConfig::release_post_deactivate_control_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::control::PiffPPDeactivateControlConfig* released = _impl_.post_deactivate_control_conf_;
  _impl_.post_deactivate_control_conf_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::control::PiffPPDeactivateControlConfig* PiffPostProcessConfig::unsafe_arena_release_post_deactivate_control_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control.PiffPostProcessConfig.post_deactivate_control_conf)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::control::PiffPPDeactivateControlConfig* temp = _impl_.post_deactivate_control_conf_;
  _impl_.post_deactivate_control_conf_ = nullptr;
  return temp;
}
inline ::control::PiffPPDeactivateControlConfig* PiffPostProcessConfig::_internal_mutable_post_deactivate_control_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.post_deactivate_control_conf_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::control::PiffPPDeactivateControlConfig>(GetArena());
    _impl_.post_deactivate_control_conf_ = reinterpret_cast<::control::PiffPPDeactivateControlConfig*>(p);
  }
  return _impl_.post_deactivate_control_conf_;
}
inline ::control::PiffPPDeactivateControlConfig* PiffPostProcessConfig::mutable_post_deactivate_control_conf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::control::PiffPPDeactivateControlConfig* _msg = _internal_mutable_post_deactivate_control_conf();
  // @@protoc_insertion_point(field_mutable:control.PiffPostProcessConfig.post_deactivate_control_conf)
  return _msg;
}
inline void PiffPostProcessConfig::set_allocated_post_deactivate_control_conf(::control::PiffPPDeactivateControlConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.post_deactivate_control_conf_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.post_deactivate_control_conf_ = reinterpret_cast<::control::PiffPPDeactivateControlConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:control.PiffPostProcessConfig.post_deactivate_control_conf)
}

// -------------------------------------------------------------------

// PiffCoeffientGainConfig

// required float c0_threshold = 1;
inline bool PiffCoeffientGainConfig::has_c0_threshold() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PiffCoeffientGainConfig::clear_c0_threshold() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c0_threshold_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float PiffCoeffientGainConfig::c0_threshold() const {
  // @@protoc_insertion_point(field_get:control.PiffCoeffientGainConfig.c0_threshold)
  return _internal_c0_threshold();
}
inline void PiffCoeffientGainConfig::set_c0_threshold(float value) {
  _internal_set_c0_threshold(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:control.PiffCoeffientGainConfig.c0_threshold)
}
inline float PiffCoeffientGainConfig::_internal_c0_threshold() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.c0_threshold_;
}
inline void PiffCoeffientGainConfig::_internal_set_c0_threshold(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c0_threshold_ = value;
}

// required float c1_coef = 2;
inline bool PiffCoeffientGainConfig::has_c1_coef() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void PiffCoeffientGainConfig::clear_c1_coef() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c1_coef_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float PiffCoeffientGainConfig::c1_coef() const {
  // @@protoc_insertion_point(field_get:control.PiffCoeffientGainConfig.c1_coef)
  return _internal_c1_coef();
}
inline void PiffCoeffientGainConfig::set_c1_coef(float value) {
  _internal_set_c1_coef(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:control.PiffCoeffientGainConfig.c1_coef)
}
inline float PiffCoeffientGainConfig::_internal_c1_coef() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.c1_coef_;
}
inline void PiffCoeffientGainConfig::_internal_set_c1_coef(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c1_coef_ = value;
}

// required float c2_coef = 3;
inline bool PiffCoeffientGainConfig::has_c2_coef() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void PiffCoeffientGainConfig::clear_c2_coef() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c2_coef_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float PiffCoeffientGainConfig::c2_coef() const {
  // @@protoc_insertion_point(field_get:control.PiffCoeffientGainConfig.c2_coef)
  return _internal_c2_coef();
}
inline void PiffCoeffientGainConfig::set_c2_coef(float value) {
  _internal_set_c2_coef(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:control.PiffCoeffientGainConfig.c2_coef)
}
inline float PiffCoeffientGainConfig::_internal_c2_coef() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.c2_coef_;
}
inline void PiffCoeffientGainConfig::_internal_set_c2_coef(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.c2_coef_ = value;
}

// -------------------------------------------------------------------

// PiffCommonParametersConfig

// required float control_period = 1;
inline bool PiffCommonParametersConfig::has_control_period() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PiffCommonParametersConfig::clear_control_period() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.control_period_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float PiffCommonParametersConfig::control_period() const {
  // @@protoc_insertion_point(field_get:control.PiffCommonParametersConfig.control_period)
  return _internal_control_period();
}
inline void PiffCommonParametersConfig::set_control_period(float value) {
  _internal_set_control_period(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:control.PiffCommonParametersConfig.control_period)
}
inline float PiffCommonParametersConfig::_internal_control_period() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.control_period_;
}
inline void PiffCommonParametersConfig::_internal_set_control_period(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.control_period_ = value;
}

// required float standstill_speed_mps = 3;
inline bool PiffCommonParametersConfig::has_standstill_speed_mps() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void PiffCommonParametersConfig::clear_standstill_speed_mps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.standstill_speed_mps_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float PiffCommonParametersConfig::standstill_speed_mps() const {
  // @@protoc_insertion_point(field_get:control.PiffCommonParametersConfig.standstill_speed_mps)
  return _internal_standstill_speed_mps();
}
inline void PiffCommonParametersConfig::set_standstill_speed_mps(float value) {
  _internal_set_standstill_speed_mps(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:control.PiffCommonParametersConfig.standstill_speed_mps)
}
inline float PiffCommonParametersConfig::_internal_standstill_speed_mps() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.standstill_speed_mps_;
}
inline void PiffCommonParametersConfig::_internal_set_standstill_speed_mps(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.standstill_speed_mps_ = value;
}

// -------------------------------------------------------------------

// LatPidConfig

// required .control.PiffCommonParametersConfig common_para_conf = 1;
inline bool LatPidConfig::has_common_para_conf() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.common_para_conf_ != nullptr);
  return value;
}
inline void LatPidConfig::clear_common_para_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.common_para_conf_ != nullptr) _impl_.common_para_conf_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::control::PiffCommonParametersConfig& LatPidConfig::_internal_common_para_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::control::PiffCommonParametersConfig* p = _impl_.common_para_conf_;
  return p != nullptr ? *p : reinterpret_cast<const ::control::PiffCommonParametersConfig&>(::control::_PiffCommonParametersConfig_default_instance_);
}
inline const ::control::PiffCommonParametersConfig& LatPidConfig::common_para_conf() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.LatPidConfig.common_para_conf)
  return _internal_common_para_conf();
}
inline void LatPidConfig::unsafe_arena_set_allocated_common_para_conf(::control::PiffCommonParametersConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.common_para_conf_);
  }
  _impl_.common_para_conf_ = reinterpret_cast<::control::PiffCommonParametersConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control.LatPidConfig.common_para_conf)
}
inline ::control::PiffCommonParametersConfig* LatPidConfig::release_common_para_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::control::PiffCommonParametersConfig* released = _impl_.common_para_conf_;
  _impl_.common_para_conf_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::control::PiffCommonParametersConfig* LatPidConfig::unsafe_arena_release_common_para_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control.LatPidConfig.common_para_conf)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::control::PiffCommonParametersConfig* temp = _impl_.common_para_conf_;
  _impl_.common_para_conf_ = nullptr;
  return temp;
}
inline ::control::PiffCommonParametersConfig* LatPidConfig::_internal_mutable_common_para_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.common_para_conf_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::control::PiffCommonParametersConfig>(GetArena());
    _impl_.common_para_conf_ = reinterpret_cast<::control::PiffCommonParametersConfig*>(p);
  }
  return _impl_.common_para_conf_;
}
inline ::control::PiffCommonParametersConfig* LatPidConfig::mutable_common_para_conf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::control::PiffCommonParametersConfig* _msg = _internal_mutable_common_para_conf();
  // @@protoc_insertion_point(field_mutable:control.LatPidConfig.common_para_conf)
  return _msg;
}
inline void LatPidConfig::set_allocated_common_para_conf(::control::PiffCommonParametersConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.common_para_conf_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.common_para_conf_ = reinterpret_cast<::control::PiffCommonParametersConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:control.LatPidConfig.common_para_conf)
}

// required .control.PiffControllerContentConfig controller_content_conf = 2;
inline bool LatPidConfig::has_controller_content_conf() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.controller_content_conf_ != nullptr);
  return value;
}
inline void LatPidConfig::clear_controller_content_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.controller_content_conf_ != nullptr) _impl_.controller_content_conf_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::control::PiffControllerContentConfig& LatPidConfig::_internal_controller_content_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::control::PiffControllerContentConfig* p = _impl_.controller_content_conf_;
  return p != nullptr ? *p : reinterpret_cast<const ::control::PiffControllerContentConfig&>(::control::_PiffControllerContentConfig_default_instance_);
}
inline const ::control::PiffControllerContentConfig& LatPidConfig::controller_content_conf() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.LatPidConfig.controller_content_conf)
  return _internal_controller_content_conf();
}
inline void LatPidConfig::unsafe_arena_set_allocated_controller_content_conf(::control::PiffControllerContentConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.controller_content_conf_);
  }
  _impl_.controller_content_conf_ = reinterpret_cast<::control::PiffControllerContentConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control.LatPidConfig.controller_content_conf)
}
inline ::control::PiffControllerContentConfig* LatPidConfig::release_controller_content_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::control::PiffControllerContentConfig* released = _impl_.controller_content_conf_;
  _impl_.controller_content_conf_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::control::PiffControllerContentConfig* LatPidConfig::unsafe_arena_release_controller_content_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control.LatPidConfig.controller_content_conf)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::control::PiffControllerContentConfig* temp = _impl_.controller_content_conf_;
  _impl_.controller_content_conf_ = nullptr;
  return temp;
}
inline ::control::PiffControllerContentConfig* LatPidConfig::_internal_mutable_controller_content_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.controller_content_conf_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::control::PiffControllerContentConfig>(GetArena());
    _impl_.controller_content_conf_ = reinterpret_cast<::control::PiffControllerContentConfig*>(p);
  }
  return _impl_.controller_content_conf_;
}
inline ::control::PiffControllerContentConfig* LatPidConfig::mutable_controller_content_conf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::control::PiffControllerContentConfig* _msg = _internal_mutable_controller_content_conf();
  // @@protoc_insertion_point(field_mutable:control.LatPidConfig.controller_content_conf)
  return _msg;
}
inline void LatPidConfig::set_allocated_controller_content_conf(::control::PiffControllerContentConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.controller_content_conf_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.controller_content_conf_ = reinterpret_cast<::control::PiffControllerContentConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:control.LatPidConfig.controller_content_conf)
}

// repeated .control.PiffParameters piff_paras = 3;
inline int LatPidConfig::_internal_piff_paras_size() const {
  return _internal_piff_paras().size();
}
inline int LatPidConfig::piff_paras_size() const {
  return _internal_piff_paras_size();
}
inline void LatPidConfig::clear_piff_paras() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.piff_paras_.Clear();
}
inline ::control::PiffParameters* LatPidConfig::mutable_piff_paras(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:control.LatPidConfig.piff_paras)
  return _internal_mutable_piff_paras()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::control::PiffParameters>* LatPidConfig::mutable_piff_paras()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:control.LatPidConfig.piff_paras)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_piff_paras();
}
inline const ::control::PiffParameters& LatPidConfig::piff_paras(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.LatPidConfig.piff_paras)
  return _internal_piff_paras().Get(index);
}
inline ::control::PiffParameters* LatPidConfig::add_piff_paras() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::control::PiffParameters* _add = _internal_mutable_piff_paras()->Add();
  // @@protoc_insertion_point(field_add:control.LatPidConfig.piff_paras)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::control::PiffParameters>& LatPidConfig::piff_paras() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:control.LatPidConfig.piff_paras)
  return _internal_piff_paras();
}
inline const ::google::protobuf::RepeatedPtrField<::control::PiffParameters>&
LatPidConfig::_internal_piff_paras() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.piff_paras_;
}
inline ::google::protobuf::RepeatedPtrField<::control::PiffParameters>*
LatPidConfig::_internal_mutable_piff_paras() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.piff_paras_;
}

// required .control.PiffMeanFilterConfig mean_filter_conf = 4;
inline bool LatPidConfig::has_mean_filter_conf() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.mean_filter_conf_ != nullptr);
  return value;
}
inline void LatPidConfig::clear_mean_filter_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mean_filter_conf_ != nullptr) _impl_.mean_filter_conf_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::control::PiffMeanFilterConfig& LatPidConfig::_internal_mean_filter_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::control::PiffMeanFilterConfig* p = _impl_.mean_filter_conf_;
  return p != nullptr ? *p : reinterpret_cast<const ::control::PiffMeanFilterConfig&>(::control::_PiffMeanFilterConfig_default_instance_);
}
inline const ::control::PiffMeanFilterConfig& LatPidConfig::mean_filter_conf() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.LatPidConfig.mean_filter_conf)
  return _internal_mean_filter_conf();
}
inline void LatPidConfig::unsafe_arena_set_allocated_mean_filter_conf(::control::PiffMeanFilterConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.mean_filter_conf_);
  }
  _impl_.mean_filter_conf_ = reinterpret_cast<::control::PiffMeanFilterConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control.LatPidConfig.mean_filter_conf)
}
inline ::control::PiffMeanFilterConfig* LatPidConfig::release_mean_filter_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::control::PiffMeanFilterConfig* released = _impl_.mean_filter_conf_;
  _impl_.mean_filter_conf_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::control::PiffMeanFilterConfig* LatPidConfig::unsafe_arena_release_mean_filter_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control.LatPidConfig.mean_filter_conf)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::control::PiffMeanFilterConfig* temp = _impl_.mean_filter_conf_;
  _impl_.mean_filter_conf_ = nullptr;
  return temp;
}
inline ::control::PiffMeanFilterConfig* LatPidConfig::_internal_mutable_mean_filter_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mean_filter_conf_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::control::PiffMeanFilterConfig>(GetArena());
    _impl_.mean_filter_conf_ = reinterpret_cast<::control::PiffMeanFilterConfig*>(p);
  }
  return _impl_.mean_filter_conf_;
}
inline ::control::PiffMeanFilterConfig* LatPidConfig::mutable_mean_filter_conf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::control::PiffMeanFilterConfig* _msg = _internal_mutable_mean_filter_conf();
  // @@protoc_insertion_point(field_mutable:control.LatPidConfig.mean_filter_conf)
  return _msg;
}
inline void LatPidConfig::set_allocated_mean_filter_conf(::control::PiffMeanFilterConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.mean_filter_conf_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.mean_filter_conf_ = reinterpret_cast<::control::PiffMeanFilterConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:control.LatPidConfig.mean_filter_conf)
}

// required .control.PiffTrackingDifferentiatorConfig tracking_differentiator_conf = 5;
inline bool LatPidConfig::has_tracking_differentiator_conf() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tracking_differentiator_conf_ != nullptr);
  return value;
}
inline void LatPidConfig::clear_tracking_differentiator_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tracking_differentiator_conf_ != nullptr) _impl_.tracking_differentiator_conf_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::control::PiffTrackingDifferentiatorConfig& LatPidConfig::_internal_tracking_differentiator_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::control::PiffTrackingDifferentiatorConfig* p = _impl_.tracking_differentiator_conf_;
  return p != nullptr ? *p : reinterpret_cast<const ::control::PiffTrackingDifferentiatorConfig&>(::control::_PiffTrackingDifferentiatorConfig_default_instance_);
}
inline const ::control::PiffTrackingDifferentiatorConfig& LatPidConfig::tracking_differentiator_conf() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.LatPidConfig.tracking_differentiator_conf)
  return _internal_tracking_differentiator_conf();
}
inline void LatPidConfig::unsafe_arena_set_allocated_tracking_differentiator_conf(::control::PiffTrackingDifferentiatorConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tracking_differentiator_conf_);
  }
  _impl_.tracking_differentiator_conf_ = reinterpret_cast<::control::PiffTrackingDifferentiatorConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control.LatPidConfig.tracking_differentiator_conf)
}
inline ::control::PiffTrackingDifferentiatorConfig* LatPidConfig::release_tracking_differentiator_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::control::PiffTrackingDifferentiatorConfig* released = _impl_.tracking_differentiator_conf_;
  _impl_.tracking_differentiator_conf_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::control::PiffTrackingDifferentiatorConfig* LatPidConfig::unsafe_arena_release_tracking_differentiator_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control.LatPidConfig.tracking_differentiator_conf)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::control::PiffTrackingDifferentiatorConfig* temp = _impl_.tracking_differentiator_conf_;
  _impl_.tracking_differentiator_conf_ = nullptr;
  return temp;
}
inline ::control::PiffTrackingDifferentiatorConfig* LatPidConfig::_internal_mutable_tracking_differentiator_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tracking_differentiator_conf_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::control::PiffTrackingDifferentiatorConfig>(GetArena());
    _impl_.tracking_differentiator_conf_ = reinterpret_cast<::control::PiffTrackingDifferentiatorConfig*>(p);
  }
  return _impl_.tracking_differentiator_conf_;
}
inline ::control::PiffTrackingDifferentiatorConfig* LatPidConfig::mutable_tracking_differentiator_conf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::control::PiffTrackingDifferentiatorConfig* _msg = _internal_mutable_tracking_differentiator_conf();
  // @@protoc_insertion_point(field_mutable:control.LatPidConfig.tracking_differentiator_conf)
  return _msg;
}
inline void LatPidConfig::set_allocated_tracking_differentiator_conf(::control::PiffTrackingDifferentiatorConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.tracking_differentiator_conf_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.tracking_differentiator_conf_ = reinterpret_cast<::control::PiffTrackingDifferentiatorConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:control.LatPidConfig.tracking_differentiator_conf)
}

// required .control.PiffDataTransformConfig data_transform_conf = 6;
inline bool LatPidConfig::has_data_transform_conf() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.data_transform_conf_ != nullptr);
  return value;
}
inline void LatPidConfig::clear_data_transform_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.data_transform_conf_ != nullptr) _impl_.data_transform_conf_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::control::PiffDataTransformConfig& LatPidConfig::_internal_data_transform_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::control::PiffDataTransformConfig* p = _impl_.data_transform_conf_;
  return p != nullptr ? *p : reinterpret_cast<const ::control::PiffDataTransformConfig&>(::control::_PiffDataTransformConfig_default_instance_);
}
inline const ::control::PiffDataTransformConfig& LatPidConfig::data_transform_conf() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.LatPidConfig.data_transform_conf)
  return _internal_data_transform_conf();
}
inline void LatPidConfig::unsafe_arena_set_allocated_data_transform_conf(::control::PiffDataTransformConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.data_transform_conf_);
  }
  _impl_.data_transform_conf_ = reinterpret_cast<::control::PiffDataTransformConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control.LatPidConfig.data_transform_conf)
}
inline ::control::PiffDataTransformConfig* LatPidConfig::release_data_transform_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::control::PiffDataTransformConfig* released = _impl_.data_transform_conf_;
  _impl_.data_transform_conf_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::control::PiffDataTransformConfig* LatPidConfig::unsafe_arena_release_data_transform_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control.LatPidConfig.data_transform_conf)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::control::PiffDataTransformConfig* temp = _impl_.data_transform_conf_;
  _impl_.data_transform_conf_ = nullptr;
  return temp;
}
inline ::control::PiffDataTransformConfig* LatPidConfig::_internal_mutable_data_transform_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.data_transform_conf_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::control::PiffDataTransformConfig>(GetArena());
    _impl_.data_transform_conf_ = reinterpret_cast<::control::PiffDataTransformConfig*>(p);
  }
  return _impl_.data_transform_conf_;
}
inline ::control::PiffDataTransformConfig* LatPidConfig::mutable_data_transform_conf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::control::PiffDataTransformConfig* _msg = _internal_mutable_data_transform_conf();
  // @@protoc_insertion_point(field_mutable:control.LatPidConfig.data_transform_conf)
  return _msg;
}
inline void LatPidConfig::set_allocated_data_transform_conf(::control::PiffDataTransformConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.data_transform_conf_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.data_transform_conf_ = reinterpret_cast<::control::PiffDataTransformConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:control.LatPidConfig.data_transform_conf)
}

// required .control.PiffPostProcessConfig post_process_conf = 7;
inline bool LatPidConfig::has_post_process_conf() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.post_process_conf_ != nullptr);
  return value;
}
inline void LatPidConfig::clear_post_process_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.post_process_conf_ != nullptr) _impl_.post_process_conf_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const ::control::PiffPostProcessConfig& LatPidConfig::_internal_post_process_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::control::PiffPostProcessConfig* p = _impl_.post_process_conf_;
  return p != nullptr ? *p : reinterpret_cast<const ::control::PiffPostProcessConfig&>(::control::_PiffPostProcessConfig_default_instance_);
}
inline const ::control::PiffPostProcessConfig& LatPidConfig::post_process_conf() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.LatPidConfig.post_process_conf)
  return _internal_post_process_conf();
}
inline void LatPidConfig::unsafe_arena_set_allocated_post_process_conf(::control::PiffPostProcessConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.post_process_conf_);
  }
  _impl_.post_process_conf_ = reinterpret_cast<::control::PiffPostProcessConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control.LatPidConfig.post_process_conf)
}
inline ::control::PiffPostProcessConfig* LatPidConfig::release_post_process_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::control::PiffPostProcessConfig* released = _impl_.post_process_conf_;
  _impl_.post_process_conf_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::control::PiffPostProcessConfig* LatPidConfig::unsafe_arena_release_post_process_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control.LatPidConfig.post_process_conf)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::control::PiffPostProcessConfig* temp = _impl_.post_process_conf_;
  _impl_.post_process_conf_ = nullptr;
  return temp;
}
inline ::control::PiffPostProcessConfig* LatPidConfig::_internal_mutable_post_process_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.post_process_conf_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::control::PiffPostProcessConfig>(GetArena());
    _impl_.post_process_conf_ = reinterpret_cast<::control::PiffPostProcessConfig*>(p);
  }
  return _impl_.post_process_conf_;
}
inline ::control::PiffPostProcessConfig* LatPidConfig::mutable_post_process_conf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::control::PiffPostProcessConfig* _msg = _internal_mutable_post_process_conf();
  // @@protoc_insertion_point(field_mutable:control.LatPidConfig.post_process_conf)
  return _msg;
}
inline void LatPidConfig::set_allocated_post_process_conf(::control::PiffPostProcessConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.post_process_conf_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.post_process_conf_ = reinterpret_cast<::control::PiffPostProcessConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:control.LatPidConfig.post_process_conf)
}

// required .control.PiffCoeffientGainConfig coeffient_gain_conf = 8;
inline bool LatPidConfig::has_coeffient_gain_conf() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.coeffient_gain_conf_ != nullptr);
  return value;
}
inline void LatPidConfig::clear_coeffient_gain_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.coeffient_gain_conf_ != nullptr) _impl_.coeffient_gain_conf_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const ::control::PiffCoeffientGainConfig& LatPidConfig::_internal_coeffient_gain_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::control::PiffCoeffientGainConfig* p = _impl_.coeffient_gain_conf_;
  return p != nullptr ? *p : reinterpret_cast<const ::control::PiffCoeffientGainConfig&>(::control::_PiffCoeffientGainConfig_default_instance_);
}
inline const ::control::PiffCoeffientGainConfig& LatPidConfig::coeffient_gain_conf() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.LatPidConfig.coeffient_gain_conf)
  return _internal_coeffient_gain_conf();
}
inline void LatPidConfig::unsafe_arena_set_allocated_coeffient_gain_conf(::control::PiffCoeffientGainConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.coeffient_gain_conf_);
  }
  _impl_.coeffient_gain_conf_ = reinterpret_cast<::control::PiffCoeffientGainConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control.LatPidConfig.coeffient_gain_conf)
}
inline ::control::PiffCoeffientGainConfig* LatPidConfig::release_coeffient_gain_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::control::PiffCoeffientGainConfig* released = _impl_.coeffient_gain_conf_;
  _impl_.coeffient_gain_conf_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::control::PiffCoeffientGainConfig* LatPidConfig::unsafe_arena_release_coeffient_gain_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control.LatPidConfig.coeffient_gain_conf)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::control::PiffCoeffientGainConfig* temp = _impl_.coeffient_gain_conf_;
  _impl_.coeffient_gain_conf_ = nullptr;
  return temp;
}
inline ::control::PiffCoeffientGainConfig* LatPidConfig::_internal_mutable_coeffient_gain_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.coeffient_gain_conf_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::control::PiffCoeffientGainConfig>(GetArena());
    _impl_.coeffient_gain_conf_ = reinterpret_cast<::control::PiffCoeffientGainConfig*>(p);
  }
  return _impl_.coeffient_gain_conf_;
}
inline ::control::PiffCoeffientGainConfig* LatPidConfig::mutable_coeffient_gain_conf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::control::PiffCoeffientGainConfig* _msg = _internal_mutable_coeffient_gain_conf();
  // @@protoc_insertion_point(field_mutable:control.LatPidConfig.coeffient_gain_conf)
  return _msg;
}
inline void LatPidConfig::set_allocated_coeffient_gain_conf(::control::PiffCoeffientGainConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.coeffient_gain_conf_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.coeffient_gain_conf_ = reinterpret_cast<::control::PiffCoeffientGainConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:control.LatPidConfig.coeffient_gain_conf)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace control


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto_2epb_2eh
