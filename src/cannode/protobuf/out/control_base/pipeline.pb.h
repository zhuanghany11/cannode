// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: control_base/pipeline.proto
// Protobuf C++ Version: 5.28.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_control_5fbase_2fpipeline_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_control_5fbase_2fpipeline_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "control_base/plugin_declare_info.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_control_5fbase_2fpipeline_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_control_5fbase_2fpipeline_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_control_5fbase_2fpipeline_2eproto;
namespace control {
class ControlPipeline;
struct ControlPipelineDefaultTypeInternal;
extern ControlPipelineDefaultTypeInternal _ControlPipeline_default_instance_;
}  // namespace control
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace control {

// ===================================================================


// -------------------------------------------------------------------

class ControlPipeline final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.ControlPipeline) */ {
 public:
  inline ControlPipeline() : ControlPipeline(nullptr) {}
  ~ControlPipeline() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ControlPipeline(
      ::google::protobuf::internal::ConstantInitialized);

  inline ControlPipeline(const ControlPipeline& from) : ControlPipeline(nullptr, from) {}
  inline ControlPipeline(ControlPipeline&& from) noexcept
      : ControlPipeline(nullptr, std::move(from)) {}
  inline ControlPipeline& operator=(const ControlPipeline& from) {
    CopyFrom(from);
    return *this;
  }
  inline ControlPipeline& operator=(ControlPipeline&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ControlPipeline& default_instance() {
    return *internal_default_instance();
  }
  static inline const ControlPipeline* internal_default_instance() {
    return reinterpret_cast<const ControlPipeline*>(
        &_ControlPipeline_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ControlPipeline& a, ControlPipeline& b) { a.Swap(&b); }
  inline void Swap(ControlPipeline* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ControlPipeline* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ControlPipeline* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ControlPipeline>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ControlPipeline& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ControlPipeline& from) { ControlPipeline::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ControlPipeline* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.ControlPipeline"; }

 protected:
  explicit ControlPipeline(::google::protobuf::Arena* arena);
  ControlPipeline(::google::protobuf::Arena* arena, const ControlPipeline& from);
  ControlPipeline(::google::protobuf::Arena* arena, ControlPipeline&& from) noexcept
      : ControlPipeline(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kControllerFieldNumber = 1,
  };
  // repeated .control.PluginDeclareInfo controller = 1;
  int controller_size() const;
  private:
  int _internal_controller_size() const;

  public:
  void clear_controller() ;
  ::control::PluginDeclareInfo* mutable_controller(int index);
  ::google::protobuf::RepeatedPtrField<::control::PluginDeclareInfo>* mutable_controller();

  private:
  const ::google::protobuf::RepeatedPtrField<::control::PluginDeclareInfo>& _internal_controller() const;
  ::google::protobuf::RepeatedPtrField<::control::PluginDeclareInfo>* _internal_mutable_controller();
  public:
  const ::control::PluginDeclareInfo& controller(int index) const;
  ::control::PluginDeclareInfo* add_controller();
  const ::google::protobuf::RepeatedPtrField<::control::PluginDeclareInfo>& controller() const;
  // @@protoc_insertion_point(class_scope:control.ControlPipeline)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ControlPipeline_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ControlPipeline& from_msg);
    ::google::protobuf::RepeatedPtrField< ::control::PluginDeclareInfo > controller_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fbase_2fpipeline_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ControlPipeline

// repeated .control.PluginDeclareInfo controller = 1;
inline int ControlPipeline::_internal_controller_size() const {
  return _internal_controller().size();
}
inline int ControlPipeline::controller_size() const {
  return _internal_controller_size();
}
inline ::control::PluginDeclareInfo* ControlPipeline::mutable_controller(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:control.ControlPipeline.controller)
  return _internal_mutable_controller()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::control::PluginDeclareInfo>* ControlPipeline::mutable_controller()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:control.ControlPipeline.controller)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_controller();
}
inline const ::control::PluginDeclareInfo& ControlPipeline::controller(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.ControlPipeline.controller)
  return _internal_controller().Get(index);
}
inline ::control::PluginDeclareInfo* ControlPipeline::add_controller() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::control::PluginDeclareInfo* _add = _internal_mutable_controller()->Add();
  // @@protoc_insertion_point(field_add:control.ControlPipeline.controller)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::control::PluginDeclareInfo>& ControlPipeline::controller() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:control.ControlPipeline.controller)
  return _internal_controller();
}
inline const ::google::protobuf::RepeatedPtrField<::control::PluginDeclareInfo>&
ControlPipeline::_internal_controller() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.controller_;
}
inline ::google::protobuf::RepeatedPtrField<::control::PluginDeclareInfo>*
ControlPipeline::_internal_mutable_controller() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.controller_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace control


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_control_5fbase_2fpipeline_2eproto_2epb_2eh
