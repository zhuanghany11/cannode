// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: planning_msgs/planning_internal.proto
// Protobuf C++ Version: 5.28.0-dev

#include "planning_msgs/planning_internal.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace control {
namespace planning_internal {

inline constexpr SmootherDebug::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        is_smoothed_{false},
        type_{static_cast< ::control::planning_internal::SmootherDebug_SmootherType >(1)} {}

template <typename>
PROTOBUF_CONSTEXPR SmootherDebug::SmootherDebug(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SmootherDebugDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SmootherDebugDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SmootherDebugDefaultTypeInternal() {}
  union {
    SmootherDebug _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SmootherDebugDefaultTypeInternal _SmootherDebug_default_instance_;

inline constexpr ScenarioDebug::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        msg_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        scenario_plugin_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        stage_plugin_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        scenario_type_{0},
        stage_type_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ScenarioDebug::ScenarioDebug(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ScenarioDebugDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScenarioDebugDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScenarioDebugDefaultTypeInternal() {}
  union {
    ScenarioDebug _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScenarioDebugDefaultTypeInternal _ScenarioDebug_default_instance_;

inline constexpr STGraphDebug_STGraphSpeedConstraint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : t_{},
        lower_bound_{},
        upper_bound_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR STGraphDebug_STGraphSpeedConstraint::STGraphDebug_STGraphSpeedConstraint(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct STGraphDebug_STGraphSpeedConstraintDefaultTypeInternal {
  PROTOBUF_CONSTEXPR STGraphDebug_STGraphSpeedConstraintDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~STGraphDebug_STGraphSpeedConstraintDefaultTypeInternal() {}
  union {
    STGraphDebug_STGraphSpeedConstraint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 STGraphDebug_STGraphSpeedConstraintDefaultTypeInternal _STGraphDebug_STGraphSpeedConstraint_default_instance_;

inline constexpr STGraphDebug_STGraphKernelFollowRef::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : t_{},
        follow_line_s_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR STGraphDebug_STGraphKernelFollowRef::STGraphDebug_STGraphKernelFollowRef(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct STGraphDebug_STGraphKernelFollowRefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR STGraphDebug_STGraphKernelFollowRefDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~STGraphDebug_STGraphKernelFollowRefDefaultTypeInternal() {}
  union {
    STGraphDebug_STGraphKernelFollowRef _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 STGraphDebug_STGraphKernelFollowRefDefaultTypeInternal _STGraphDebug_STGraphKernelFollowRef_default_instance_;

inline constexpr STGraphDebug_STGraphKernelCuiseRef::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : t_{},
        cruise_line_s_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR STGraphDebug_STGraphKernelCuiseRef::STGraphDebug_STGraphKernelCuiseRef(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct STGraphDebug_STGraphKernelCuiseRefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR STGraphDebug_STGraphKernelCuiseRefDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~STGraphDebug_STGraphKernelCuiseRefDefaultTypeInternal() {}
  union {
    STGraphDebug_STGraphKernelCuiseRef _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 STGraphDebug_STGraphKernelCuiseRefDefaultTypeInternal _STGraphDebug_STGraphKernelCuiseRef_default_instance_;

inline constexpr ReferenceLineDebug::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        length_{0},
        cost_{0},
        minimum_boundary_{0},
        average_kappa_{0},
        average_dkappa_{0},
        kappa_rms_{0},
        dkappa_rms_{0},
        kappa_max_abs_{0},
        dkappa_max_abs_{0},
        average_offset_{0},
        is_change_lane_path_{false},
        is_drivable_{false},
        is_protected_{false},
        is_offroad_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ReferenceLineDebug::ReferenceLineDebug(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ReferenceLineDebugDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReferenceLineDebugDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReferenceLineDebugDefaultTypeInternal() {}
  union {
    ReferenceLineDebug _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReferenceLineDebugDefaultTypeInternal _ReferenceLineDebug_default_instance_;

inline constexpr LatticeStPixel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        s_{0},
        t_{0},
        r_{0u},
        g_{0u},
        b_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR LatticeStPixel::LatticeStPixel(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LatticeStPixelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LatticeStPixelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LatticeStPixelDefaultTypeInternal() {}
  union {
    LatticeStPixel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LatticeStPixelDefaultTypeInternal _LatticeStPixel_default_instance_;

inline constexpr CostComponents::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : cost_component_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CostComponents::CostComponents(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CostComponentsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CostComponentsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CostComponentsDefaultTypeInternal() {}
  union {
    CostComponents _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CostComponentsDefaultTypeInternal _CostComponents_default_instance_;

inline constexpr StGraphBoundaryDebug::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        point_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::control::planning_internal::StGraphBoundaryDebug_StBoundaryType >(1)} {}

template <typename>
PROTOBUF_CONSTEXPR StGraphBoundaryDebug::StGraphBoundaryDebug(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StGraphBoundaryDebugDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StGraphBoundaryDebugDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StGraphBoundaryDebugDefaultTypeInternal() {}
  union {
    StGraphBoundaryDebug _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StGraphBoundaryDebugDefaultTypeInternal _StGraphBoundaryDebug_default_instance_;

inline constexpr SpeedPlan::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        speed_point_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR SpeedPlan::SpeedPlan(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SpeedPlanDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpeedPlanDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpeedPlanDefaultTypeInternal() {}
  union {
    SpeedPlan _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpeedPlanDefaultTypeInternal _SpeedPlan_default_instance_;

inline constexpr SampleLayerDebug::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sl_point_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SampleLayerDebug::SampleLayerDebug(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SampleLayerDebugDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SampleLayerDebugDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SampleLayerDebugDefaultTypeInternal() {}
  union {
    SampleLayerDebug _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SampleLayerDebugDefaultTypeInternal _SampleLayerDebug_default_instance_;

inline constexpr SLFrameDebug::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sampled_s_{},
        static_obstacle_lower_bound_{},
        dynamic_obstacle_lower_bound_{},
        static_obstacle_upper_bound_{},
        dynamic_obstacle_upper_bound_{},
        map_lower_bound_{},
        map_upper_bound_{},
        sl_path_{},
        aggregated_boundary_s_{},
        aggregated_boundary_low_{},
        aggregated_boundary_high_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR SLFrameDebug::SLFrameDebug(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SLFrameDebugDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SLFrameDebugDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SLFrameDebugDefaultTypeInternal() {}
  union {
    SLFrameDebug _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SLFrameDebugDefaultTypeInternal _SLFrameDebug_default_instance_;

inline constexpr PullOverDebug::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        position_{nullptr},
        theta_{0},
        length_front_{0},
        length_back_{0},
        width_left_{0},
        width_right_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PullOverDebug::PullOverDebug(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PullOverDebugDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PullOverDebugDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PullOverDebugDefaultTypeInternal() {}
  union {
    PullOverDebug _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PullOverDebugDefaultTypeInternal _PullOverDebug_default_instance_;

inline constexpr LatticeStTraining::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pixel_{},
        annotation_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{0},
        num_s_grids_{0u},
        num_t_grids_{0u},
        s_resolution_{0},
        t_resolution_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LatticeStTraining::LatticeStTraining(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LatticeStTrainingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LatticeStTrainingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LatticeStTrainingDefaultTypeInternal() {}
  union {
    LatticeStTraining _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LatticeStTrainingDefaultTypeInternal _LatticeStTraining_default_instance_;

inline constexpr AutoTuningTrainingData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        teacher_component_{nullptr},
        student_component_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR AutoTuningTrainingData::AutoTuningTrainingData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AutoTuningTrainingDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AutoTuningTrainingDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AutoTuningTrainingDataDefaultTypeInternal() {}
  union {
    AutoTuningTrainingData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AutoTuningTrainingDataDefaultTypeInternal _AutoTuningTrainingData_default_instance_;

inline constexpr STGraphDebug::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        boundary_{},
        speed_limit_{},
        speed_profile_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        speed_constraint_{nullptr},
        kernel_cruise_ref_{nullptr},
        kernel_follow_ref_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR STGraphDebug::STGraphDebug(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct STGraphDebugDefaultTypeInternal {
  PROTOBUF_CONSTEXPR STGraphDebugDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~STGraphDebugDefaultTypeInternal() {}
  union {
    STGraphDebug _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 STGraphDebugDefaultTypeInternal _STGraphDebug_default_instance_;

inline constexpr HybridModelDebug::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        learning_model_output_fail_reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        evaluated_path_reference_{nullptr},
        learning_model_output_usage_ratio_{0},
        using_learning_model_output_{false} {}

template <typename>
PROTOBUF_CONSTEXPR HybridModelDebug::HybridModelDebug(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HybridModelDebugDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HybridModelDebugDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HybridModelDebugDefaultTypeInternal() {}
  union {
    HybridModelDebug _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HybridModelDebugDefaultTypeInternal _HybridModelDebug_default_instance_;

inline constexpr DpPolyGraphDebug::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sample_layer_{},
        min_cost_point_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DpPolyGraphDebug::DpPolyGraphDebug(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DpPolyGraphDebugDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DpPolyGraphDebugDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DpPolyGraphDebugDefaultTypeInternal() {}
  union {
    DpPolyGraphDebug _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DpPolyGraphDebugDefaultTypeInternal _DpPolyGraphDebug_default_instance_;

inline constexpr CloudReferenceLineResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : segment_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CloudReferenceLineResponse::CloudReferenceLineResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CloudReferenceLineResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CloudReferenceLineResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CloudReferenceLineResponseDefaultTypeInternal() {}
  union {
    CloudReferenceLineResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CloudReferenceLineResponseDefaultTypeInternal _CloudReferenceLineResponse_default_instance_;

inline constexpr Trajectories::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : trajectory_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Trajectories::Trajectories(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TrajectoriesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrajectoriesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrajectoriesDefaultTypeInternal() {}
  union {
    Trajectories _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrajectoriesDefaultTypeInternal _Trajectories_default_instance_;

inline constexpr DecisionTag::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        decider_tag_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        decision_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DecisionTag::DecisionTag(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DecisionTagDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DecisionTagDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DecisionTagDefaultTypeInternal() {}
  union {
    DecisionTag _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DecisionTagDefaultTypeInternal _DecisionTag_default_instance_;

inline constexpr ObstacleDebug::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        decision_tag_{},
        vertices_x_coords_{},
        vertices_y_coords_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR ObstacleDebug::ObstacleDebug(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ObstacleDebugDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ObstacleDebugDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ObstacleDebugDefaultTypeInternal() {}
  union {
    ObstacleDebug _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ObstacleDebugDefaultTypeInternal _ObstacleDebug_default_instance_;

inline constexpr OpenSpaceDebug::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        warm_start_dual_lambda_{},
        warm_start_dual_miu_{},
        optimized_dual_lambda_{},
        optimized_dual_miu_{},
        xy_boundary_{},
        obstacles_{},
        trajectories_{nullptr},
        warm_start_trajectory_{nullptr},
        smoothed_trajectory_{nullptr},
        roi_shift_point_{nullptr},
        end_point_{nullptr},
        partitioned_trajectories_{nullptr},
        chosen_trajectory_{nullptr},
        fallback_trajectory_{nullptr},
        trajectory_stitching_point_{nullptr},
        future_collision_point_{nullptr},
        origin_point_{nullptr},
        time_latency_{0},
        origin_heading_rad_{0},
        is_fallback_trajectory_{false} {}

template <typename>
PROTOBUF_CONSTEXPR OpenSpaceDebug::OpenSpaceDebug(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OpenSpaceDebugDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OpenSpaceDebugDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OpenSpaceDebugDefaultTypeInternal() {}
  union {
    OpenSpaceDebug _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OpenSpaceDebugDefaultTypeInternal _OpenSpaceDebug_default_instance_;

inline constexpr PlanningData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        path_{},
        speed_plan_{},
        st_graph_{},
        sl_frame_{},
        obstacle_{},
        reference_line_{},
        adc_position_{nullptr},
        chassis_{nullptr},
        init_point_{nullptr},
        prediction_header_{nullptr},
        dp_poly_graph_{nullptr},
        lattice_st_image_{nullptr},
        auto_tuning_training_data_{nullptr},
        scenario_{nullptr},
        open_space_{nullptr},
        smoother_{nullptr},
        pull_over_{nullptr},
        hybrid_model_{nullptr},
        front_clear_distance_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PlanningData::PlanningData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlanningDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlanningDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlanningDataDefaultTypeInternal() {}
  union {
    PlanningData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlanningDataDefaultTypeInternal _PlanningData_default_instance_;

inline constexpr Debug::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        planning_data_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Debug::Debug(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DebugDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DebugDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DebugDefaultTypeInternal() {}
  union {
    Debug _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DebugDefaultTypeInternal _Debug_default_instance_;
}  // namespace planning_internal
}  // namespace control
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_planning_5fmsgs_2fplanning_5finternal_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_planning_5fmsgs_2fplanning_5finternal_2eproto = nullptr;
const ::uint32_t
    TableStruct_planning_5fmsgs_2fplanning_5finternal_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::Debug, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::Debug, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::Debug, _impl_.planning_data_),
        0,
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::SpeedPlan, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::SpeedPlan, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::SpeedPlan, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::SpeedPlan, _impl_.speed_point_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::StGraphBoundaryDebug, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::StGraphBoundaryDebug, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::StGraphBoundaryDebug, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::StGraphBoundaryDebug, _impl_.point_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::StGraphBoundaryDebug, _impl_.type_),
        0,
        ~0u,
        1,
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::SLFrameDebug, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::SLFrameDebug, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::SLFrameDebug, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::SLFrameDebug, _impl_.sampled_s_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::SLFrameDebug, _impl_.static_obstacle_lower_bound_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::SLFrameDebug, _impl_.dynamic_obstacle_lower_bound_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::SLFrameDebug, _impl_.static_obstacle_upper_bound_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::SLFrameDebug, _impl_.dynamic_obstacle_upper_bound_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::SLFrameDebug, _impl_.map_lower_bound_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::SLFrameDebug, _impl_.map_upper_bound_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::SLFrameDebug, _impl_.sl_path_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::SLFrameDebug, _impl_.aggregated_boundary_s_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::SLFrameDebug, _impl_.aggregated_boundary_low_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::SLFrameDebug, _impl_.aggregated_boundary_high_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::STGraphDebug_STGraphSpeedConstraint, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::STGraphDebug_STGraphSpeedConstraint, _impl_.t_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::STGraphDebug_STGraphSpeedConstraint, _impl_.lower_bound_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::STGraphDebug_STGraphSpeedConstraint, _impl_.upper_bound_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::STGraphDebug_STGraphKernelCuiseRef, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::STGraphDebug_STGraphKernelCuiseRef, _impl_.t_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::STGraphDebug_STGraphKernelCuiseRef, _impl_.cruise_line_s_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::STGraphDebug_STGraphKernelFollowRef, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::STGraphDebug_STGraphKernelFollowRef, _impl_.t_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::STGraphDebug_STGraphKernelFollowRef, _impl_.follow_line_s_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::STGraphDebug, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::STGraphDebug, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::STGraphDebug, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::STGraphDebug, _impl_.boundary_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::STGraphDebug, _impl_.speed_limit_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::STGraphDebug, _impl_.speed_profile_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::STGraphDebug, _impl_.speed_constraint_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::STGraphDebug, _impl_.kernel_cruise_ref_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::STGraphDebug, _impl_.kernel_follow_ref_),
        0,
        ~0u,
        ~0u,
        ~0u,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::DecisionTag, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::DecisionTag, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::DecisionTag, _impl_.decider_tag_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::DecisionTag, _impl_.decision_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::ObstacleDebug, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::ObstacleDebug, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::ObstacleDebug, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::ObstacleDebug, _impl_.decision_tag_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::ObstacleDebug, _impl_.vertices_x_coords_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::ObstacleDebug, _impl_.vertices_y_coords_),
        0,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::ReferenceLineDebug, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::ReferenceLineDebug, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::ReferenceLineDebug, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::ReferenceLineDebug, _impl_.length_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::ReferenceLineDebug, _impl_.cost_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::ReferenceLineDebug, _impl_.is_change_lane_path_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::ReferenceLineDebug, _impl_.is_drivable_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::ReferenceLineDebug, _impl_.is_protected_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::ReferenceLineDebug, _impl_.is_offroad_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::ReferenceLineDebug, _impl_.minimum_boundary_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::ReferenceLineDebug, _impl_.average_kappa_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::ReferenceLineDebug, _impl_.average_dkappa_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::ReferenceLineDebug, _impl_.kappa_rms_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::ReferenceLineDebug, _impl_.dkappa_rms_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::ReferenceLineDebug, _impl_.kappa_max_abs_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::ReferenceLineDebug, _impl_.dkappa_max_abs_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::ReferenceLineDebug, _impl_.average_offset_),
        0,
        1,
        2,
        11,
        12,
        13,
        14,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::SampleLayerDebug, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::SampleLayerDebug, _impl_.sl_point_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::DpPolyGraphDebug, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::DpPolyGraphDebug, _impl_.sample_layer_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::DpPolyGraphDebug, _impl_.min_cost_point_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::ScenarioDebug, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::ScenarioDebug, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::ScenarioDebug, _impl_.scenario_type_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::ScenarioDebug, _impl_.stage_type_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::ScenarioDebug, _impl_.msg_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::ScenarioDebug, _impl_.scenario_plugin_type_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::ScenarioDebug, _impl_.stage_plugin_type_),
        3,
        4,
        0,
        1,
        2,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::Trajectories, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::Trajectories, _impl_.trajectory_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::OpenSpaceDebug, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::OpenSpaceDebug, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::OpenSpaceDebug, _impl_.trajectories_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::OpenSpaceDebug, _impl_.warm_start_trajectory_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::OpenSpaceDebug, _impl_.smoothed_trajectory_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::OpenSpaceDebug, _impl_.warm_start_dual_lambda_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::OpenSpaceDebug, _impl_.warm_start_dual_miu_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::OpenSpaceDebug, _impl_.optimized_dual_lambda_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::OpenSpaceDebug, _impl_.optimized_dual_miu_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::OpenSpaceDebug, _impl_.xy_boundary_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::OpenSpaceDebug, _impl_.obstacles_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::OpenSpaceDebug, _impl_.roi_shift_point_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::OpenSpaceDebug, _impl_.end_point_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::OpenSpaceDebug, _impl_.partitioned_trajectories_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::OpenSpaceDebug, _impl_.chosen_trajectory_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::OpenSpaceDebug, _impl_.is_fallback_trajectory_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::OpenSpaceDebug, _impl_.fallback_trajectory_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::OpenSpaceDebug, _impl_.trajectory_stitching_point_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::OpenSpaceDebug, _impl_.future_collision_point_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::OpenSpaceDebug, _impl_.time_latency_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::OpenSpaceDebug, _impl_.origin_point_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::OpenSpaceDebug, _impl_.origin_heading_rad_),
        0,
        1,
        2,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        3,
        4,
        5,
        6,
        13,
        7,
        8,
        9,
        11,
        10,
        12,
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::SmootherDebug, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::SmootherDebug, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::SmootherDebug, _impl_.is_smoothed_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::SmootherDebug, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::SmootherDebug, _impl_.reason_),
        1,
        2,
        0,
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::PullOverDebug, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::PullOverDebug, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::PullOverDebug, _impl_.position_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::PullOverDebug, _impl_.theta_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::PullOverDebug, _impl_.length_front_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::PullOverDebug, _impl_.length_back_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::PullOverDebug, _impl_.width_left_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::PullOverDebug, _impl_.width_right_),
        0,
        1,
        2,
        3,
        4,
        5,
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::PlanningData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::PlanningData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::PlanningData, _impl_.adc_position_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::PlanningData, _impl_.chassis_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::PlanningData, _impl_.init_point_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::PlanningData, _impl_.path_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::PlanningData, _impl_.speed_plan_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::PlanningData, _impl_.st_graph_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::PlanningData, _impl_.sl_frame_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::PlanningData, _impl_.prediction_header_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::PlanningData, _impl_.obstacle_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::PlanningData, _impl_.reference_line_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::PlanningData, _impl_.dp_poly_graph_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::PlanningData, _impl_.lattice_st_image_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::PlanningData, _impl_.auto_tuning_training_data_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::PlanningData, _impl_.front_clear_distance_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::PlanningData, _impl_.scenario_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::PlanningData, _impl_.open_space_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::PlanningData, _impl_.smoother_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::PlanningData, _impl_.pull_over_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::PlanningData, _impl_.hybrid_model_),
        0,
        1,
        2,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        3,
        ~0u,
        ~0u,
        4,
        5,
        6,
        12,
        7,
        8,
        9,
        10,
        11,
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::LatticeStPixel, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::LatticeStPixel, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::LatticeStPixel, _impl_.s_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::LatticeStPixel, _impl_.t_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::LatticeStPixel, _impl_.r_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::LatticeStPixel, _impl_.g_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::LatticeStPixel, _impl_.b_),
        0,
        1,
        2,
        3,
        4,
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::LatticeStTraining, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::LatticeStTraining, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::LatticeStTraining, _impl_.pixel_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::LatticeStTraining, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::LatticeStTraining, _impl_.annotation_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::LatticeStTraining, _impl_.num_s_grids_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::LatticeStTraining, _impl_.num_t_grids_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::LatticeStTraining, _impl_.s_resolution_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::LatticeStTraining, _impl_.t_resolution_),
        ~0u,
        1,
        0,
        2,
        3,
        4,
        5,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::CostComponents, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::CostComponents, _impl_.cost_component_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::AutoTuningTrainingData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::AutoTuningTrainingData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::AutoTuningTrainingData, _impl_.teacher_component_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::AutoTuningTrainingData, _impl_.student_component_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::CloudReferenceLineResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::CloudReferenceLineResponse, _impl_.segment_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::HybridModelDebug, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::HybridModelDebug, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::HybridModelDebug, _impl_.using_learning_model_output_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::HybridModelDebug, _impl_.learning_model_output_usage_ratio_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::HybridModelDebug, _impl_.learning_model_output_fail_reason_),
        PROTOBUF_FIELD_OFFSET(::control::planning_internal::HybridModelDebug, _impl_.evaluated_path_reference_),
        3,
        2,
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 9, -1, sizeof(::control::planning_internal::Debug)},
        {10, 20, -1, sizeof(::control::planning_internal::SpeedPlan)},
        {22, 33, -1, sizeof(::control::planning_internal::StGraphBoundaryDebug)},
        {36, 56, -1, sizeof(::control::planning_internal::SLFrameDebug)},
        {68, -1, -1, sizeof(::control::planning_internal::STGraphDebug_STGraphSpeedConstraint)},
        {79, -1, -1, sizeof(::control::planning_internal::STGraphDebug_STGraphKernelCuiseRef)},
        {89, -1, -1, sizeof(::control::planning_internal::STGraphDebug_STGraphKernelFollowRef)},
        {99, 114, -1, sizeof(::control::planning_internal::STGraphDebug)},
        {121, 131, -1, sizeof(::control::planning_internal::DecisionTag)},
        {133, 145, -1, sizeof(::control::planning_internal::ObstacleDebug)},
        {149, 172, -1, sizeof(::control::planning_internal::ReferenceLineDebug)},
        {187, -1, -1, sizeof(::control::planning_internal::SampleLayerDebug)},
        {196, -1, -1, sizeof(::control::planning_internal::DpPolyGraphDebug)},
        {206, 219, -1, sizeof(::control::planning_internal::ScenarioDebug)},
        {224, -1, -1, sizeof(::control::planning_internal::Trajectories)},
        {233, 261, -1, sizeof(::control::planning_internal::OpenSpaceDebug)},
        {281, 292, -1, sizeof(::control::planning_internal::SmootherDebug)},
        {295, 309, -1, sizeof(::control::planning_internal::PullOverDebug)},
        {315, 342, -1, sizeof(::control::planning_internal::PlanningData)},
        {361, 374, -1, sizeof(::control::planning_internal::LatticeStPixel)},
        {379, 394, -1, sizeof(::control::planning_internal::LatticeStTraining)},
        {401, -1, -1, sizeof(::control::planning_internal::CostComponents)},
        {410, 420, -1, sizeof(::control::planning_internal::AutoTuningTrainingData)},
        {422, -1, -1, sizeof(::control::planning_internal::CloudReferenceLineResponse)},
        {431, 443, -1, sizeof(::control::planning_internal::HybridModelDebug)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::control::planning_internal::_Debug_default_instance_._instance,
    &::control::planning_internal::_SpeedPlan_default_instance_._instance,
    &::control::planning_internal::_StGraphBoundaryDebug_default_instance_._instance,
    &::control::planning_internal::_SLFrameDebug_default_instance_._instance,
    &::control::planning_internal::_STGraphDebug_STGraphSpeedConstraint_default_instance_._instance,
    &::control::planning_internal::_STGraphDebug_STGraphKernelCuiseRef_default_instance_._instance,
    &::control::planning_internal::_STGraphDebug_STGraphKernelFollowRef_default_instance_._instance,
    &::control::planning_internal::_STGraphDebug_default_instance_._instance,
    &::control::planning_internal::_DecisionTag_default_instance_._instance,
    &::control::planning_internal::_ObstacleDebug_default_instance_._instance,
    &::control::planning_internal::_ReferenceLineDebug_default_instance_._instance,
    &::control::planning_internal::_SampleLayerDebug_default_instance_._instance,
    &::control::planning_internal::_DpPolyGraphDebug_default_instance_._instance,
    &::control::planning_internal::_ScenarioDebug_default_instance_._instance,
    &::control::planning_internal::_Trajectories_default_instance_._instance,
    &::control::planning_internal::_OpenSpaceDebug_default_instance_._instance,
    &::control::planning_internal::_SmootherDebug_default_instance_._instance,
    &::control::planning_internal::_PullOverDebug_default_instance_._instance,
    &::control::planning_internal::_PlanningData_default_instance_._instance,
    &::control::planning_internal::_LatticeStPixel_default_instance_._instance,
    &::control::planning_internal::_LatticeStTraining_default_instance_._instance,
    &::control::planning_internal::_CostComponents_default_instance_._instance,
    &::control::planning_internal::_AutoTuningTrainingData_default_instance_._instance,
    &::control::planning_internal::_CloudReferenceLineResponse_default_instance_._instance,
    &::control::planning_internal::_HybridModelDebug_default_instance_._instance,
};
const char descriptor_table_protodef_planning_5fmsgs_2fplanning_5finternal_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n%planning_msgs/planning_internal.proto\022"
    "\031control.planning_internal\032%common_msgs/"
    "basic_msgs/geometry.proto\032#common_msgs/b"
    "asic_msgs/header.proto\032&common_msgs/basi"
    "c_msgs/pnc_point.proto\032&common_msgs/chas"
    "sis_msgs/chassis.proto\032$localization_msg"
    "s/localization.proto\032\034planning_msgs/deci"
    "sion.proto\"G\n\005Debug\022>\n\rplanning_data\030\002 \001"
    "(\0132\'.control.planning_internal.PlanningD"
    "ata\"J\n\tSpeedPlan\022\014\n\004name\030\001 \001(\t\022/\n\013speed_"
    "point\030\002 \003(\0132\032.control.common.SpeedPoint\""
    "\210\003\n\024StGraphBoundaryDebug\022\014\n\004name\030\001 \001(\t\022)"
    "\n\005point\030\002 \003(\0132\032.control.common.SpeedPoin"
    "t\022L\n\004type\030\003 \001(\0162>.control.planning_inter"
    "nal.StGraphBoundaryDebug.StBoundaryType\""
    "\350\001\n\016StBoundaryType\022\034\n\030ST_BOUNDARY_TYPE_U"
    "NKNOWN\020\001\022\031\n\025ST_BOUNDARY_TYPE_STOP\020\002\022\033\n\027S"
    "T_BOUNDARY_TYPE_FOLLOW\020\003\022\032\n\026ST_BOUNDARY_"
    "TYPE_YIELD\020\004\022\035\n\031ST_BOUNDARY_TYPE_OVERTAK"
    "E\020\005\022\037\n\033ST_BOUNDARY_TYPE_KEEP_CLEAR\020\006\022$\n "
    "ST_BOUNDARY_TYPE_DRIVABLE_REGION\020\007\"\203\003\n\014S"
    "LFrameDebug\022\014\n\004name\030\001 \001(\t\022\021\n\tsampled_s\030\002"
    " \003(\001\022#\n\033static_obstacle_lower_bound\030\003 \003("
    "\001\022$\n\034dynamic_obstacle_lower_bound\030\004 \003(\001\022"
    "#\n\033static_obstacle_upper_bound\030\005 \003(\001\022$\n\034"
    "dynamic_obstacle_upper_bound\030\006 \003(\001\022\027\n\017ma"
    "p_lower_bound\030\007 \003(\001\022\027\n\017map_upper_bound\030\010"
    " \003(\001\022(\n\007sl_path\030\t \003(\0132\027.control.common.S"
    "LPoint\022\035\n\025aggregated_boundary_s\030\n \003(\001\022\037\n"
    "\027aggregated_boundary_low\030\013 \003(\001\022 \n\030aggreg"
    "ated_boundary_high\030\014 \003(\001\"\230\005\n\014STGraphDebu"
    "g\022\014\n\004name\030\001 \001(\t\022A\n\010boundary\030\002 \003(\0132/.cont"
    "rol.planning_internal.StGraphBoundaryDeb"
    "ug\022/\n\013speed_limit\030\003 \003(\0132\032.control.common"
    ".SpeedPoint\0221\n\rspeed_profile\030\004 \003(\0132\032.con"
    "trol.common.SpeedPoint\022X\n\020speed_constrai"
    "nt\030\005 \001(\0132>.control.planning_internal.STG"
    "raphDebug.STGraphSpeedConstraint\022X\n\021kern"
    "el_cruise_ref\030\006 \001(\0132=.control.planning_i"
    "nternal.STGraphDebug.STGraphKernelCuiseR"
    "ef\022Y\n\021kernel_follow_ref\030\007 \001(\0132>.control."
    "planning_internal.STGraphDebug.STGraphKe"
    "rnelFollowRef\032M\n\026STGraphSpeedConstraint\022"
    "\t\n\001t\030\001 \003(\001\022\023\n\013lower_bound\030\002 \003(\001\022\023\n\013upper"
    "_bound\030\003 \003(\001\0329\n\025STGraphKernelCuiseRef\022\t\n"
    "\001t\030\001 \003(\001\022\025\n\rcruise_line_s\030\002 \003(\001\032:\n\026STGra"
    "phKernelFollowRef\022\t\n\001t\030\001 \003(\001\022\025\n\rfollow_l"
    "ine_s\030\002 \003(\001\"Z\n\013DecisionTag\022\023\n\013decider_ta"
    "g\030\001 \001(\t\0226\n\010decision\030\002 \001(\0132$.control.plan"
    "ning.ObjectDecisionType\"\217\001\n\rObstacleDebu"
    "g\022\n\n\002id\030\001 \001(\t\022<\n\014decision_tag\030\003 \003(\0132&.co"
    "ntrol.planning_internal.DecisionTag\022\031\n\021v"
    "ertices_x_coords\030\004 \003(\001\022\031\n\021vertices_y_coo"
    "rds\030\005 \003(\001\"\331\002\n\022ReferenceLineDebug\022\n\n\002id\030\001"
    " \001(\t\022\016\n\006length\030\002 \001(\001\022\014\n\004cost\030\003 \001(\001\022\033\n\023is"
    "_change_lane_path\030\004 \001(\010\022\023\n\013is_drivable\030\005"
    " \001(\010\022\024\n\014is_protected\030\006 \001(\010\022\022\n\nis_offroad"
    "\030\007 \001(\010\022\030\n\020minimum_boundary\030\010 \001(\001\022\031\n\raver"
    "age_kappa\030\t \001(\001B\002\030\001\022\032\n\016average_dkappa\030\n "
    "\001(\001B\002\030\001\022\021\n\tkappa_rms\030\013 \001(\001\022\022\n\ndkappa_rms"
    "\030\014 \001(\001\022\025\n\rkappa_max_abs\030\r \001(\001\022\026\n\016dkappa_"
    "max_abs\030\016 \001(\001\022\026\n\016average_offset\030\017 \001(\001\"=\n"
    "\020SampleLayerDebug\022)\n\010sl_point\030\001 \003(\0132\027.co"
    "ntrol.common.SLPoint\"\206\001\n\020DpPolyGraphDebu"
    "g\022A\n\014sample_layer\030\001 \003(\0132+.control.planni"
    "ng_internal.SampleLayerDebug\022/\n\016min_cost"
    "_point\030\002 \003(\0132\027.control.common.SLPoint\"\210\001"
    "\n\rScenarioDebug\022\031\n\rscenario_type\030\001 \001(\005B\002"
    "\030\001\022\026\n\nstage_type\030\002 \001(\005B\002\030\001\022\013\n\003msg\030\003 \001(\t\022"
    "\034\n\024scenario_plugin_type\030\004 \001(\t\022\031\n\021stage_p"
    "lugin_type\030\005 \001(\t\">\n\014Trajectories\022.\n\ntraj"
    "ectory\030\001 \003(\0132\032.control.common.Trajectory"
    "\"\341\007\n\016OpenSpaceDebug\022=\n\014trajectories\030\001 \001("
    "\0132\'.control.planning_internal.Trajectori"
    "es\022<\n\025warm_start_trajectory\030\002 \001(\0132\035.cont"
    "rol.common.VehicleMotion\022:\n\023smoothed_tra"
    "jectory\030\003 \001(\0132\035.control.common.VehicleMo"
    "tion\022\036\n\026warm_start_dual_lambda\030\004 \003(\001\022\033\n\023"
    "warm_start_dual_miu\030\005 \003(\001\022\035\n\025optimized_d"
    "ual_lambda\030\006 \003(\001\022\032\n\022optimized_dual_miu\030\007"
    " \003(\001\022\023\n\013xy_boundary\030\010 \003(\001\022;\n\tobstacles\030\t"
    " \003(\0132(.control.planning_internal.Obstacl"
    "eDebug\0228\n\017roi_shift_point\030\n \001(\0132\037.contro"
    "l.common.TrajectoryPoint\0222\n\tend_point\030\013 "
    "\001(\0132\037.control.common.TrajectoryPoint\022I\n\030"
    "partitioned_trajectories\030\014 \001(\0132\'.control"
    ".planning_internal.Trajectories\022B\n\021chose"
    "n_trajectory\030\r \001(\0132\'.control.planning_in"
    "ternal.Trajectories\022\036\n\026is_fallback_traje"
    "ctory\030\016 \001(\010\022D\n\023fallback_trajectory\030\017 \001(\013"
    "2\'.control.planning_internal.Trajectorie"
    "s\022C\n\032trajectory_stitching_point\030\020 \001(\0132\037."
    "control.common.TrajectoryPoint\022\?\n\026future"
    "_collision_point\030\021 \001(\0132\037.control.common."
    "TrajectoryPoint\022\027\n\014time_latency\030\022 \001(\001:\0010"
    "\022.\n\014origin_point\030\023 \001(\0132\030.control.common."
    "PointENU\022\032\n\022origin_heading_rad\030\024 \001(\001\"\304\001\n"
    "\rSmootherDebug\022\023\n\013is_smoothed\030\001 \001(\010\022R\n\004t"
    "ype\030\002 \001(\01625.control.planning_internal.Sm"
    "ootherDebug.SmootherType:\rSMOOTHER_NONE\022"
    "\016\n\006reason\030\003 \001(\t\":\n\014SmootherType\022\021\n\rSMOOT"
    "HER_NONE\020\001\022\027\n\023SMOOTHER_CLOSE_STOP\020\002\"\236\001\n\r"
    "PullOverDebug\022*\n\010position\030\001 \001(\0132\030.contro"
    "l.common.PointENU\022\r\n\005theta\030\002 \001(\001\022\024\n\014leng"
    "th_front\030\003 \001(\001\022\023\n\013length_back\030\004 \001(\001\022\022\n\nw"
    "idth_left\030\005 \001(\001\022\023\n\013width_right\030\006 \001(\001\"\360\010\n"
    "\014PlanningData\022@\n\014adc_position\030\007 \001(\0132*.co"
    "ntrol.localization.LocalizationEstimate\022"
    "(\n\007chassis\030\010 \001(\0132\027.control.canbus.Chassi"
    "s\0223\n\ninit_point\030\n \001(\0132\037.control.common.T"
    "rajectoryPoint\022\"\n\004path\030\006 \003(\0132\024.control.c"
    "ommon.Path\0228\n\nspeed_plan\030\r \003(\0132$.control"
    ".planning_internal.SpeedPlan\0229\n\010st_graph"
    "\030\016 \003(\0132\'.control.planning_internal.STGra"
    "phDebug\0229\n\010sl_frame\030\017 \003(\0132\'.control.plan"
    "ning_internal.SLFrameDebug\0221\n\021prediction"
    "_header\030\020 \001(\0132\026.control.common.Header\022:\n"
    "\010obstacle\030\022 \003(\0132(.control.planning_inter"
    "nal.ObstacleDebug\022E\n\016reference_line\030\023 \003("
    "\0132-.control.planning_internal.ReferenceL"
    "ineDebug\022B\n\rdp_poly_graph\030\024 \001(\0132+.contro"
    "l.planning_internal.DpPolyGraphDebug\022F\n\020"
    "lattice_st_image\030\025 \001(\0132,.control.plannin"
    "g_internal.LatticeStTraining\022T\n\031auto_tun"
    "ing_training_data\030\027 \001(\01321.control.planni"
    "ng_internal.AutoTuningTrainingData\022\034\n\024fr"
    "ont_clear_distance\030\030 \001(\001\022:\n\010scenario\030\032 \001"
    "(\0132(.control.planning_internal.ScenarioD"
    "ebug\022=\n\nopen_space\030\033 \001(\0132).control.plann"
    "ing_internal.OpenSpaceDebug\022:\n\010smoother\030"
    "\034 \001(\0132(.control.planning_internal.Smooth"
    "erDebug\022;\n\tpull_over\030\035 \001(\0132(.control.pla"
    "nning_internal.PullOverDebug\022A\n\014hybrid_m"
    "odel\030\036 \001(\0132+.control.planning_internal.H"
    "ybridModelDebug\"G\n\016LatticeStPixel\022\t\n\001s\030\001"
    " \001(\005\022\t\n\001t\030\002 \001(\005\022\t\n\001r\030\003 \001(\r\022\t\n\001g\030\004 \001(\r\022\t\n"
    "\001b\030\005 \001(\r\"\312\001\n\021LatticeStTraining\0228\n\005pixel\030"
    "\001 \003(\0132).control.planning_internal.Lattic"
    "eStPixel\022\021\n\ttimestamp\030\002 \001(\001\022\022\n\nannotatio"
    "n\030\003 \001(\t\022\023\n\013num_s_grids\030\004 \001(\r\022\023\n\013num_t_gr"
    "ids\030\005 \001(\r\022\024\n\014s_resolution\030\006 \001(\001\022\024\n\014t_res"
    "olution\030\007 \001(\001\"(\n\016CostComponents\022\026\n\016cost_"
    "component\030\001 \003(\001\"\244\001\n\026AutoTuningTrainingDa"
    "ta\022D\n\021teacher_component\030\001 \001(\0132).control."
    "planning_internal.CostComponents\022D\n\021stud"
    "ent_component\030\002 \001(\0132).control.planning_i"
    "nternal.CostComponents\"C\n\032CloudReference"
    "LineResponse\022%\n\007segment\030\001 \003(\0132\024.control."
    "common.Path\"\314\001\n\020HybridModelDebug\022*\n\033usin"
    "g_learning_model_output\030\001 \001(\010:\005false\022)\n!"
    "learning_model_output_usage_ratio\030\002 \001(\001\022"
    ")\n!learning_model_output_fail_reason\030\003 \001"
    "(\t\0226\n\030evaluated_path_reference\030\004 \001(\0132\024.c"
    "ontrol.common.Path"
};
static const ::_pbi::DescriptorTable* const descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto_deps[6] =
    {
        &::descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fgeometry_2eproto,
        &::descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fheader_2eproto,
        &::descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fpnc_5fpoint_2eproto,
        &::descriptor_table_common_5fmsgs_2fchassis_5fmsgs_2fchassis_2eproto,
        &::descriptor_table_localization_5fmsgs_2flocalization_2eproto,
        &::descriptor_table_planning_5fmsgs_2fdecision_2eproto,
};
static ::absl::once_flag descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto = {
    false,
    false,
    6138,
    descriptor_table_protodef_planning_5fmsgs_2fplanning_5finternal_2eproto,
    "planning_msgs/planning_internal.proto",
    &descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto_once,
    descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto_deps,
    6,
    25,
    schemas,
    file_default_instances,
    TableStruct_planning_5fmsgs_2fplanning_5finternal_2eproto::offsets,
    file_level_enum_descriptors_planning_5fmsgs_2fplanning_5finternal_2eproto,
    file_level_service_descriptors_planning_5fmsgs_2fplanning_5finternal_2eproto,
};
namespace control {
namespace planning_internal {
const ::google::protobuf::EnumDescriptor* StGraphBoundaryDebug_StBoundaryType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto);
  return file_level_enum_descriptors_planning_5fmsgs_2fplanning_5finternal_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t StGraphBoundaryDebug_StBoundaryType_internal_data_[] = {
    458753u, 0u, };
bool StGraphBoundaryDebug_StBoundaryType_IsValid(int value) {
  return 1 <= value && value <= 7;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr StGraphBoundaryDebug_StBoundaryType StGraphBoundaryDebug::ST_BOUNDARY_TYPE_UNKNOWN;
constexpr StGraphBoundaryDebug_StBoundaryType StGraphBoundaryDebug::ST_BOUNDARY_TYPE_STOP;
constexpr StGraphBoundaryDebug_StBoundaryType StGraphBoundaryDebug::ST_BOUNDARY_TYPE_FOLLOW;
constexpr StGraphBoundaryDebug_StBoundaryType StGraphBoundaryDebug::ST_BOUNDARY_TYPE_YIELD;
constexpr StGraphBoundaryDebug_StBoundaryType StGraphBoundaryDebug::ST_BOUNDARY_TYPE_OVERTAKE;
constexpr StGraphBoundaryDebug_StBoundaryType StGraphBoundaryDebug::ST_BOUNDARY_TYPE_KEEP_CLEAR;
constexpr StGraphBoundaryDebug_StBoundaryType StGraphBoundaryDebug::ST_BOUNDARY_TYPE_DRIVABLE_REGION;
constexpr StGraphBoundaryDebug_StBoundaryType StGraphBoundaryDebug::StBoundaryType_MIN;
constexpr StGraphBoundaryDebug_StBoundaryType StGraphBoundaryDebug::StBoundaryType_MAX;
constexpr int StGraphBoundaryDebug::StBoundaryType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* SmootherDebug_SmootherType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto);
  return file_level_enum_descriptors_planning_5fmsgs_2fplanning_5finternal_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t SmootherDebug_SmootherType_internal_data_[] = {
    131073u, 0u, };
bool SmootherDebug_SmootherType_IsValid(int value) {
  return 1 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr SmootherDebug_SmootherType SmootherDebug::SMOOTHER_NONE;
constexpr SmootherDebug_SmootherType SmootherDebug::SMOOTHER_CLOSE_STOP;
constexpr SmootherDebug_SmootherType SmootherDebug::SmootherType_MIN;
constexpr SmootherDebug_SmootherType SmootherDebug::SmootherType_MAX;
constexpr int SmootherDebug::SmootherType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class Debug::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Debug>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Debug, _impl_._has_bits_);
};

Debug::Debug(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.planning_internal.Debug)
}
inline PROTOBUF_NDEBUG_INLINE Debug::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::planning_internal::Debug& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Debug::Debug(
    ::google::protobuf::Arena* arena,
    const Debug& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Debug* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.planning_data_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::control::planning_internal::PlanningData>(
                              arena, *from._impl_.planning_data_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:control.planning_internal.Debug)
}
inline PROTOBUF_NDEBUG_INLINE Debug::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Debug::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.planning_data_ = {};
}
Debug::~Debug() {
  // @@protoc_insertion_point(destructor:control.planning_internal.Debug)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Debug::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.planning_data_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Debug::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Debug::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Debug>(),
            ::google::protobuf::Message::GetNewImpl<Debug>(),
            ::google::protobuf::Message::GetClearImpl<Debug>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<Debug>(),
                ::google::protobuf::Message::GetSerializeImpl<Debug>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Debug, _impl_._cached_size_),
            false,
        },
        &Debug::kDescriptorMethods,
        &descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Debug::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Debug::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Debug, _impl_._has_bits_),
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967293,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Debug_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::planning_internal::Debug>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .control.planning_internal.PlanningData planning_data = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Debug, _impl_.planning_data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .control.planning_internal.PlanningData planning_data = 2;
    {PROTOBUF_FIELD_OFFSET(Debug, _impl_.planning_data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::planning_internal::PlanningData>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Debug::Clear() {
// @@protoc_insertion_point(message_clear_start:control.planning_internal.Debug)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.planning_data_ != nullptr);
    _impl_.planning_data_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Debug::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.planning_internal.Debug)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .control.planning_internal.PlanningData planning_data = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.planning_data_, _impl_.planning_data_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.planning_internal.Debug)
  return target;
}

::size_t Debug::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.planning_internal.Debug)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional .control.planning_internal.PlanningData planning_data = 2;
    cached_has_bits = _impl_._has_bits_[0];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.planning_data_);
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void Debug::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Debug*>(&to_msg);
  auto& from = static_cast<const Debug&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:control.planning_internal.Debug)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.planning_data_ != nullptr);
    if (_this->_impl_.planning_data_ == nullptr) {
      _this->_impl_.planning_data_ =
          ::google::protobuf::Message::CopyConstruct<::control::planning_internal::PlanningData>(arena, *from._impl_.planning_data_);
    } else {
      _this->_impl_.planning_data_->MergeFrom(*from._impl_.planning_data_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Debug::CopyFrom(const Debug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.planning_internal.Debug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Debug::InternalSwap(Debug* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.planning_data_, other->_impl_.planning_data_);
}

::google::protobuf::Metadata Debug::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SpeedPlan::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SpeedPlan>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SpeedPlan, _impl_._has_bits_);
};

void SpeedPlan::clear_speed_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_point_.Clear();
}
SpeedPlan::SpeedPlan(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.planning_internal.SpeedPlan)
}
inline PROTOBUF_NDEBUG_INLINE SpeedPlan::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::planning_internal::SpeedPlan& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        speed_point_{visibility, arena, from.speed_point_},
        name_(arena, from.name_) {}

SpeedPlan::SpeedPlan(
    ::google::protobuf::Arena* arena,
    const SpeedPlan& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SpeedPlan* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:control.planning_internal.SpeedPlan)
}
inline PROTOBUF_NDEBUG_INLINE SpeedPlan::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        speed_point_{visibility, arena},
        name_(arena) {}

inline void SpeedPlan::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SpeedPlan::~SpeedPlan() {
  // @@protoc_insertion_point(destructor:control.planning_internal.SpeedPlan)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SpeedPlan::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SpeedPlan::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SpeedPlan::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SpeedPlan>(),
            ::google::protobuf::Message::GetNewImpl<SpeedPlan>(),
            ::google::protobuf::Message::GetClearImpl<SpeedPlan>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<SpeedPlan>(),
                ::google::protobuf::Message::GetSerializeImpl<SpeedPlan>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SpeedPlan, _impl_._cached_size_),
            false,
        },
        &SpeedPlan::kDescriptorMethods,
        &descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SpeedPlan::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 48, 2> SpeedPlan::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SpeedPlan, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SpeedPlan_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::planning_internal::SpeedPlan>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .control.common.SpeedPoint speed_point = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SpeedPlan, _impl_.speed_point_)}},
    // optional string name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SpeedPlan, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(SpeedPlan, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .control.common.SpeedPoint speed_point = 2;
    {PROTOBUF_FIELD_OFFSET(SpeedPlan, _impl_.speed_point_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::common::SpeedPoint>()},
  }}, {{
    "\43\4\0\0\0\0\0\0"
    "control.planning_internal.SpeedPlan"
    "name"
  }},
};

PROTOBUF_NOINLINE void SpeedPlan::Clear() {
// @@protoc_insertion_point(message_clear_start:control.planning_internal.SpeedPlan)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.speed_point_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SpeedPlan::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.planning_internal.SpeedPlan)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "control.planning_internal.SpeedPlan.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .control.common.SpeedPoint speed_point = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_speed_point_size());
       i < n; i++) {
    const auto& repfield = this->_internal_speed_point().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.planning_internal.SpeedPlan)
  return target;
}

::size_t SpeedPlan::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.planning_internal.SpeedPlan)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // repeated .control.common.SpeedPoint speed_point = 2;
     {
      total_size += 1UL * this->_internal_speed_point_size();
      for (const auto& msg : this->_internal_speed_point()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // optional string name = 1;
    cached_has_bits = _impl_._has_bits_[0];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void SpeedPlan::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SpeedPlan*>(&to_msg);
  auto& from = static_cast<const SpeedPlan&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.planning_internal.SpeedPlan)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_speed_point()->MergeFrom(
      from._internal_speed_point());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SpeedPlan::CopyFrom(const SpeedPlan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.planning_internal.SpeedPlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SpeedPlan::InternalSwap(SpeedPlan* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.speed_point_.InternalSwap(&other->_impl_.speed_point_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata SpeedPlan::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StGraphBoundaryDebug::_Internal {
 public:
  using HasBits =
      decltype(std::declval<StGraphBoundaryDebug>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StGraphBoundaryDebug, _impl_._has_bits_);
};

void StGraphBoundaryDebug::clear_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.point_.Clear();
}
StGraphBoundaryDebug::StGraphBoundaryDebug(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.planning_internal.StGraphBoundaryDebug)
}
inline PROTOBUF_NDEBUG_INLINE StGraphBoundaryDebug::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::planning_internal::StGraphBoundaryDebug& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        point_{visibility, arena, from.point_},
        name_(arena, from.name_) {}

StGraphBoundaryDebug::StGraphBoundaryDebug(
    ::google::protobuf::Arena* arena,
    const StGraphBoundaryDebug& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StGraphBoundaryDebug* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:control.planning_internal.StGraphBoundaryDebug)
}
inline PROTOBUF_NDEBUG_INLINE StGraphBoundaryDebug::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        point_{visibility, arena},
        name_(arena),
        type_{static_cast< ::control::planning_internal::StGraphBoundaryDebug_StBoundaryType >(1)} {}

inline void StGraphBoundaryDebug::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
StGraphBoundaryDebug::~StGraphBoundaryDebug() {
  // @@protoc_insertion_point(destructor:control.planning_internal.StGraphBoundaryDebug)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StGraphBoundaryDebug::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    StGraphBoundaryDebug::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &StGraphBoundaryDebug::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<StGraphBoundaryDebug>(),
            ::google::protobuf::Message::GetNewImpl<StGraphBoundaryDebug>(),
            ::google::protobuf::Message::GetClearImpl<StGraphBoundaryDebug>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<StGraphBoundaryDebug>(),
                ::google::protobuf::Message::GetSerializeImpl<StGraphBoundaryDebug>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(StGraphBoundaryDebug, _impl_._cached_size_),
            false,
        },
        &StGraphBoundaryDebug::kDescriptorMethods,
        &descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* StGraphBoundaryDebug::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 59, 2> StGraphBoundaryDebug::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StGraphBoundaryDebug, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StGraphBoundaryDebug_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::planning_internal::StGraphBoundaryDebug>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StGraphBoundaryDebug, _impl_.name_)}},
    // repeated .control.common.SpeedPoint point = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(StGraphBoundaryDebug, _impl_.point_)}},
    // optional .control.planning_internal.StGraphBoundaryDebug.StBoundaryType type = 3;
    {::_pbi::TcParser::FastEr1S1,
     {24, 1, 7, PROTOBUF_FIELD_OFFSET(StGraphBoundaryDebug, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(StGraphBoundaryDebug, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .control.common.SpeedPoint point = 2;
    {PROTOBUF_FIELD_OFFSET(StGraphBoundaryDebug, _impl_.point_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.planning_internal.StGraphBoundaryDebug.StBoundaryType type = 3;
    {PROTOBUF_FIELD_OFFSET(StGraphBoundaryDebug, _impl_.type_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::common::SpeedPoint>()},
    {1, 7},
  }}, {{
    "\56\4\0\0\0\0\0\0"
    "control.planning_internal.StGraphBoundaryDebug"
    "name"
  }},
};

PROTOBUF_NOINLINE void StGraphBoundaryDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:control.planning_internal.StGraphBoundaryDebug)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.point_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    _impl_.type_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* StGraphBoundaryDebug::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.planning_internal.StGraphBoundaryDebug)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "control.planning_internal.StGraphBoundaryDebug.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .control.common.SpeedPoint point = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_point_size());
       i < n; i++) {
    const auto& repfield = this->_internal_point().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional .control.planning_internal.StGraphBoundaryDebug.StBoundaryType type = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.planning_internal.StGraphBoundaryDebug)
  return target;
}

::size_t StGraphBoundaryDebug::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.planning_internal.StGraphBoundaryDebug)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // repeated .control.common.SpeedPoint point = 2;
     {
      total_size += 1UL * this->_internal_point_size();
      for (const auto& msg : this->_internal_point()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }
    // optional .control.planning_internal.StGraphBoundaryDebug.StBoundaryType type = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void StGraphBoundaryDebug::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StGraphBoundaryDebug*>(&to_msg);
  auto& from = static_cast<const StGraphBoundaryDebug&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.planning_internal.StGraphBoundaryDebug)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_point()->MergeFrom(
      from._internal_point());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StGraphBoundaryDebug::CopyFrom(const StGraphBoundaryDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.planning_internal.StGraphBoundaryDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StGraphBoundaryDebug::InternalSwap(StGraphBoundaryDebug* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.point_.InternalSwap(&other->_impl_.point_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata StGraphBoundaryDebug::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SLFrameDebug::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SLFrameDebug>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SLFrameDebug, _impl_._has_bits_);
};

void SLFrameDebug::clear_sl_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sl_path_.Clear();
}
SLFrameDebug::SLFrameDebug(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.planning_internal.SLFrameDebug)
}
inline PROTOBUF_NDEBUG_INLINE SLFrameDebug::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::planning_internal::SLFrameDebug& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        sampled_s_{visibility, arena, from.sampled_s_},
        static_obstacle_lower_bound_{visibility, arena, from.static_obstacle_lower_bound_},
        dynamic_obstacle_lower_bound_{visibility, arena, from.dynamic_obstacle_lower_bound_},
        static_obstacle_upper_bound_{visibility, arena, from.static_obstacle_upper_bound_},
        dynamic_obstacle_upper_bound_{visibility, arena, from.dynamic_obstacle_upper_bound_},
        map_lower_bound_{visibility, arena, from.map_lower_bound_},
        map_upper_bound_{visibility, arena, from.map_upper_bound_},
        sl_path_{visibility, arena, from.sl_path_},
        aggregated_boundary_s_{visibility, arena, from.aggregated_boundary_s_},
        aggregated_boundary_low_{visibility, arena, from.aggregated_boundary_low_},
        aggregated_boundary_high_{visibility, arena, from.aggregated_boundary_high_},
        name_(arena, from.name_) {}

SLFrameDebug::SLFrameDebug(
    ::google::protobuf::Arena* arena,
    const SLFrameDebug& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SLFrameDebug* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:control.planning_internal.SLFrameDebug)
}
inline PROTOBUF_NDEBUG_INLINE SLFrameDebug::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        sampled_s_{visibility, arena},
        static_obstacle_lower_bound_{visibility, arena},
        dynamic_obstacle_lower_bound_{visibility, arena},
        static_obstacle_upper_bound_{visibility, arena},
        dynamic_obstacle_upper_bound_{visibility, arena},
        map_lower_bound_{visibility, arena},
        map_upper_bound_{visibility, arena},
        sl_path_{visibility, arena},
        aggregated_boundary_s_{visibility, arena},
        aggregated_boundary_low_{visibility, arena},
        aggregated_boundary_high_{visibility, arena},
        name_(arena) {}

inline void SLFrameDebug::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SLFrameDebug::~SLFrameDebug() {
  // @@protoc_insertion_point(destructor:control.planning_internal.SLFrameDebug)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SLFrameDebug::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SLFrameDebug::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SLFrameDebug::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SLFrameDebug>(),
            ::google::protobuf::Message::GetNewImpl<SLFrameDebug>(),
            ::google::protobuf::Message::GetClearImpl<SLFrameDebug>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<SLFrameDebug>(),
                ::google::protobuf::Message::GetSerializeImpl<SLFrameDebug>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SLFrameDebug, _impl_._cached_size_),
            false,
        },
        &SLFrameDebug::kDescriptorMethods,
        &descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SLFrameDebug::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 1, 59, 2> SLFrameDebug::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SLFrameDebug, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SLFrameDebug_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::planning_internal::SLFrameDebug>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SLFrameDebug, _impl_.name_)}},
    // repeated double sampled_s = 2;
    {::_pbi::TcParser::FastF64R1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(SLFrameDebug, _impl_.sampled_s_)}},
    // repeated double static_obstacle_lower_bound = 3;
    {::_pbi::TcParser::FastF64R1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(SLFrameDebug, _impl_.static_obstacle_lower_bound_)}},
    // repeated double dynamic_obstacle_lower_bound = 4;
    {::_pbi::TcParser::FastF64R1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(SLFrameDebug, _impl_.dynamic_obstacle_lower_bound_)}},
    // repeated double static_obstacle_upper_bound = 5;
    {::_pbi::TcParser::FastF64R1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(SLFrameDebug, _impl_.static_obstacle_upper_bound_)}},
    // repeated double dynamic_obstacle_upper_bound = 6;
    {::_pbi::TcParser::FastF64R1,
     {49, 63, 0, PROTOBUF_FIELD_OFFSET(SLFrameDebug, _impl_.dynamic_obstacle_upper_bound_)}},
    // repeated double map_lower_bound = 7;
    {::_pbi::TcParser::FastF64R1,
     {57, 63, 0, PROTOBUF_FIELD_OFFSET(SLFrameDebug, _impl_.map_lower_bound_)}},
    // repeated double map_upper_bound = 8;
    {::_pbi::TcParser::FastF64R1,
     {65, 63, 0, PROTOBUF_FIELD_OFFSET(SLFrameDebug, _impl_.map_upper_bound_)}},
    // repeated .control.common.SLPoint sl_path = 9;
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(SLFrameDebug, _impl_.sl_path_)}},
    // repeated double aggregated_boundary_s = 10;
    {::_pbi::TcParser::FastF64R1,
     {81, 63, 0, PROTOBUF_FIELD_OFFSET(SLFrameDebug, _impl_.aggregated_boundary_s_)}},
    // repeated double aggregated_boundary_low = 11;
    {::_pbi::TcParser::FastF64R1,
     {89, 63, 0, PROTOBUF_FIELD_OFFSET(SLFrameDebug, _impl_.aggregated_boundary_low_)}},
    // repeated double aggregated_boundary_high = 12;
    {::_pbi::TcParser::FastF64R1,
     {97, 63, 0, PROTOBUF_FIELD_OFFSET(SLFrameDebug, _impl_.aggregated_boundary_high_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(SLFrameDebug, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated double sampled_s = 2;
    {PROTOBUF_FIELD_OFFSET(SLFrameDebug, _impl_.sampled_s_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kDouble)},
    // repeated double static_obstacle_lower_bound = 3;
    {PROTOBUF_FIELD_OFFSET(SLFrameDebug, _impl_.static_obstacle_lower_bound_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kDouble)},
    // repeated double dynamic_obstacle_lower_bound = 4;
    {PROTOBUF_FIELD_OFFSET(SLFrameDebug, _impl_.dynamic_obstacle_lower_bound_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kDouble)},
    // repeated double static_obstacle_upper_bound = 5;
    {PROTOBUF_FIELD_OFFSET(SLFrameDebug, _impl_.static_obstacle_upper_bound_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kDouble)},
    // repeated double dynamic_obstacle_upper_bound = 6;
    {PROTOBUF_FIELD_OFFSET(SLFrameDebug, _impl_.dynamic_obstacle_upper_bound_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kDouble)},
    // repeated double map_lower_bound = 7;
    {PROTOBUF_FIELD_OFFSET(SLFrameDebug, _impl_.map_lower_bound_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kDouble)},
    // repeated double map_upper_bound = 8;
    {PROTOBUF_FIELD_OFFSET(SLFrameDebug, _impl_.map_upper_bound_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kDouble)},
    // repeated .control.common.SLPoint sl_path = 9;
    {PROTOBUF_FIELD_OFFSET(SLFrameDebug, _impl_.sl_path_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated double aggregated_boundary_s = 10;
    {PROTOBUF_FIELD_OFFSET(SLFrameDebug, _impl_.aggregated_boundary_s_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kDouble)},
    // repeated double aggregated_boundary_low = 11;
    {PROTOBUF_FIELD_OFFSET(SLFrameDebug, _impl_.aggregated_boundary_low_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kDouble)},
    // repeated double aggregated_boundary_high = 12;
    {PROTOBUF_FIELD_OFFSET(SLFrameDebug, _impl_.aggregated_boundary_high_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kDouble)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::common::SLPoint>()},
  }}, {{
    "\46\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "control.planning_internal.SLFrameDebug"
    "name"
  }},
};

PROTOBUF_NOINLINE void SLFrameDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:control.planning_internal.SLFrameDebug)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sampled_s_.Clear();
  _impl_.static_obstacle_lower_bound_.Clear();
  _impl_.dynamic_obstacle_lower_bound_.Clear();
  _impl_.static_obstacle_upper_bound_.Clear();
  _impl_.dynamic_obstacle_upper_bound_.Clear();
  _impl_.map_lower_bound_.Clear();
  _impl_.map_upper_bound_.Clear();
  _impl_.sl_path_.Clear();
  _impl_.aggregated_boundary_s_.Clear();
  _impl_.aggregated_boundary_low_.Clear();
  _impl_.aggregated_boundary_high_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SLFrameDebug::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.planning_internal.SLFrameDebug)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "control.planning_internal.SLFrameDebug.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated double sampled_s = 2;
  for (int i = 0, n = this->_internal_sampled_s_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_sampled_s().Get(i), target);
  }

  // repeated double static_obstacle_lower_bound = 3;
  for (int i = 0, n = this->_internal_static_obstacle_lower_bound_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_static_obstacle_lower_bound().Get(i), target);
  }

  // repeated double dynamic_obstacle_lower_bound = 4;
  for (int i = 0, n = this->_internal_dynamic_obstacle_lower_bound_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_dynamic_obstacle_lower_bound().Get(i), target);
  }

  // repeated double static_obstacle_upper_bound = 5;
  for (int i = 0, n = this->_internal_static_obstacle_upper_bound_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        5, this->_internal_static_obstacle_upper_bound().Get(i), target);
  }

  // repeated double dynamic_obstacle_upper_bound = 6;
  for (int i = 0, n = this->_internal_dynamic_obstacle_upper_bound_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        6, this->_internal_dynamic_obstacle_upper_bound().Get(i), target);
  }

  // repeated double map_lower_bound = 7;
  for (int i = 0, n = this->_internal_map_lower_bound_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        7, this->_internal_map_lower_bound().Get(i), target);
  }

  // repeated double map_upper_bound = 8;
  for (int i = 0, n = this->_internal_map_upper_bound_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        8, this->_internal_map_upper_bound().Get(i), target);
  }

  // repeated .control.common.SLPoint sl_path = 9;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_sl_path_size());
       i < n; i++) {
    const auto& repfield = this->_internal_sl_path().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            9, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated double aggregated_boundary_s = 10;
  for (int i = 0, n = this->_internal_aggregated_boundary_s_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        10, this->_internal_aggregated_boundary_s().Get(i), target);
  }

  // repeated double aggregated_boundary_low = 11;
  for (int i = 0, n = this->_internal_aggregated_boundary_low_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        11, this->_internal_aggregated_boundary_low().Get(i), target);
  }

  // repeated double aggregated_boundary_high = 12;
  for (int i = 0, n = this->_internal_aggregated_boundary_high_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        12, this->_internal_aggregated_boundary_high().Get(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.planning_internal.SLFrameDebug)
  return target;
}

::size_t SLFrameDebug::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.planning_internal.SLFrameDebug)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // repeated double sampled_s = 2;
     {
      std::size_t data_size = std::size_t{8} *
          ::_pbi::FromIntSize(this->_internal_sampled_s_size())
      ;
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this->_internal_sampled_s_size());
      ;
      total_size += tag_size + data_size;
    }
    // repeated double static_obstacle_lower_bound = 3;
     {
      std::size_t data_size = std::size_t{8} *
          ::_pbi::FromIntSize(this->_internal_static_obstacle_lower_bound_size())
      ;
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this->_internal_static_obstacle_lower_bound_size());
      ;
      total_size += tag_size + data_size;
    }
    // repeated double dynamic_obstacle_lower_bound = 4;
     {
      std::size_t data_size = std::size_t{8} *
          ::_pbi::FromIntSize(this->_internal_dynamic_obstacle_lower_bound_size())
      ;
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this->_internal_dynamic_obstacle_lower_bound_size());
      ;
      total_size += tag_size + data_size;
    }
    // repeated double static_obstacle_upper_bound = 5;
     {
      std::size_t data_size = std::size_t{8} *
          ::_pbi::FromIntSize(this->_internal_static_obstacle_upper_bound_size())
      ;
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this->_internal_static_obstacle_upper_bound_size());
      ;
      total_size += tag_size + data_size;
    }
    // repeated double dynamic_obstacle_upper_bound = 6;
     {
      std::size_t data_size = std::size_t{8} *
          ::_pbi::FromIntSize(this->_internal_dynamic_obstacle_upper_bound_size())
      ;
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this->_internal_dynamic_obstacle_upper_bound_size());
      ;
      total_size += tag_size + data_size;
    }
    // repeated double map_lower_bound = 7;
     {
      std::size_t data_size = std::size_t{8} *
          ::_pbi::FromIntSize(this->_internal_map_lower_bound_size())
      ;
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this->_internal_map_lower_bound_size());
      ;
      total_size += tag_size + data_size;
    }
    // repeated double map_upper_bound = 8;
     {
      std::size_t data_size = std::size_t{8} *
          ::_pbi::FromIntSize(this->_internal_map_upper_bound_size())
      ;
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this->_internal_map_upper_bound_size());
      ;
      total_size += tag_size + data_size;
    }
    // repeated .control.common.SLPoint sl_path = 9;
     {
      total_size += 1UL * this->_internal_sl_path_size();
      for (const auto& msg : this->_internal_sl_path()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated double aggregated_boundary_s = 10;
     {
      std::size_t data_size = std::size_t{8} *
          ::_pbi::FromIntSize(this->_internal_aggregated_boundary_s_size())
      ;
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this->_internal_aggregated_boundary_s_size());
      ;
      total_size += tag_size + data_size;
    }
    // repeated double aggregated_boundary_low = 11;
     {
      std::size_t data_size = std::size_t{8} *
          ::_pbi::FromIntSize(this->_internal_aggregated_boundary_low_size())
      ;
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this->_internal_aggregated_boundary_low_size());
      ;
      total_size += tag_size + data_size;
    }
    // repeated double aggregated_boundary_high = 12;
     {
      std::size_t data_size = std::size_t{8} *
          ::_pbi::FromIntSize(this->_internal_aggregated_boundary_high_size())
      ;
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this->_internal_aggregated_boundary_high_size());
      ;
      total_size += tag_size + data_size;
    }
  }
   {
    // optional string name = 1;
    cached_has_bits = _impl_._has_bits_[0];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void SLFrameDebug::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SLFrameDebug*>(&to_msg);
  auto& from = static_cast<const SLFrameDebug&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.planning_internal.SLFrameDebug)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_sampled_s()->MergeFrom(from._internal_sampled_s());
  _this->_internal_mutable_static_obstacle_lower_bound()->MergeFrom(from._internal_static_obstacle_lower_bound());
  _this->_internal_mutable_dynamic_obstacle_lower_bound()->MergeFrom(from._internal_dynamic_obstacle_lower_bound());
  _this->_internal_mutable_static_obstacle_upper_bound()->MergeFrom(from._internal_static_obstacle_upper_bound());
  _this->_internal_mutable_dynamic_obstacle_upper_bound()->MergeFrom(from._internal_dynamic_obstacle_upper_bound());
  _this->_internal_mutable_map_lower_bound()->MergeFrom(from._internal_map_lower_bound());
  _this->_internal_mutable_map_upper_bound()->MergeFrom(from._internal_map_upper_bound());
  _this->_internal_mutable_sl_path()->MergeFrom(
      from._internal_sl_path());
  _this->_internal_mutable_aggregated_boundary_s()->MergeFrom(from._internal_aggregated_boundary_s());
  _this->_internal_mutable_aggregated_boundary_low()->MergeFrom(from._internal_aggregated_boundary_low());
  _this->_internal_mutable_aggregated_boundary_high()->MergeFrom(from._internal_aggregated_boundary_high());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SLFrameDebug::CopyFrom(const SLFrameDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.planning_internal.SLFrameDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SLFrameDebug::InternalSwap(SLFrameDebug* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.sampled_s_.InternalSwap(&other->_impl_.sampled_s_);
  _impl_.static_obstacle_lower_bound_.InternalSwap(&other->_impl_.static_obstacle_lower_bound_);
  _impl_.dynamic_obstacle_lower_bound_.InternalSwap(&other->_impl_.dynamic_obstacle_lower_bound_);
  _impl_.static_obstacle_upper_bound_.InternalSwap(&other->_impl_.static_obstacle_upper_bound_);
  _impl_.dynamic_obstacle_upper_bound_.InternalSwap(&other->_impl_.dynamic_obstacle_upper_bound_);
  _impl_.map_lower_bound_.InternalSwap(&other->_impl_.map_lower_bound_);
  _impl_.map_upper_bound_.InternalSwap(&other->_impl_.map_upper_bound_);
  _impl_.sl_path_.InternalSwap(&other->_impl_.sl_path_);
  _impl_.aggregated_boundary_s_.InternalSwap(&other->_impl_.aggregated_boundary_s_);
  _impl_.aggregated_boundary_low_.InternalSwap(&other->_impl_.aggregated_boundary_low_);
  _impl_.aggregated_boundary_high_.InternalSwap(&other->_impl_.aggregated_boundary_high_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata SLFrameDebug::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class STGraphDebug_STGraphSpeedConstraint::_Internal {
 public:
};

STGraphDebug_STGraphSpeedConstraint::STGraphDebug_STGraphSpeedConstraint(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.planning_internal.STGraphDebug.STGraphSpeedConstraint)
}
inline PROTOBUF_NDEBUG_INLINE STGraphDebug_STGraphSpeedConstraint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::planning_internal::STGraphDebug_STGraphSpeedConstraint& from_msg)
      : t_{visibility, arena, from.t_},
        lower_bound_{visibility, arena, from.lower_bound_},
        upper_bound_{visibility, arena, from.upper_bound_},
        _cached_size_{0} {}

STGraphDebug_STGraphSpeedConstraint::STGraphDebug_STGraphSpeedConstraint(
    ::google::protobuf::Arena* arena,
    const STGraphDebug_STGraphSpeedConstraint& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  STGraphDebug_STGraphSpeedConstraint* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:control.planning_internal.STGraphDebug.STGraphSpeedConstraint)
}
inline PROTOBUF_NDEBUG_INLINE STGraphDebug_STGraphSpeedConstraint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : t_{visibility, arena},
        lower_bound_{visibility, arena},
        upper_bound_{visibility, arena},
        _cached_size_{0} {}

inline void STGraphDebug_STGraphSpeedConstraint::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
STGraphDebug_STGraphSpeedConstraint::~STGraphDebug_STGraphSpeedConstraint() {
  // @@protoc_insertion_point(destructor:control.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void STGraphDebug_STGraphSpeedConstraint::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    STGraphDebug_STGraphSpeedConstraint::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &STGraphDebug_STGraphSpeedConstraint::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<STGraphDebug_STGraphSpeedConstraint>(),
            ::google::protobuf::Message::GetNewImpl<STGraphDebug_STGraphSpeedConstraint>(),
            ::google::protobuf::Message::GetClearImpl<STGraphDebug_STGraphSpeedConstraint>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<STGraphDebug_STGraphSpeedConstraint>(),
                ::google::protobuf::Message::GetSerializeImpl<STGraphDebug_STGraphSpeedConstraint>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(STGraphDebug_STGraphSpeedConstraint, _impl_._cached_size_),
            false,
        },
        &STGraphDebug_STGraphSpeedConstraint::kDescriptorMethods,
        &descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* STGraphDebug_STGraphSpeedConstraint::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> STGraphDebug_STGraphSpeedConstraint::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_STGraphDebug_STGraphSpeedConstraint_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::planning_internal::STGraphDebug_STGraphSpeedConstraint>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated double t = 1;
    {::_pbi::TcParser::FastF64R1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(STGraphDebug_STGraphSpeedConstraint, _impl_.t_)}},
    // repeated double lower_bound = 2;
    {::_pbi::TcParser::FastF64R1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(STGraphDebug_STGraphSpeedConstraint, _impl_.lower_bound_)}},
    // repeated double upper_bound = 3;
    {::_pbi::TcParser::FastF64R1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(STGraphDebug_STGraphSpeedConstraint, _impl_.upper_bound_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated double t = 1;
    {PROTOBUF_FIELD_OFFSET(STGraphDebug_STGraphSpeedConstraint, _impl_.t_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kDouble)},
    // repeated double lower_bound = 2;
    {PROTOBUF_FIELD_OFFSET(STGraphDebug_STGraphSpeedConstraint, _impl_.lower_bound_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kDouble)},
    // repeated double upper_bound = 3;
    {PROTOBUF_FIELD_OFFSET(STGraphDebug_STGraphSpeedConstraint, _impl_.upper_bound_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void STGraphDebug_STGraphSpeedConstraint::Clear() {
// @@protoc_insertion_point(message_clear_start:control.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.t_.Clear();
  _impl_.lower_bound_.Clear();
  _impl_.upper_bound_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* STGraphDebug_STGraphSpeedConstraint::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated double t = 1;
  for (int i = 0, n = this->_internal_t_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_t().Get(i), target);
  }

  // repeated double lower_bound = 2;
  for (int i = 0, n = this->_internal_lower_bound_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_lower_bound().Get(i), target);
  }

  // repeated double upper_bound = 3;
  for (int i = 0, n = this->_internal_upper_bound_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_upper_bound().Get(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  return target;
}

::size_t STGraphDebug_STGraphSpeedConstraint::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // repeated double t = 1;
     {
      std::size_t data_size = std::size_t{8} *
          ::_pbi::FromIntSize(this->_internal_t_size())
      ;
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this->_internal_t_size());
      ;
      total_size += tag_size + data_size;
    }
    // repeated double lower_bound = 2;
     {
      std::size_t data_size = std::size_t{8} *
          ::_pbi::FromIntSize(this->_internal_lower_bound_size())
      ;
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this->_internal_lower_bound_size());
      ;
      total_size += tag_size + data_size;
    }
    // repeated double upper_bound = 3;
     {
      std::size_t data_size = std::size_t{8} *
          ::_pbi::FromIntSize(this->_internal_upper_bound_size())
      ;
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this->_internal_upper_bound_size());
      ;
      total_size += tag_size + data_size;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void STGraphDebug_STGraphSpeedConstraint::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<STGraphDebug_STGraphSpeedConstraint*>(&to_msg);
  auto& from = static_cast<const STGraphDebug_STGraphSpeedConstraint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_t()->MergeFrom(from._internal_t());
  _this->_internal_mutable_lower_bound()->MergeFrom(from._internal_lower_bound());
  _this->_internal_mutable_upper_bound()->MergeFrom(from._internal_upper_bound());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void STGraphDebug_STGraphSpeedConstraint::CopyFrom(const STGraphDebug_STGraphSpeedConstraint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void STGraphDebug_STGraphSpeedConstraint::InternalSwap(STGraphDebug_STGraphSpeedConstraint* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.t_.InternalSwap(&other->_impl_.t_);
  _impl_.lower_bound_.InternalSwap(&other->_impl_.lower_bound_);
  _impl_.upper_bound_.InternalSwap(&other->_impl_.upper_bound_);
}

::google::protobuf::Metadata STGraphDebug_STGraphSpeedConstraint::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class STGraphDebug_STGraphKernelCuiseRef::_Internal {
 public:
};

STGraphDebug_STGraphKernelCuiseRef::STGraphDebug_STGraphKernelCuiseRef(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
}
inline PROTOBUF_NDEBUG_INLINE STGraphDebug_STGraphKernelCuiseRef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::planning_internal::STGraphDebug_STGraphKernelCuiseRef& from_msg)
      : t_{visibility, arena, from.t_},
        cruise_line_s_{visibility, arena, from.cruise_line_s_},
        _cached_size_{0} {}

STGraphDebug_STGraphKernelCuiseRef::STGraphDebug_STGraphKernelCuiseRef(
    ::google::protobuf::Arena* arena,
    const STGraphDebug_STGraphKernelCuiseRef& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  STGraphDebug_STGraphKernelCuiseRef* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:control.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
}
inline PROTOBUF_NDEBUG_INLINE STGraphDebug_STGraphKernelCuiseRef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : t_{visibility, arena},
        cruise_line_s_{visibility, arena},
        _cached_size_{0} {}

inline void STGraphDebug_STGraphKernelCuiseRef::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
STGraphDebug_STGraphKernelCuiseRef::~STGraphDebug_STGraphKernelCuiseRef() {
  // @@protoc_insertion_point(destructor:control.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void STGraphDebug_STGraphKernelCuiseRef::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    STGraphDebug_STGraphKernelCuiseRef::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &STGraphDebug_STGraphKernelCuiseRef::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<STGraphDebug_STGraphKernelCuiseRef>(),
            ::google::protobuf::Message::GetNewImpl<STGraphDebug_STGraphKernelCuiseRef>(),
            ::google::protobuf::Message::GetClearImpl<STGraphDebug_STGraphKernelCuiseRef>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<STGraphDebug_STGraphKernelCuiseRef>(),
                ::google::protobuf::Message::GetSerializeImpl<STGraphDebug_STGraphKernelCuiseRef>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(STGraphDebug_STGraphKernelCuiseRef, _impl_._cached_size_),
            false,
        },
        &STGraphDebug_STGraphKernelCuiseRef::kDescriptorMethods,
        &descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* STGraphDebug_STGraphKernelCuiseRef::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> STGraphDebug_STGraphKernelCuiseRef::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_STGraphDebug_STGraphKernelCuiseRef_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::planning_internal::STGraphDebug_STGraphKernelCuiseRef>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated double cruise_line_s = 2;
    {::_pbi::TcParser::FastF64R1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(STGraphDebug_STGraphKernelCuiseRef, _impl_.cruise_line_s_)}},
    // repeated double t = 1;
    {::_pbi::TcParser::FastF64R1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(STGraphDebug_STGraphKernelCuiseRef, _impl_.t_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated double t = 1;
    {PROTOBUF_FIELD_OFFSET(STGraphDebug_STGraphKernelCuiseRef, _impl_.t_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kDouble)},
    // repeated double cruise_line_s = 2;
    {PROTOBUF_FIELD_OFFSET(STGraphDebug_STGraphKernelCuiseRef, _impl_.cruise_line_s_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void STGraphDebug_STGraphKernelCuiseRef::Clear() {
// @@protoc_insertion_point(message_clear_start:control.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.t_.Clear();
  _impl_.cruise_line_s_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* STGraphDebug_STGraphKernelCuiseRef::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated double t = 1;
  for (int i = 0, n = this->_internal_t_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_t().Get(i), target);
  }

  // repeated double cruise_line_s = 2;
  for (int i = 0, n = this->_internal_cruise_line_s_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_cruise_line_s().Get(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  return target;
}

::size_t STGraphDebug_STGraphKernelCuiseRef::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // repeated double t = 1;
     {
      std::size_t data_size = std::size_t{8} *
          ::_pbi::FromIntSize(this->_internal_t_size())
      ;
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this->_internal_t_size());
      ;
      total_size += tag_size + data_size;
    }
    // repeated double cruise_line_s = 2;
     {
      std::size_t data_size = std::size_t{8} *
          ::_pbi::FromIntSize(this->_internal_cruise_line_s_size())
      ;
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this->_internal_cruise_line_s_size());
      ;
      total_size += tag_size + data_size;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void STGraphDebug_STGraphKernelCuiseRef::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<STGraphDebug_STGraphKernelCuiseRef*>(&to_msg);
  auto& from = static_cast<const STGraphDebug_STGraphKernelCuiseRef&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_t()->MergeFrom(from._internal_t());
  _this->_internal_mutable_cruise_line_s()->MergeFrom(from._internal_cruise_line_s());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void STGraphDebug_STGraphKernelCuiseRef::CopyFrom(const STGraphDebug_STGraphKernelCuiseRef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void STGraphDebug_STGraphKernelCuiseRef::InternalSwap(STGraphDebug_STGraphKernelCuiseRef* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.t_.InternalSwap(&other->_impl_.t_);
  _impl_.cruise_line_s_.InternalSwap(&other->_impl_.cruise_line_s_);
}

::google::protobuf::Metadata STGraphDebug_STGraphKernelCuiseRef::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class STGraphDebug_STGraphKernelFollowRef::_Internal {
 public:
};

STGraphDebug_STGraphKernelFollowRef::STGraphDebug_STGraphKernelFollowRef(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.planning_internal.STGraphDebug.STGraphKernelFollowRef)
}
inline PROTOBUF_NDEBUG_INLINE STGraphDebug_STGraphKernelFollowRef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::planning_internal::STGraphDebug_STGraphKernelFollowRef& from_msg)
      : t_{visibility, arena, from.t_},
        follow_line_s_{visibility, arena, from.follow_line_s_},
        _cached_size_{0} {}

STGraphDebug_STGraphKernelFollowRef::STGraphDebug_STGraphKernelFollowRef(
    ::google::protobuf::Arena* arena,
    const STGraphDebug_STGraphKernelFollowRef& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  STGraphDebug_STGraphKernelFollowRef* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:control.planning_internal.STGraphDebug.STGraphKernelFollowRef)
}
inline PROTOBUF_NDEBUG_INLINE STGraphDebug_STGraphKernelFollowRef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : t_{visibility, arena},
        follow_line_s_{visibility, arena},
        _cached_size_{0} {}

inline void STGraphDebug_STGraphKernelFollowRef::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
STGraphDebug_STGraphKernelFollowRef::~STGraphDebug_STGraphKernelFollowRef() {
  // @@protoc_insertion_point(destructor:control.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void STGraphDebug_STGraphKernelFollowRef::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    STGraphDebug_STGraphKernelFollowRef::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &STGraphDebug_STGraphKernelFollowRef::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<STGraphDebug_STGraphKernelFollowRef>(),
            ::google::protobuf::Message::GetNewImpl<STGraphDebug_STGraphKernelFollowRef>(),
            ::google::protobuf::Message::GetClearImpl<STGraphDebug_STGraphKernelFollowRef>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<STGraphDebug_STGraphKernelFollowRef>(),
                ::google::protobuf::Message::GetSerializeImpl<STGraphDebug_STGraphKernelFollowRef>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(STGraphDebug_STGraphKernelFollowRef, _impl_._cached_size_),
            false,
        },
        &STGraphDebug_STGraphKernelFollowRef::kDescriptorMethods,
        &descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* STGraphDebug_STGraphKernelFollowRef::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> STGraphDebug_STGraphKernelFollowRef::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_STGraphDebug_STGraphKernelFollowRef_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::planning_internal::STGraphDebug_STGraphKernelFollowRef>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated double follow_line_s = 2;
    {::_pbi::TcParser::FastF64R1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(STGraphDebug_STGraphKernelFollowRef, _impl_.follow_line_s_)}},
    // repeated double t = 1;
    {::_pbi::TcParser::FastF64R1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(STGraphDebug_STGraphKernelFollowRef, _impl_.t_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated double t = 1;
    {PROTOBUF_FIELD_OFFSET(STGraphDebug_STGraphKernelFollowRef, _impl_.t_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kDouble)},
    // repeated double follow_line_s = 2;
    {PROTOBUF_FIELD_OFFSET(STGraphDebug_STGraphKernelFollowRef, _impl_.follow_line_s_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void STGraphDebug_STGraphKernelFollowRef::Clear() {
// @@protoc_insertion_point(message_clear_start:control.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.t_.Clear();
  _impl_.follow_line_s_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* STGraphDebug_STGraphKernelFollowRef::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated double t = 1;
  for (int i = 0, n = this->_internal_t_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_t().Get(i), target);
  }

  // repeated double follow_line_s = 2;
  for (int i = 0, n = this->_internal_follow_line_s_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_follow_line_s().Get(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  return target;
}

::size_t STGraphDebug_STGraphKernelFollowRef::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // repeated double t = 1;
     {
      std::size_t data_size = std::size_t{8} *
          ::_pbi::FromIntSize(this->_internal_t_size())
      ;
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this->_internal_t_size());
      ;
      total_size += tag_size + data_size;
    }
    // repeated double follow_line_s = 2;
     {
      std::size_t data_size = std::size_t{8} *
          ::_pbi::FromIntSize(this->_internal_follow_line_s_size())
      ;
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this->_internal_follow_line_s_size());
      ;
      total_size += tag_size + data_size;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void STGraphDebug_STGraphKernelFollowRef::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<STGraphDebug_STGraphKernelFollowRef*>(&to_msg);
  auto& from = static_cast<const STGraphDebug_STGraphKernelFollowRef&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_t()->MergeFrom(from._internal_t());
  _this->_internal_mutable_follow_line_s()->MergeFrom(from._internal_follow_line_s());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void STGraphDebug_STGraphKernelFollowRef::CopyFrom(const STGraphDebug_STGraphKernelFollowRef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void STGraphDebug_STGraphKernelFollowRef::InternalSwap(STGraphDebug_STGraphKernelFollowRef* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.t_.InternalSwap(&other->_impl_.t_);
  _impl_.follow_line_s_.InternalSwap(&other->_impl_.follow_line_s_);
}

::google::protobuf::Metadata STGraphDebug_STGraphKernelFollowRef::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class STGraphDebug::_Internal {
 public:
  using HasBits =
      decltype(std::declval<STGraphDebug>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(STGraphDebug, _impl_._has_bits_);
};

void STGraphDebug::clear_speed_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_limit_.Clear();
}
void STGraphDebug::clear_speed_profile() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_profile_.Clear();
}
STGraphDebug::STGraphDebug(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.planning_internal.STGraphDebug)
}
inline PROTOBUF_NDEBUG_INLINE STGraphDebug::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::planning_internal::STGraphDebug& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        boundary_{visibility, arena, from.boundary_},
        speed_limit_{visibility, arena, from.speed_limit_},
        speed_profile_{visibility, arena, from.speed_profile_},
        name_(arena, from.name_) {}

STGraphDebug::STGraphDebug(
    ::google::protobuf::Arena* arena,
    const STGraphDebug& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  STGraphDebug* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.speed_constraint_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::control::planning_internal::STGraphDebug_STGraphSpeedConstraint>(
                              arena, *from._impl_.speed_constraint_)
                        : nullptr;
  _impl_.kernel_cruise_ref_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::control::planning_internal::STGraphDebug_STGraphKernelCuiseRef>(
                              arena, *from._impl_.kernel_cruise_ref_)
                        : nullptr;
  _impl_.kernel_follow_ref_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::control::planning_internal::STGraphDebug_STGraphKernelFollowRef>(
                              arena, *from._impl_.kernel_follow_ref_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:control.planning_internal.STGraphDebug)
}
inline PROTOBUF_NDEBUG_INLINE STGraphDebug::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        boundary_{visibility, arena},
        speed_limit_{visibility, arena},
        speed_profile_{visibility, arena},
        name_(arena) {}

inline void STGraphDebug::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, speed_constraint_),
           0,
           offsetof(Impl_, kernel_follow_ref_) -
               offsetof(Impl_, speed_constraint_) +
               sizeof(Impl_::kernel_follow_ref_));
}
STGraphDebug::~STGraphDebug() {
  // @@protoc_insertion_point(destructor:control.planning_internal.STGraphDebug)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void STGraphDebug::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  delete _impl_.speed_constraint_;
  delete _impl_.kernel_cruise_ref_;
  delete _impl_.kernel_follow_ref_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    STGraphDebug::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &STGraphDebug::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<STGraphDebug>(),
            ::google::protobuf::Message::GetNewImpl<STGraphDebug>(),
            ::google::protobuf::Message::GetClearImpl<STGraphDebug>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<STGraphDebug>(),
                ::google::protobuf::Message::GetSerializeImpl<STGraphDebug>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(STGraphDebug, _impl_._cached_size_),
            false,
        },
        &STGraphDebug::kDescriptorMethods,
        &descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* STGraphDebug::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 6, 51, 2> STGraphDebug::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(STGraphDebug, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_STGraphDebug_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::planning_internal::STGraphDebug>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(STGraphDebug, _impl_.name_)}},
    // repeated .control.planning_internal.StGraphBoundaryDebug boundary = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(STGraphDebug, _impl_.boundary_)}},
    // repeated .control.common.SpeedPoint speed_limit = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(STGraphDebug, _impl_.speed_limit_)}},
    // repeated .control.common.SpeedPoint speed_profile = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 2, PROTOBUF_FIELD_OFFSET(STGraphDebug, _impl_.speed_profile_)}},
    // optional .control.planning_internal.STGraphDebug.STGraphSpeedConstraint speed_constraint = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 3, PROTOBUF_FIELD_OFFSET(STGraphDebug, _impl_.speed_constraint_)}},
    // optional .control.planning_internal.STGraphDebug.STGraphKernelCuiseRef kernel_cruise_ref = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 2, 4, PROTOBUF_FIELD_OFFSET(STGraphDebug, _impl_.kernel_cruise_ref_)}},
    // optional .control.planning_internal.STGraphDebug.STGraphKernelFollowRef kernel_follow_ref = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 3, 5, PROTOBUF_FIELD_OFFSET(STGraphDebug, _impl_.kernel_follow_ref_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(STGraphDebug, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .control.planning_internal.StGraphBoundaryDebug boundary = 2;
    {PROTOBUF_FIELD_OFFSET(STGraphDebug, _impl_.boundary_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .control.common.SpeedPoint speed_limit = 3;
    {PROTOBUF_FIELD_OFFSET(STGraphDebug, _impl_.speed_limit_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .control.common.SpeedPoint speed_profile = 4;
    {PROTOBUF_FIELD_OFFSET(STGraphDebug, _impl_.speed_profile_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.planning_internal.STGraphDebug.STGraphSpeedConstraint speed_constraint = 5;
    {PROTOBUF_FIELD_OFFSET(STGraphDebug, _impl_.speed_constraint_), _Internal::kHasBitsOffset + 1, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.planning_internal.STGraphDebug.STGraphKernelCuiseRef kernel_cruise_ref = 6;
    {PROTOBUF_FIELD_OFFSET(STGraphDebug, _impl_.kernel_cruise_ref_), _Internal::kHasBitsOffset + 2, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.planning_internal.STGraphDebug.STGraphKernelFollowRef kernel_follow_ref = 7;
    {PROTOBUF_FIELD_OFFSET(STGraphDebug, _impl_.kernel_follow_ref_), _Internal::kHasBitsOffset + 3, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::planning_internal::StGraphBoundaryDebug>()},
    {::_pbi::TcParser::GetTable<::control::common::SpeedPoint>()},
    {::_pbi::TcParser::GetTable<::control::common::SpeedPoint>()},
    {::_pbi::TcParser::GetTable<::control::planning_internal::STGraphDebug_STGraphSpeedConstraint>()},
    {::_pbi::TcParser::GetTable<::control::planning_internal::STGraphDebug_STGraphKernelCuiseRef>()},
    {::_pbi::TcParser::GetTable<::control::planning_internal::STGraphDebug_STGraphKernelFollowRef>()},
  }}, {{
    "\46\4\0\0\0\0\0\0"
    "control.planning_internal.STGraphDebug"
    "name"
  }},
};

PROTOBUF_NOINLINE void STGraphDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:control.planning_internal.STGraphDebug)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.boundary_.Clear();
  _impl_.speed_limit_.Clear();
  _impl_.speed_profile_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.speed_constraint_ != nullptr);
      _impl_.speed_constraint_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.kernel_cruise_ref_ != nullptr);
      _impl_.kernel_cruise_ref_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.kernel_follow_ref_ != nullptr);
      _impl_.kernel_follow_ref_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* STGraphDebug::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.planning_internal.STGraphDebug)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "control.planning_internal.STGraphDebug.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .control.planning_internal.StGraphBoundaryDebug boundary = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_boundary_size());
       i < n; i++) {
    const auto& repfield = this->_internal_boundary().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .control.common.SpeedPoint speed_limit = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_speed_limit_size());
       i < n; i++) {
    const auto& repfield = this->_internal_speed_limit().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .control.common.SpeedPoint speed_profile = 4;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_speed_profile_size());
       i < n; i++) {
    const auto& repfield = this->_internal_speed_profile().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional .control.planning_internal.STGraphDebug.STGraphSpeedConstraint speed_constraint = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.speed_constraint_, _impl_.speed_constraint_->GetCachedSize(), target, stream);
  }

  // optional .control.planning_internal.STGraphDebug.STGraphKernelCuiseRef kernel_cruise_ref = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *_impl_.kernel_cruise_ref_, _impl_.kernel_cruise_ref_->GetCachedSize(), target, stream);
  }

  // optional .control.planning_internal.STGraphDebug.STGraphKernelFollowRef kernel_follow_ref = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *_impl_.kernel_follow_ref_, _impl_.kernel_follow_ref_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.planning_internal.STGraphDebug)
  return target;
}

::size_t STGraphDebug::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.planning_internal.STGraphDebug)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // repeated .control.planning_internal.StGraphBoundaryDebug boundary = 2;
     {
      total_size += 1UL * this->_internal_boundary_size();
      for (const auto& msg : this->_internal_boundary()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .control.common.SpeedPoint speed_limit = 3;
     {
      total_size += 1UL * this->_internal_speed_limit_size();
      for (const auto& msg : this->_internal_speed_limit()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .control.common.SpeedPoint speed_profile = 4;
     {
      total_size += 1UL * this->_internal_speed_profile_size();
      for (const auto& msg : this->_internal_speed_profile()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }
    // optional .control.planning_internal.STGraphDebug.STGraphSpeedConstraint speed_constraint = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.speed_constraint_);
    }
    // optional .control.planning_internal.STGraphDebug.STGraphKernelCuiseRef kernel_cruise_ref = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.kernel_cruise_ref_);
    }
    // optional .control.planning_internal.STGraphDebug.STGraphKernelFollowRef kernel_follow_ref = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.kernel_follow_ref_);
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void STGraphDebug::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<STGraphDebug*>(&to_msg);
  auto& from = static_cast<const STGraphDebug&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:control.planning_internal.STGraphDebug)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_boundary()->MergeFrom(
      from._internal_boundary());
  _this->_internal_mutable_speed_limit()->MergeFrom(
      from._internal_speed_limit());
  _this->_internal_mutable_speed_profile()->MergeFrom(
      from._internal_speed_profile());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.speed_constraint_ != nullptr);
      if (_this->_impl_.speed_constraint_ == nullptr) {
        _this->_impl_.speed_constraint_ =
            ::google::protobuf::Message::CopyConstruct<::control::planning_internal::STGraphDebug_STGraphSpeedConstraint>(arena, *from._impl_.speed_constraint_);
      } else {
        _this->_impl_.speed_constraint_->MergeFrom(*from._impl_.speed_constraint_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.kernel_cruise_ref_ != nullptr);
      if (_this->_impl_.kernel_cruise_ref_ == nullptr) {
        _this->_impl_.kernel_cruise_ref_ =
            ::google::protobuf::Message::CopyConstruct<::control::planning_internal::STGraphDebug_STGraphKernelCuiseRef>(arena, *from._impl_.kernel_cruise_ref_);
      } else {
        _this->_impl_.kernel_cruise_ref_->MergeFrom(*from._impl_.kernel_cruise_ref_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.kernel_follow_ref_ != nullptr);
      if (_this->_impl_.kernel_follow_ref_ == nullptr) {
        _this->_impl_.kernel_follow_ref_ =
            ::google::protobuf::Message::CopyConstruct<::control::planning_internal::STGraphDebug_STGraphKernelFollowRef>(arena, *from._impl_.kernel_follow_ref_);
      } else {
        _this->_impl_.kernel_follow_ref_->MergeFrom(*from._impl_.kernel_follow_ref_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void STGraphDebug::CopyFrom(const STGraphDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.planning_internal.STGraphDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void STGraphDebug::InternalSwap(STGraphDebug* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.boundary_.InternalSwap(&other->_impl_.boundary_);
  _impl_.speed_limit_.InternalSwap(&other->_impl_.speed_limit_);
  _impl_.speed_profile_.InternalSwap(&other->_impl_.speed_profile_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(STGraphDebug, _impl_.kernel_follow_ref_)
      + sizeof(STGraphDebug::_impl_.kernel_follow_ref_)
      - PROTOBUF_FIELD_OFFSET(STGraphDebug, _impl_.speed_constraint_)>(
          reinterpret_cast<char*>(&_impl_.speed_constraint_),
          reinterpret_cast<char*>(&other->_impl_.speed_constraint_));
}

::google::protobuf::Metadata STGraphDebug::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DecisionTag::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DecisionTag>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DecisionTag, _impl_._has_bits_);
};

void DecisionTag::clear_decision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.decision_ != nullptr) _impl_.decision_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
DecisionTag::DecisionTag(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.planning_internal.DecisionTag)
}
inline PROTOBUF_NDEBUG_INLINE DecisionTag::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::planning_internal::DecisionTag& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        decider_tag_(arena, from.decider_tag_) {}

DecisionTag::DecisionTag(
    ::google::protobuf::Arena* arena,
    const DecisionTag& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DecisionTag* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.decision_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::control::planning::ObjectDecisionType>(
                              arena, *from._impl_.decision_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:control.planning_internal.DecisionTag)
}
inline PROTOBUF_NDEBUG_INLINE DecisionTag::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        decider_tag_(arena) {}

inline void DecisionTag::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.decision_ = {};
}
DecisionTag::~DecisionTag() {
  // @@protoc_insertion_point(destructor:control.planning_internal.DecisionTag)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DecisionTag::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.decider_tag_.Destroy();
  delete _impl_.decision_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    DecisionTag::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &DecisionTag::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<DecisionTag>(),
            ::google::protobuf::Message::GetNewImpl<DecisionTag>(),
            ::google::protobuf::Message::GetClearImpl<DecisionTag>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<DecisionTag>(),
                ::google::protobuf::Message::GetSerializeImpl<DecisionTag>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(DecisionTag, _impl_._cached_size_),
            false,
        },
        &DecisionTag::kDescriptorMethods,
        &descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* DecisionTag::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 57, 2> DecisionTag::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DecisionTag, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DecisionTag_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::planning_internal::DecisionTag>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .control.planning.ObjectDecisionType decision = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(DecisionTag, _impl_.decision_)}},
    // optional string decider_tag = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DecisionTag, _impl_.decider_tag_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string decider_tag = 1;
    {PROTOBUF_FIELD_OFFSET(DecisionTag, _impl_.decider_tag_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .control.planning.ObjectDecisionType decision = 2;
    {PROTOBUF_FIELD_OFFSET(DecisionTag, _impl_.decision_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::planning::ObjectDecisionType>()},
  }}, {{
    "\45\13\0\0\0\0\0\0"
    "control.planning_internal.DecisionTag"
    "decider_tag"
  }},
};

PROTOBUF_NOINLINE void DecisionTag::Clear() {
// @@protoc_insertion_point(message_clear_start:control.planning_internal.DecisionTag)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.decider_tag_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.decision_ != nullptr);
      _impl_.decision_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* DecisionTag::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.planning_internal.DecisionTag)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string decider_tag = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_decider_tag();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "control.planning_internal.DecisionTag.decider_tag");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional .control.planning.ObjectDecisionType decision = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.decision_, _impl_.decision_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.planning_internal.DecisionTag)
  return target;
}

::size_t DecisionTag::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.planning_internal.DecisionTag)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string decider_tag = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_decider_tag());
    }
    // optional .control.planning.ObjectDecisionType decision = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.decision_);
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void DecisionTag::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DecisionTag*>(&to_msg);
  auto& from = static_cast<const DecisionTag&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:control.planning_internal.DecisionTag)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_decider_tag(from._internal_decider_tag());
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.decision_ != nullptr);
      if (_this->_impl_.decision_ == nullptr) {
        _this->_impl_.decision_ =
            ::google::protobuf::Message::CopyConstruct<::control::planning::ObjectDecisionType>(arena, *from._impl_.decision_);
      } else {
        _this->_impl_.decision_->MergeFrom(*from._impl_.decision_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DecisionTag::CopyFrom(const DecisionTag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.planning_internal.DecisionTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DecisionTag::InternalSwap(DecisionTag* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.decider_tag_, &other->_impl_.decider_tag_, arena);
  swap(_impl_.decision_, other->_impl_.decision_);
}

::google::protobuf::Metadata DecisionTag::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ObstacleDebug::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ObstacleDebug>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ObstacleDebug, _impl_._has_bits_);
};

ObstacleDebug::ObstacleDebug(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.planning_internal.ObstacleDebug)
}
inline PROTOBUF_NDEBUG_INLINE ObstacleDebug::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::planning_internal::ObstacleDebug& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        decision_tag_{visibility, arena, from.decision_tag_},
        vertices_x_coords_{visibility, arena, from.vertices_x_coords_},
        vertices_y_coords_{visibility, arena, from.vertices_y_coords_},
        id_(arena, from.id_) {}

ObstacleDebug::ObstacleDebug(
    ::google::protobuf::Arena* arena,
    const ObstacleDebug& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ObstacleDebug* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:control.planning_internal.ObstacleDebug)
}
inline PROTOBUF_NDEBUG_INLINE ObstacleDebug::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        decision_tag_{visibility, arena},
        vertices_x_coords_{visibility, arena},
        vertices_y_coords_{visibility, arena},
        id_(arena) {}

inline void ObstacleDebug::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ObstacleDebug::~ObstacleDebug() {
  // @@protoc_insertion_point(destructor:control.planning_internal.ObstacleDebug)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ObstacleDebug::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    ObstacleDebug::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &ObstacleDebug::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<ObstacleDebug>(),
            ::google::protobuf::Message::GetNewImpl<ObstacleDebug>(),
            ::google::protobuf::Message::GetClearImpl<ObstacleDebug>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<ObstacleDebug>(),
                ::google::protobuf::Message::GetSerializeImpl<ObstacleDebug>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(ObstacleDebug, _impl_._cached_size_),
            false,
        },
        &ObstacleDebug::kDescriptorMethods,
        &descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* ObstacleDebug::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 4, 1, 50, 2> ObstacleDebug::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ObstacleDebug, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967266,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ObstacleDebug_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::planning_internal::ObstacleDebug>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ObstacleDebug, _impl_.id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .control.planning_internal.DecisionTag decision_tag = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ObstacleDebug, _impl_.decision_tag_)}},
    // repeated double vertices_x_coords = 4;
    {::_pbi::TcParser::FastF64R1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(ObstacleDebug, _impl_.vertices_x_coords_)}},
    // repeated double vertices_y_coords = 5;
    {::_pbi::TcParser::FastF64R1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(ObstacleDebug, _impl_.vertices_y_coords_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string id = 1;
    {PROTOBUF_FIELD_OFFSET(ObstacleDebug, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .control.planning_internal.DecisionTag decision_tag = 3;
    {PROTOBUF_FIELD_OFFSET(ObstacleDebug, _impl_.decision_tag_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated double vertices_x_coords = 4;
    {PROTOBUF_FIELD_OFFSET(ObstacleDebug, _impl_.vertices_x_coords_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kDouble)},
    // repeated double vertices_y_coords = 5;
    {PROTOBUF_FIELD_OFFSET(ObstacleDebug, _impl_.vertices_y_coords_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kDouble)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::planning_internal::DecisionTag>()},
  }}, {{
    "\47\2\0\0\0\0\0\0"
    "control.planning_internal.ObstacleDebug"
    "id"
  }},
};

PROTOBUF_NOINLINE void ObstacleDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:control.planning_internal.ObstacleDebug)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.decision_tag_.Clear();
  _impl_.vertices_x_coords_.Clear();
  _impl_.vertices_y_coords_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* ObstacleDebug::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.planning_internal.ObstacleDebug)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "control.planning_internal.ObstacleDebug.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .control.planning_internal.DecisionTag decision_tag = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_decision_tag_size());
       i < n; i++) {
    const auto& repfield = this->_internal_decision_tag().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated double vertices_x_coords = 4;
  for (int i = 0, n = this->_internal_vertices_x_coords_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_vertices_x_coords().Get(i), target);
  }

  // repeated double vertices_y_coords = 5;
  for (int i = 0, n = this->_internal_vertices_y_coords_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        5, this->_internal_vertices_y_coords().Get(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.planning_internal.ObstacleDebug)
  return target;
}

::size_t ObstacleDebug::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.planning_internal.ObstacleDebug)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // repeated .control.planning_internal.DecisionTag decision_tag = 3;
     {
      total_size += 1UL * this->_internal_decision_tag_size();
      for (const auto& msg : this->_internal_decision_tag()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated double vertices_x_coords = 4;
     {
      std::size_t data_size = std::size_t{8} *
          ::_pbi::FromIntSize(this->_internal_vertices_x_coords_size())
      ;
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this->_internal_vertices_x_coords_size());
      ;
      total_size += tag_size + data_size;
    }
    // repeated double vertices_y_coords = 5;
     {
      std::size_t data_size = std::size_t{8} *
          ::_pbi::FromIntSize(this->_internal_vertices_y_coords_size())
      ;
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this->_internal_vertices_y_coords_size());
      ;
      total_size += tag_size + data_size;
    }
  }
   {
    // optional string id = 1;
    cached_has_bits = _impl_._has_bits_[0];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void ObstacleDebug::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ObstacleDebug*>(&to_msg);
  auto& from = static_cast<const ObstacleDebug&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.planning_internal.ObstacleDebug)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_decision_tag()->MergeFrom(
      from._internal_decision_tag());
  _this->_internal_mutable_vertices_x_coords()->MergeFrom(from._internal_vertices_x_coords());
  _this->_internal_mutable_vertices_y_coords()->MergeFrom(from._internal_vertices_y_coords());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ObstacleDebug::CopyFrom(const ObstacleDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.planning_internal.ObstacleDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ObstacleDebug::InternalSwap(ObstacleDebug* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.decision_tag_.InternalSwap(&other->_impl_.decision_tag_);
  _impl_.vertices_x_coords_.InternalSwap(&other->_impl_.vertices_x_coords_);
  _impl_.vertices_y_coords_.InternalSwap(&other->_impl_.vertices_y_coords_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata ObstacleDebug::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ReferenceLineDebug::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ReferenceLineDebug>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_._has_bits_);
};

ReferenceLineDebug::ReferenceLineDebug(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.planning_internal.ReferenceLineDebug)
}
inline PROTOBUF_NDEBUG_INLINE ReferenceLineDebug::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::planning_internal::ReferenceLineDebug& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_) {}

ReferenceLineDebug::ReferenceLineDebug(
    ::google::protobuf::Arena* arena,
    const ReferenceLineDebug& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ReferenceLineDebug* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, length_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, length_),
           offsetof(Impl_, is_offroad_) -
               offsetof(Impl_, length_) +
               sizeof(Impl_::is_offroad_));

  // @@protoc_insertion_point(copy_constructor:control.planning_internal.ReferenceLineDebug)
}
inline PROTOBUF_NDEBUG_INLINE ReferenceLineDebug::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena) {}

inline void ReferenceLineDebug::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, length_),
           0,
           offsetof(Impl_, is_offroad_) -
               offsetof(Impl_, length_) +
               sizeof(Impl_::is_offroad_));
}
ReferenceLineDebug::~ReferenceLineDebug() {
  // @@protoc_insertion_point(destructor:control.planning_internal.ReferenceLineDebug)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ReferenceLineDebug::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    ReferenceLineDebug::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &ReferenceLineDebug::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<ReferenceLineDebug>(),
            ::google::protobuf::Message::GetNewImpl<ReferenceLineDebug>(),
            ::google::protobuf::Message::GetClearImpl<ReferenceLineDebug>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<ReferenceLineDebug>(),
                ::google::protobuf::Message::GetSerializeImpl<ReferenceLineDebug>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_._cached_size_),
            false,
        },
        &ReferenceLineDebug::kDescriptorMethods,
        &descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* ReferenceLineDebug::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 15, 0, 63, 2> ReferenceLineDebug::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_._has_bits_),
    0, // no _extensions_
    15, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294934528,  // skipmap
    offsetof(decltype(_table_), field_entries),
    15,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ReferenceLineDebug_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::planning_internal::ReferenceLineDebug>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.id_)}},
    // optional double length = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.length_)}},
    // optional double cost = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.cost_)}},
    // optional bool is_change_lane_path = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ReferenceLineDebug, _impl_.is_change_lane_path_), 11>(),
     {32, 11, 0, PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.is_change_lane_path_)}},
    // optional bool is_drivable = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ReferenceLineDebug, _impl_.is_drivable_), 12>(),
     {40, 12, 0, PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.is_drivable_)}},
    // optional bool is_protected = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ReferenceLineDebug, _impl_.is_protected_), 13>(),
     {48, 13, 0, PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.is_protected_)}},
    // optional bool is_offroad = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ReferenceLineDebug, _impl_.is_offroad_), 14>(),
     {56, 14, 0, PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.is_offroad_)}},
    // optional double minimum_boundary = 8;
    {::_pbi::TcParser::FastF64S1,
     {65, 3, 0, PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.minimum_boundary_)}},
    // optional double average_kappa = 9 [deprecated = true];
    {::_pbi::TcParser::FastF64S1,
     {73, 4, 0, PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.average_kappa_)}},
    // optional double average_dkappa = 10 [deprecated = true];
    {::_pbi::TcParser::FastF64S1,
     {81, 5, 0, PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.average_dkappa_)}},
    // optional double kappa_rms = 11;
    {::_pbi::TcParser::FastF64S1,
     {89, 6, 0, PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.kappa_rms_)}},
    // optional double dkappa_rms = 12;
    {::_pbi::TcParser::FastF64S1,
     {97, 7, 0, PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.dkappa_rms_)}},
    // optional double kappa_max_abs = 13;
    {::_pbi::TcParser::FastF64S1,
     {105, 8, 0, PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.kappa_max_abs_)}},
    // optional double dkappa_max_abs = 14;
    {::_pbi::TcParser::FastF64S1,
     {113, 9, 0, PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.dkappa_max_abs_)}},
    // optional double average_offset = 15;
    {::_pbi::TcParser::FastF64S1,
     {121, 10, 0, PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.average_offset_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string id = 1;
    {PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional double length = 2;
    {PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.length_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double cost = 3;
    {PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.cost_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional bool is_change_lane_path = 4;
    {PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.is_change_lane_path_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool is_drivable = 5;
    {PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.is_drivable_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool is_protected = 6;
    {PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.is_protected_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool is_offroad = 7;
    {PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.is_offroad_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional double minimum_boundary = 8;
    {PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.minimum_boundary_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double average_kappa = 9 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.average_kappa_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double average_dkappa = 10 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.average_dkappa_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double kappa_rms = 11;
    {PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.kappa_rms_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double dkappa_rms = 12;
    {PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.dkappa_rms_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double kappa_max_abs = 13;
    {PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.kappa_max_abs_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double dkappa_max_abs = 14;
    {PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.dkappa_max_abs_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double average_offset = 15;
    {PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.average_offset_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\54\2\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "control.planning_internal.ReferenceLineDebug"
    "id"
  }},
};

PROTOBUF_NOINLINE void ReferenceLineDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:control.planning_internal.ReferenceLineDebug)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&_impl_.length_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.dkappa_rms_) -
        reinterpret_cast<char*>(&_impl_.length_)) + sizeof(_impl_.dkappa_rms_));
  }
  if (cached_has_bits & 0x00007f00u) {
    ::memset(&_impl_.kappa_max_abs_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_offroad_) -
        reinterpret_cast<char*>(&_impl_.kappa_max_abs_)) + sizeof(_impl_.is_offroad_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* ReferenceLineDebug::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.planning_internal.ReferenceLineDebug)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "control.planning_internal.ReferenceLineDebug.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional double length = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_length(), target);
  }

  // optional double cost = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_cost(), target);
  }

  // optional bool is_change_lane_path = 4;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_is_change_lane_path(), target);
  }

  // optional bool is_drivable = 5;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_is_drivable(), target);
  }

  // optional bool is_protected = 6;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_is_protected(), target);
  }

  // optional bool is_offroad = 7;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        7, this->_internal_is_offroad(), target);
  }

  // optional double minimum_boundary = 8;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        8, this->_internal_minimum_boundary(), target);
  }

  // optional double average_kappa = 9 [deprecated = true];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        9, this->_internal_average_kappa(), target);
  }

  // optional double average_dkappa = 10 [deprecated = true];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        10, this->_internal_average_dkappa(), target);
  }

  // optional double kappa_rms = 11;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        11, this->_internal_kappa_rms(), target);
  }

  // optional double dkappa_rms = 12;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        12, this->_internal_dkappa_rms(), target);
  }

  // optional double kappa_max_abs = 13;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        13, this->_internal_kappa_max_abs(), target);
  }

  // optional double dkappa_max_abs = 14;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        14, this->_internal_dkappa_max_abs(), target);
  }

  // optional double average_offset = 15;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        15, this->_internal_average_offset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.planning_internal.ReferenceLineDebug)
  return target;
}

::size_t ReferenceLineDebug::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.planning_internal.ReferenceLineDebug)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }
    // optional double length = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }
    // optional double cost = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 9;
    }
    // optional double minimum_boundary = 8;
    if (cached_has_bits & 0x00000008u) {
      total_size += 9;
    }
    // optional double average_kappa = 9 [deprecated = true];
    if (cached_has_bits & 0x00000010u) {
      total_size += 9;
    }
    // optional double average_dkappa = 10 [deprecated = true];
    if (cached_has_bits & 0x00000020u) {
      total_size += 9;
    }
    // optional double kappa_rms = 11;
    if (cached_has_bits & 0x00000040u) {
      total_size += 9;
    }
    // optional double dkappa_rms = 12;
    if (cached_has_bits & 0x00000080u) {
      total_size += 9;
    }
  }
  if (cached_has_bits & 0x00007f00u) {
    // optional double kappa_max_abs = 13;
    if (cached_has_bits & 0x00000100u) {
      total_size += 9;
    }
    // optional double dkappa_max_abs = 14;
    if (cached_has_bits & 0x00000200u) {
      total_size += 9;
    }
    // optional double average_offset = 15;
    if (cached_has_bits & 0x00000400u) {
      total_size += 9;
    }
    // optional bool is_change_lane_path = 4;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2;
    }
    // optional bool is_drivable = 5;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2;
    }
    // optional bool is_protected = 6;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2;
    }
    // optional bool is_offroad = 7;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void ReferenceLineDebug::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReferenceLineDebug*>(&to_msg);
  auto& from = static_cast<const ReferenceLineDebug&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.planning_internal.ReferenceLineDebug)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.length_ = from._impl_.length_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.cost_ = from._impl_.cost_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.minimum_boundary_ = from._impl_.minimum_boundary_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.average_kappa_ = from._impl_.average_kappa_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.average_dkappa_ = from._impl_.average_dkappa_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.kappa_rms_ = from._impl_.kappa_rms_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.dkappa_rms_ = from._impl_.dkappa_rms_;
    }
  }
  if (cached_has_bits & 0x00007f00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.kappa_max_abs_ = from._impl_.kappa_max_abs_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.dkappa_max_abs_ = from._impl_.dkappa_max_abs_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.average_offset_ = from._impl_.average_offset_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.is_change_lane_path_ = from._impl_.is_change_lane_path_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.is_drivable_ = from._impl_.is_drivable_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.is_protected_ = from._impl_.is_protected_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.is_offroad_ = from._impl_.is_offroad_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReferenceLineDebug::CopyFrom(const ReferenceLineDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.planning_internal.ReferenceLineDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ReferenceLineDebug::InternalSwap(ReferenceLineDebug* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.is_offroad_)
      + sizeof(ReferenceLineDebug::_impl_.is_offroad_)
      - PROTOBUF_FIELD_OFFSET(ReferenceLineDebug, _impl_.length_)>(
          reinterpret_cast<char*>(&_impl_.length_),
          reinterpret_cast<char*>(&other->_impl_.length_));
}

::google::protobuf::Metadata ReferenceLineDebug::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SampleLayerDebug::_Internal {
 public:
};

void SampleLayerDebug::clear_sl_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sl_point_.Clear();
}
SampleLayerDebug::SampleLayerDebug(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.planning_internal.SampleLayerDebug)
}
inline PROTOBUF_NDEBUG_INLINE SampleLayerDebug::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::planning_internal::SampleLayerDebug& from_msg)
      : sl_point_{visibility, arena, from.sl_point_},
        _cached_size_{0} {}

SampleLayerDebug::SampleLayerDebug(
    ::google::protobuf::Arena* arena,
    const SampleLayerDebug& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SampleLayerDebug* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:control.planning_internal.SampleLayerDebug)
}
inline PROTOBUF_NDEBUG_INLINE SampleLayerDebug::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : sl_point_{visibility, arena},
        _cached_size_{0} {}

inline void SampleLayerDebug::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SampleLayerDebug::~SampleLayerDebug() {
  // @@protoc_insertion_point(destructor:control.planning_internal.SampleLayerDebug)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SampleLayerDebug::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SampleLayerDebug::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SampleLayerDebug::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SampleLayerDebug>(),
            ::google::protobuf::Message::GetNewImpl<SampleLayerDebug>(),
            ::google::protobuf::Message::GetClearImpl<SampleLayerDebug>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<SampleLayerDebug>(),
                ::google::protobuf::Message::GetSerializeImpl<SampleLayerDebug>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SampleLayerDebug, _impl_._cached_size_),
            false,
        },
        &SampleLayerDebug::kDescriptorMethods,
        &descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SampleLayerDebug::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SampleLayerDebug::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SampleLayerDebug_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::planning_internal::SampleLayerDebug>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .control.common.SLPoint sl_point = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SampleLayerDebug, _impl_.sl_point_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .control.common.SLPoint sl_point = 1;
    {PROTOBUF_FIELD_OFFSET(SampleLayerDebug, _impl_.sl_point_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::common::SLPoint>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SampleLayerDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:control.planning_internal.SampleLayerDebug)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sl_point_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SampleLayerDebug::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.planning_internal.SampleLayerDebug)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .control.common.SLPoint sl_point = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_sl_point_size());
       i < n; i++) {
    const auto& repfield = this->_internal_sl_point().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.planning_internal.SampleLayerDebug)
  return target;
}

::size_t SampleLayerDebug::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.planning_internal.SampleLayerDebug)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // repeated .control.common.SLPoint sl_point = 1;
     {
      total_size += 1UL * this->_internal_sl_point_size();
      for (const auto& msg : this->_internal_sl_point()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void SampleLayerDebug::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SampleLayerDebug*>(&to_msg);
  auto& from = static_cast<const SampleLayerDebug&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.planning_internal.SampleLayerDebug)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_sl_point()->MergeFrom(
      from._internal_sl_point());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SampleLayerDebug::CopyFrom(const SampleLayerDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.planning_internal.SampleLayerDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SampleLayerDebug::InternalSwap(SampleLayerDebug* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.sl_point_.InternalSwap(&other->_impl_.sl_point_);
}

::google::protobuf::Metadata SampleLayerDebug::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DpPolyGraphDebug::_Internal {
 public:
};

void DpPolyGraphDebug::clear_min_cost_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_cost_point_.Clear();
}
DpPolyGraphDebug::DpPolyGraphDebug(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.planning_internal.DpPolyGraphDebug)
}
inline PROTOBUF_NDEBUG_INLINE DpPolyGraphDebug::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::planning_internal::DpPolyGraphDebug& from_msg)
      : sample_layer_{visibility, arena, from.sample_layer_},
        min_cost_point_{visibility, arena, from.min_cost_point_},
        _cached_size_{0} {}

DpPolyGraphDebug::DpPolyGraphDebug(
    ::google::protobuf::Arena* arena,
    const DpPolyGraphDebug& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DpPolyGraphDebug* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:control.planning_internal.DpPolyGraphDebug)
}
inline PROTOBUF_NDEBUG_INLINE DpPolyGraphDebug::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : sample_layer_{visibility, arena},
        min_cost_point_{visibility, arena},
        _cached_size_{0} {}

inline void DpPolyGraphDebug::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DpPolyGraphDebug::~DpPolyGraphDebug() {
  // @@protoc_insertion_point(destructor:control.planning_internal.DpPolyGraphDebug)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DpPolyGraphDebug::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    DpPolyGraphDebug::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &DpPolyGraphDebug::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<DpPolyGraphDebug>(),
            ::google::protobuf::Message::GetNewImpl<DpPolyGraphDebug>(),
            ::google::protobuf::Message::GetClearImpl<DpPolyGraphDebug>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<DpPolyGraphDebug>(),
                ::google::protobuf::Message::GetSerializeImpl<DpPolyGraphDebug>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(DpPolyGraphDebug, _impl_._cached_size_),
            false,
        },
        &DpPolyGraphDebug::kDescriptorMethods,
        &descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* DpPolyGraphDebug::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> DpPolyGraphDebug::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DpPolyGraphDebug_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::planning_internal::DpPolyGraphDebug>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .control.common.SLPoint min_cost_point = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(DpPolyGraphDebug, _impl_.min_cost_point_)}},
    // repeated .control.planning_internal.SampleLayerDebug sample_layer = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DpPolyGraphDebug, _impl_.sample_layer_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .control.planning_internal.SampleLayerDebug sample_layer = 1;
    {PROTOBUF_FIELD_OFFSET(DpPolyGraphDebug, _impl_.sample_layer_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .control.common.SLPoint min_cost_point = 2;
    {PROTOBUF_FIELD_OFFSET(DpPolyGraphDebug, _impl_.min_cost_point_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::planning_internal::SampleLayerDebug>()},
    {::_pbi::TcParser::GetTable<::control::common::SLPoint>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void DpPolyGraphDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:control.planning_internal.DpPolyGraphDebug)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sample_layer_.Clear();
  _impl_.min_cost_point_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* DpPolyGraphDebug::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.planning_internal.DpPolyGraphDebug)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .control.planning_internal.SampleLayerDebug sample_layer = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_sample_layer_size());
       i < n; i++) {
    const auto& repfield = this->_internal_sample_layer().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .control.common.SLPoint min_cost_point = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_min_cost_point_size());
       i < n; i++) {
    const auto& repfield = this->_internal_min_cost_point().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.planning_internal.DpPolyGraphDebug)
  return target;
}

::size_t DpPolyGraphDebug::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.planning_internal.DpPolyGraphDebug)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // repeated .control.planning_internal.SampleLayerDebug sample_layer = 1;
     {
      total_size += 1UL * this->_internal_sample_layer_size();
      for (const auto& msg : this->_internal_sample_layer()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .control.common.SLPoint min_cost_point = 2;
     {
      total_size += 1UL * this->_internal_min_cost_point_size();
      for (const auto& msg : this->_internal_min_cost_point()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void DpPolyGraphDebug::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DpPolyGraphDebug*>(&to_msg);
  auto& from = static_cast<const DpPolyGraphDebug&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.planning_internal.DpPolyGraphDebug)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_sample_layer()->MergeFrom(
      from._internal_sample_layer());
  _this->_internal_mutable_min_cost_point()->MergeFrom(
      from._internal_min_cost_point());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DpPolyGraphDebug::CopyFrom(const DpPolyGraphDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.planning_internal.DpPolyGraphDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DpPolyGraphDebug::InternalSwap(DpPolyGraphDebug* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.sample_layer_.InternalSwap(&other->_impl_.sample_layer_);
  _impl_.min_cost_point_.InternalSwap(&other->_impl_.min_cost_point_);
}

::google::protobuf::Metadata DpPolyGraphDebug::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ScenarioDebug::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ScenarioDebug>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ScenarioDebug, _impl_._has_bits_);
};

ScenarioDebug::ScenarioDebug(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.planning_internal.ScenarioDebug)
}
inline PROTOBUF_NDEBUG_INLINE ScenarioDebug::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::planning_internal::ScenarioDebug& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        msg_(arena, from.msg_),
        scenario_plugin_type_(arena, from.scenario_plugin_type_),
        stage_plugin_type_(arena, from.stage_plugin_type_) {}

ScenarioDebug::ScenarioDebug(
    ::google::protobuf::Arena* arena,
    const ScenarioDebug& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ScenarioDebug* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, scenario_type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, scenario_type_),
           offsetof(Impl_, stage_type_) -
               offsetof(Impl_, scenario_type_) +
               sizeof(Impl_::stage_type_));

  // @@protoc_insertion_point(copy_constructor:control.planning_internal.ScenarioDebug)
}
inline PROTOBUF_NDEBUG_INLINE ScenarioDebug::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        msg_(arena),
        scenario_plugin_type_(arena),
        stage_plugin_type_(arena) {}

inline void ScenarioDebug::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, scenario_type_),
           0,
           offsetof(Impl_, stage_type_) -
               offsetof(Impl_, scenario_type_) +
               sizeof(Impl_::stage_type_));
}
ScenarioDebug::~ScenarioDebug() {
  // @@protoc_insertion_point(destructor:control.planning_internal.ScenarioDebug)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ScenarioDebug::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.msg_.Destroy();
  _impl_.scenario_plugin_type_.Destroy();
  _impl_.stage_plugin_type_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    ScenarioDebug::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &ScenarioDebug::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<ScenarioDebug>(),
            ::google::protobuf::Message::GetNewImpl<ScenarioDebug>(),
            ::google::protobuf::Message::GetClearImpl<ScenarioDebug>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<ScenarioDebug>(),
                ::google::protobuf::Message::GetSerializeImpl<ScenarioDebug>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(ScenarioDebug, _impl_._cached_size_),
            false,
        },
        &ScenarioDebug::kDescriptorMethods,
        &descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* ScenarioDebug::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 88, 2> ScenarioDebug::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ScenarioDebug, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ScenarioDebug_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::planning_internal::ScenarioDebug>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 scenario_type = 1 [deprecated = true];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ScenarioDebug, _impl_.scenario_type_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(ScenarioDebug, _impl_.scenario_type_)}},
    // optional int32 stage_type = 2 [deprecated = true];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ScenarioDebug, _impl_.stage_type_), 4>(),
     {16, 4, 0, PROTOBUF_FIELD_OFFSET(ScenarioDebug, _impl_.stage_type_)}},
    // optional string msg = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(ScenarioDebug, _impl_.msg_)}},
    // optional string scenario_plugin_type = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(ScenarioDebug, _impl_.scenario_plugin_type_)}},
    // optional string stage_plugin_type = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(ScenarioDebug, _impl_.stage_plugin_type_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 scenario_type = 1 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(ScenarioDebug, _impl_.scenario_type_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 stage_type = 2 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(ScenarioDebug, _impl_.stage_type_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string msg = 3;
    {PROTOBUF_FIELD_OFFSET(ScenarioDebug, _impl_.msg_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string scenario_plugin_type = 4;
    {PROTOBUF_FIELD_OFFSET(ScenarioDebug, _impl_.scenario_plugin_type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string stage_plugin_type = 5;
    {PROTOBUF_FIELD_OFFSET(ScenarioDebug, _impl_.stage_plugin_type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\47\0\0\3\24\21\0\0"
    "control.planning_internal.ScenarioDebug"
    "msg"
    "scenario_plugin_type"
    "stage_plugin_type"
  }},
};

PROTOBUF_NOINLINE void ScenarioDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:control.planning_internal.ScenarioDebug)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.msg_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.scenario_plugin_type_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.stage_plugin_type_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000018u) {
    ::memset(&_impl_.scenario_type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.stage_type_) -
        reinterpret_cast<char*>(&_impl_.scenario_type_)) + sizeof(_impl_.stage_type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* ScenarioDebug::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.planning_internal.ScenarioDebug)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 scenario_type = 1 [deprecated = true];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_scenario_type(), target);
  }

  // optional int32 stage_type = 2 [deprecated = true];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_stage_type(), target);
  }

  // optional string msg = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_msg();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "control.planning_internal.ScenarioDebug.msg");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string scenario_plugin_type = 4;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_scenario_plugin_type();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "control.planning_internal.ScenarioDebug.scenario_plugin_type");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional string stage_plugin_type = 5;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_stage_plugin_type();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "control.planning_internal.ScenarioDebug.stage_plugin_type");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.planning_internal.ScenarioDebug)
  return target;
}

::size_t ScenarioDebug::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.planning_internal.ScenarioDebug)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string msg = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_msg());
    }
    // optional string scenario_plugin_type = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_scenario_plugin_type());
    }
    // optional string stage_plugin_type = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_stage_plugin_type());
    }
    // optional int32 scenario_type = 1 [deprecated = true];
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_scenario_type());
    }
    // optional int32 stage_type = 2 [deprecated = true];
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_stage_type());
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void ScenarioDebug::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ScenarioDebug*>(&to_msg);
  auto& from = static_cast<const ScenarioDebug&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.planning_internal.ScenarioDebug)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_msg(from._internal_msg());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_scenario_plugin_type(from._internal_scenario_plugin_type());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_stage_plugin_type(from._internal_stage_plugin_type());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.scenario_type_ = from._impl_.scenario_type_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.stage_type_ = from._impl_.stage_type_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ScenarioDebug::CopyFrom(const ScenarioDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.planning_internal.ScenarioDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ScenarioDebug::InternalSwap(ScenarioDebug* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msg_, &other->_impl_.msg_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.scenario_plugin_type_, &other->_impl_.scenario_plugin_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.stage_plugin_type_, &other->_impl_.stage_plugin_type_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ScenarioDebug, _impl_.stage_type_)
      + sizeof(ScenarioDebug::_impl_.stage_type_)
      - PROTOBUF_FIELD_OFFSET(ScenarioDebug, _impl_.scenario_type_)>(
          reinterpret_cast<char*>(&_impl_.scenario_type_),
          reinterpret_cast<char*>(&other->_impl_.scenario_type_));
}

::google::protobuf::Metadata ScenarioDebug::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Trajectories::_Internal {
 public:
};

void Trajectories::clear_trajectory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trajectory_.Clear();
}
Trajectories::Trajectories(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.planning_internal.Trajectories)
}
inline PROTOBUF_NDEBUG_INLINE Trajectories::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::planning_internal::Trajectories& from_msg)
      : trajectory_{visibility, arena, from.trajectory_},
        _cached_size_{0} {}

Trajectories::Trajectories(
    ::google::protobuf::Arena* arena,
    const Trajectories& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Trajectories* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:control.planning_internal.Trajectories)
}
inline PROTOBUF_NDEBUG_INLINE Trajectories::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : trajectory_{visibility, arena},
        _cached_size_{0} {}

inline void Trajectories::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Trajectories::~Trajectories() {
  // @@protoc_insertion_point(destructor:control.planning_internal.Trajectories)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Trajectories::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Trajectories::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Trajectories::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Trajectories>(),
            ::google::protobuf::Message::GetNewImpl<Trajectories>(),
            ::google::protobuf::Message::GetClearImpl<Trajectories>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<Trajectories>(),
                ::google::protobuf::Message::GetSerializeImpl<Trajectories>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Trajectories, _impl_._cached_size_),
            false,
        },
        &Trajectories::kDescriptorMethods,
        &descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Trajectories::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Trajectories::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Trajectories_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::planning_internal::Trajectories>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .control.common.Trajectory trajectory = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Trajectories, _impl_.trajectory_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .control.common.Trajectory trajectory = 1;
    {PROTOBUF_FIELD_OFFSET(Trajectories, _impl_.trajectory_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::common::Trajectory>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Trajectories::Clear() {
// @@protoc_insertion_point(message_clear_start:control.planning_internal.Trajectories)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trajectory_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Trajectories::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.planning_internal.Trajectories)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .control.common.Trajectory trajectory = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_trajectory_size());
       i < n; i++) {
    const auto& repfield = this->_internal_trajectory().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.planning_internal.Trajectories)
  return target;
}

::size_t Trajectories::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.planning_internal.Trajectories)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // repeated .control.common.Trajectory trajectory = 1;
     {
      total_size += 1UL * this->_internal_trajectory_size();
      for (const auto& msg : this->_internal_trajectory()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void Trajectories::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Trajectories*>(&to_msg);
  auto& from = static_cast<const Trajectories&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.planning_internal.Trajectories)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_trajectory()->MergeFrom(
      from._internal_trajectory());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Trajectories::CopyFrom(const Trajectories& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.planning_internal.Trajectories)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Trajectories::InternalSwap(Trajectories* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.trajectory_.InternalSwap(&other->_impl_.trajectory_);
}

::google::protobuf::Metadata Trajectories::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OpenSpaceDebug::_Internal {
 public:
  using HasBits =
      decltype(std::declval<OpenSpaceDebug>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_._has_bits_);
};

void OpenSpaceDebug::clear_warm_start_trajectory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.warm_start_trajectory_ != nullptr) _impl_.warm_start_trajectory_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void OpenSpaceDebug::clear_smoothed_trajectory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.smoothed_trajectory_ != nullptr) _impl_.smoothed_trajectory_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void OpenSpaceDebug::clear_roi_shift_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.roi_shift_point_ != nullptr) _impl_.roi_shift_point_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void OpenSpaceDebug::clear_end_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.end_point_ != nullptr) _impl_.end_point_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void OpenSpaceDebug::clear_trajectory_stitching_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.trajectory_stitching_point_ != nullptr) _impl_.trajectory_stitching_point_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
void OpenSpaceDebug::clear_future_collision_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.future_collision_point_ != nullptr) _impl_.future_collision_point_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
void OpenSpaceDebug::clear_origin_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.origin_point_ != nullptr) _impl_.origin_point_->Clear();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
OpenSpaceDebug::OpenSpaceDebug(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.planning_internal.OpenSpaceDebug)
}
inline PROTOBUF_NDEBUG_INLINE OpenSpaceDebug::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::planning_internal::OpenSpaceDebug& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        warm_start_dual_lambda_{visibility, arena, from.warm_start_dual_lambda_},
        warm_start_dual_miu_{visibility, arena, from.warm_start_dual_miu_},
        optimized_dual_lambda_{visibility, arena, from.optimized_dual_lambda_},
        optimized_dual_miu_{visibility, arena, from.optimized_dual_miu_},
        xy_boundary_{visibility, arena, from.xy_boundary_},
        obstacles_{visibility, arena, from.obstacles_} {}

OpenSpaceDebug::OpenSpaceDebug(
    ::google::protobuf::Arena* arena,
    const OpenSpaceDebug& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OpenSpaceDebug* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.trajectories_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::control::planning_internal::Trajectories>(
                              arena, *from._impl_.trajectories_)
                        : nullptr;
  _impl_.warm_start_trajectory_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::control::common::VehicleMotion>(
                              arena, *from._impl_.warm_start_trajectory_)
                        : nullptr;
  _impl_.smoothed_trajectory_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::control::common::VehicleMotion>(
                              arena, *from._impl_.smoothed_trajectory_)
                        : nullptr;
  _impl_.roi_shift_point_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::control::common::TrajectoryPoint>(
                              arena, *from._impl_.roi_shift_point_)
                        : nullptr;
  _impl_.end_point_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::control::common::TrajectoryPoint>(
                              arena, *from._impl_.end_point_)
                        : nullptr;
  _impl_.partitioned_trajectories_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::control::planning_internal::Trajectories>(
                              arena, *from._impl_.partitioned_trajectories_)
                        : nullptr;
  _impl_.chosen_trajectory_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::control::planning_internal::Trajectories>(
                              arena, *from._impl_.chosen_trajectory_)
                        : nullptr;
  _impl_.fallback_trajectory_ = (cached_has_bits & 0x00000080u) ? ::google::protobuf::Message::CopyConstruct<::control::planning_internal::Trajectories>(
                              arena, *from._impl_.fallback_trajectory_)
                        : nullptr;
  _impl_.trajectory_stitching_point_ = (cached_has_bits & 0x00000100u) ? ::google::protobuf::Message::CopyConstruct<::control::common::TrajectoryPoint>(
                              arena, *from._impl_.trajectory_stitching_point_)
                        : nullptr;
  _impl_.future_collision_point_ = (cached_has_bits & 0x00000200u) ? ::google::protobuf::Message::CopyConstruct<::control::common::TrajectoryPoint>(
                              arena, *from._impl_.future_collision_point_)
                        : nullptr;
  _impl_.origin_point_ = (cached_has_bits & 0x00000400u) ? ::google::protobuf::Message::CopyConstruct<::control::common::PointENU>(
                              arena, *from._impl_.origin_point_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_latency_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, time_latency_),
           offsetof(Impl_, is_fallback_trajectory_) -
               offsetof(Impl_, time_latency_) +
               sizeof(Impl_::is_fallback_trajectory_));

  // @@protoc_insertion_point(copy_constructor:control.planning_internal.OpenSpaceDebug)
}
inline PROTOBUF_NDEBUG_INLINE OpenSpaceDebug::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        warm_start_dual_lambda_{visibility, arena},
        warm_start_dual_miu_{visibility, arena},
        optimized_dual_lambda_{visibility, arena},
        optimized_dual_miu_{visibility, arena},
        xy_boundary_{visibility, arena},
        obstacles_{visibility, arena} {}

inline void OpenSpaceDebug::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, trajectories_),
           0,
           offsetof(Impl_, is_fallback_trajectory_) -
               offsetof(Impl_, trajectories_) +
               sizeof(Impl_::is_fallback_trajectory_));
}
OpenSpaceDebug::~OpenSpaceDebug() {
  // @@protoc_insertion_point(destructor:control.planning_internal.OpenSpaceDebug)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OpenSpaceDebug::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.trajectories_;
  delete _impl_.warm_start_trajectory_;
  delete _impl_.smoothed_trajectory_;
  delete _impl_.roi_shift_point_;
  delete _impl_.end_point_;
  delete _impl_.partitioned_trajectories_;
  delete _impl_.chosen_trajectory_;
  delete _impl_.fallback_trajectory_;
  delete _impl_.trajectory_stitching_point_;
  delete _impl_.future_collision_point_;
  delete _impl_.origin_point_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    OpenSpaceDebug::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &OpenSpaceDebug::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<OpenSpaceDebug>(),
            ::google::protobuf::Message::GetNewImpl<OpenSpaceDebug>(),
            ::google::protobuf::Message::GetClearImpl<OpenSpaceDebug>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<OpenSpaceDebug>(),
                ::google::protobuf::Message::GetSerializeImpl<OpenSpaceDebug>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_._cached_size_),
            false,
        },
        &OpenSpaceDebug::kDescriptorMethods,
        &descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* OpenSpaceDebug::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 20, 12, 0, 2> OpenSpaceDebug::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_._has_bits_),
    0, // no _extensions_
    20, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4293918720,  // skipmap
    offsetof(decltype(_table_), field_entries),
    20,  // num_field_entries
    12,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_OpenSpaceDebug_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::planning_internal::OpenSpaceDebug>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .control.planning_internal.Trajectories trajectories = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.trajectories_)}},
    // optional .control.common.VehicleMotion warm_start_trajectory = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.warm_start_trajectory_)}},
    // optional .control.common.VehicleMotion smoothed_trajectory = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.smoothed_trajectory_)}},
    // repeated double warm_start_dual_lambda = 4;
    {::_pbi::TcParser::FastF64R1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.warm_start_dual_lambda_)}},
    // repeated double warm_start_dual_miu = 5;
    {::_pbi::TcParser::FastF64R1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.warm_start_dual_miu_)}},
    // repeated double optimized_dual_lambda = 6;
    {::_pbi::TcParser::FastF64R1,
     {49, 63, 0, PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.optimized_dual_lambda_)}},
    // repeated double optimized_dual_miu = 7;
    {::_pbi::TcParser::FastF64R1,
     {57, 63, 0, PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.optimized_dual_miu_)}},
    // repeated double xy_boundary = 8;
    {::_pbi::TcParser::FastF64R1,
     {65, 63, 0, PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.xy_boundary_)}},
    // repeated .control.planning_internal.ObstacleDebug obstacles = 9;
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 3, PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.obstacles_)}},
    // optional .control.common.TrajectoryPoint roi_shift_point = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 3, 4, PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.roi_shift_point_)}},
    // optional .control.common.TrajectoryPoint end_point = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 4, 5, PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.end_point_)}},
    // optional .control.planning_internal.Trajectories partitioned_trajectories = 12;
    {::_pbi::TcParser::FastMtS1,
     {98, 5, 6, PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.partitioned_trajectories_)}},
    // optional .control.planning_internal.Trajectories chosen_trajectory = 13;
    {::_pbi::TcParser::FastMtS1,
     {106, 6, 7, PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.chosen_trajectory_)}},
    // optional bool is_fallback_trajectory = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(OpenSpaceDebug, _impl_.is_fallback_trajectory_), 13>(),
     {112, 13, 0, PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.is_fallback_trajectory_)}},
    // optional .control.planning_internal.Trajectories fallback_trajectory = 15;
    {::_pbi::TcParser::FastMtS1,
     {122, 7, 8, PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.fallback_trajectory_)}},
    // optional .control.common.TrajectoryPoint trajectory_stitching_point = 16;
    {::_pbi::TcParser::FastMtS2,
     {386, 8, 9, PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.trajectory_stitching_point_)}},
    // optional .control.common.TrajectoryPoint future_collision_point = 17;
    {::_pbi::TcParser::FastMtS2,
     {394, 9, 10, PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.future_collision_point_)}},
    // optional double time_latency = 18 [default = 0];
    {::_pbi::TcParser::FastF64S2,
     {401, 11, 0, PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.time_latency_)}},
    // optional .control.common.PointENU origin_point = 19;
    {::_pbi::TcParser::FastMtS2,
     {410, 10, 11, PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.origin_point_)}},
    // optional double origin_heading_rad = 20;
    {::_pbi::TcParser::FastF64S2,
     {417, 12, 0, PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.origin_heading_rad_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .control.planning_internal.Trajectories trajectories = 1;
    {PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.trajectories_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.common.VehicleMotion warm_start_trajectory = 2;
    {PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.warm_start_trajectory_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.common.VehicleMotion smoothed_trajectory = 3;
    {PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.smoothed_trajectory_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated double warm_start_dual_lambda = 4;
    {PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.warm_start_dual_lambda_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kDouble)},
    // repeated double warm_start_dual_miu = 5;
    {PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.warm_start_dual_miu_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kDouble)},
    // repeated double optimized_dual_lambda = 6;
    {PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.optimized_dual_lambda_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kDouble)},
    // repeated double optimized_dual_miu = 7;
    {PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.optimized_dual_miu_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kDouble)},
    // repeated double xy_boundary = 8;
    {PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.xy_boundary_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kDouble)},
    // repeated .control.planning_internal.ObstacleDebug obstacles = 9;
    {PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.obstacles_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.common.TrajectoryPoint roi_shift_point = 10;
    {PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.roi_shift_point_), _Internal::kHasBitsOffset + 3, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.common.TrajectoryPoint end_point = 11;
    {PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.end_point_), _Internal::kHasBitsOffset + 4, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.planning_internal.Trajectories partitioned_trajectories = 12;
    {PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.partitioned_trajectories_), _Internal::kHasBitsOffset + 5, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.planning_internal.Trajectories chosen_trajectory = 13;
    {PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.chosen_trajectory_), _Internal::kHasBitsOffset + 6, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool is_fallback_trajectory = 14;
    {PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.is_fallback_trajectory_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .control.planning_internal.Trajectories fallback_trajectory = 15;
    {PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.fallback_trajectory_), _Internal::kHasBitsOffset + 7, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.common.TrajectoryPoint trajectory_stitching_point = 16;
    {PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.trajectory_stitching_point_), _Internal::kHasBitsOffset + 8, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.common.TrajectoryPoint future_collision_point = 17;
    {PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.future_collision_point_), _Internal::kHasBitsOffset + 9, 10,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional double time_latency = 18 [default = 0];
    {PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.time_latency_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional .control.common.PointENU origin_point = 19;
    {PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.origin_point_), _Internal::kHasBitsOffset + 10, 11,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional double origin_heading_rad = 20;
    {PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.origin_heading_rad_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::planning_internal::Trajectories>()},
    {::_pbi::TcParser::GetTable<::control::common::VehicleMotion>()},
    {::_pbi::TcParser::GetTable<::control::common::VehicleMotion>()},
    {::_pbi::TcParser::GetTable<::control::planning_internal::ObstacleDebug>()},
    {::_pbi::TcParser::GetTable<::control::common::TrajectoryPoint>()},
    {::_pbi::TcParser::GetTable<::control::common::TrajectoryPoint>()},
    {::_pbi::TcParser::GetTable<::control::planning_internal::Trajectories>()},
    {::_pbi::TcParser::GetTable<::control::planning_internal::Trajectories>()},
    {::_pbi::TcParser::GetTable<::control::planning_internal::Trajectories>()},
    {::_pbi::TcParser::GetTable<::control::common::TrajectoryPoint>()},
    {::_pbi::TcParser::GetTable<::control::common::TrajectoryPoint>()},
    {::_pbi::TcParser::GetTable<::control::common::PointENU>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void OpenSpaceDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:control.planning_internal.OpenSpaceDebug)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.warm_start_dual_lambda_.Clear();
  _impl_.warm_start_dual_miu_.Clear();
  _impl_.optimized_dual_lambda_.Clear();
  _impl_.optimized_dual_miu_.Clear();
  _impl_.xy_boundary_.Clear();
  _impl_.obstacles_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.trajectories_ != nullptr);
      _impl_.trajectories_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.warm_start_trajectory_ != nullptr);
      _impl_.warm_start_trajectory_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.smoothed_trajectory_ != nullptr);
      _impl_.smoothed_trajectory_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.roi_shift_point_ != nullptr);
      _impl_.roi_shift_point_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.end_point_ != nullptr);
      _impl_.end_point_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.partitioned_trajectories_ != nullptr);
      _impl_.partitioned_trajectories_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.chosen_trajectory_ != nullptr);
      _impl_.chosen_trajectory_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.fallback_trajectory_ != nullptr);
      _impl_.fallback_trajectory_->Clear();
    }
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(_impl_.trajectory_stitching_point_ != nullptr);
      _impl_.trajectory_stitching_point_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(_impl_.future_collision_point_ != nullptr);
      _impl_.future_collision_point_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(_impl_.origin_point_ != nullptr);
      _impl_.origin_point_->Clear();
    }
  }
  if (cached_has_bits & 0x00003800u) {
    ::memset(&_impl_.time_latency_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_fallback_trajectory_) -
        reinterpret_cast<char*>(&_impl_.time_latency_)) + sizeof(_impl_.is_fallback_trajectory_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* OpenSpaceDebug::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.planning_internal.OpenSpaceDebug)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .control.planning_internal.Trajectories trajectories = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.trajectories_, _impl_.trajectories_->GetCachedSize(), target, stream);
  }

  // optional .control.common.VehicleMotion warm_start_trajectory = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.warm_start_trajectory_, _impl_.warm_start_trajectory_->GetCachedSize(), target, stream);
  }

  // optional .control.common.VehicleMotion smoothed_trajectory = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.smoothed_trajectory_, _impl_.smoothed_trajectory_->GetCachedSize(), target, stream);
  }

  // repeated double warm_start_dual_lambda = 4;
  for (int i = 0, n = this->_internal_warm_start_dual_lambda_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_warm_start_dual_lambda().Get(i), target);
  }

  // repeated double warm_start_dual_miu = 5;
  for (int i = 0, n = this->_internal_warm_start_dual_miu_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        5, this->_internal_warm_start_dual_miu().Get(i), target);
  }

  // repeated double optimized_dual_lambda = 6;
  for (int i = 0, n = this->_internal_optimized_dual_lambda_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        6, this->_internal_optimized_dual_lambda().Get(i), target);
  }

  // repeated double optimized_dual_miu = 7;
  for (int i = 0, n = this->_internal_optimized_dual_miu_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        7, this->_internal_optimized_dual_miu().Get(i), target);
  }

  // repeated double xy_boundary = 8;
  for (int i = 0, n = this->_internal_xy_boundary_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        8, this->_internal_xy_boundary().Get(i), target);
  }

  // repeated .control.planning_internal.ObstacleDebug obstacles = 9;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_obstacles_size());
       i < n; i++) {
    const auto& repfield = this->_internal_obstacles().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            9, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional .control.common.TrajectoryPoint roi_shift_point = 10;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        10, *_impl_.roi_shift_point_, _impl_.roi_shift_point_->GetCachedSize(), target, stream);
  }

  // optional .control.common.TrajectoryPoint end_point = 11;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        11, *_impl_.end_point_, _impl_.end_point_->GetCachedSize(), target, stream);
  }

  // optional .control.planning_internal.Trajectories partitioned_trajectories = 12;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        12, *_impl_.partitioned_trajectories_, _impl_.partitioned_trajectories_->GetCachedSize(), target, stream);
  }

  // optional .control.planning_internal.Trajectories chosen_trajectory = 13;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        13, *_impl_.chosen_trajectory_, _impl_.chosen_trajectory_->GetCachedSize(), target, stream);
  }

  // optional bool is_fallback_trajectory = 14;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        14, this->_internal_is_fallback_trajectory(), target);
  }

  // optional .control.planning_internal.Trajectories fallback_trajectory = 15;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        15, *_impl_.fallback_trajectory_, _impl_.fallback_trajectory_->GetCachedSize(), target, stream);
  }

  // optional .control.common.TrajectoryPoint trajectory_stitching_point = 16;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        16, *_impl_.trajectory_stitching_point_, _impl_.trajectory_stitching_point_->GetCachedSize(), target, stream);
  }

  // optional .control.common.TrajectoryPoint future_collision_point = 17;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        17, *_impl_.future_collision_point_, _impl_.future_collision_point_->GetCachedSize(), target, stream);
  }

  // optional double time_latency = 18 [default = 0];
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        18, this->_internal_time_latency(), target);
  }

  // optional .control.common.PointENU origin_point = 19;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        19, *_impl_.origin_point_, _impl_.origin_point_->GetCachedSize(), target, stream);
  }

  // optional double origin_heading_rad = 20;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        20, this->_internal_origin_heading_rad(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.planning_internal.OpenSpaceDebug)
  return target;
}

::size_t OpenSpaceDebug::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.planning_internal.OpenSpaceDebug)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // repeated double warm_start_dual_lambda = 4;
     {
      std::size_t data_size = std::size_t{8} *
          ::_pbi::FromIntSize(this->_internal_warm_start_dual_lambda_size())
      ;
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this->_internal_warm_start_dual_lambda_size());
      ;
      total_size += tag_size + data_size;
    }
    // repeated double warm_start_dual_miu = 5;
     {
      std::size_t data_size = std::size_t{8} *
          ::_pbi::FromIntSize(this->_internal_warm_start_dual_miu_size())
      ;
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this->_internal_warm_start_dual_miu_size());
      ;
      total_size += tag_size + data_size;
    }
    // repeated double optimized_dual_lambda = 6;
     {
      std::size_t data_size = std::size_t{8} *
          ::_pbi::FromIntSize(this->_internal_optimized_dual_lambda_size())
      ;
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this->_internal_optimized_dual_lambda_size());
      ;
      total_size += tag_size + data_size;
    }
    // repeated double optimized_dual_miu = 7;
     {
      std::size_t data_size = std::size_t{8} *
          ::_pbi::FromIntSize(this->_internal_optimized_dual_miu_size())
      ;
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this->_internal_optimized_dual_miu_size());
      ;
      total_size += tag_size + data_size;
    }
    // repeated double xy_boundary = 8;
     {
      std::size_t data_size = std::size_t{8} *
          ::_pbi::FromIntSize(this->_internal_xy_boundary_size())
      ;
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this->_internal_xy_boundary_size());
      ;
      total_size += tag_size + data_size;
    }
    // repeated .control.planning_internal.ObstacleDebug obstacles = 9;
     {
      total_size += 1UL * this->_internal_obstacles_size();
      for (const auto& msg : this->_internal_obstacles()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .control.planning_internal.Trajectories trajectories = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.trajectories_);
    }
    // optional .control.common.VehicleMotion warm_start_trajectory = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.warm_start_trajectory_);
    }
    // optional .control.common.VehicleMotion smoothed_trajectory = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.smoothed_trajectory_);
    }
    // optional .control.common.TrajectoryPoint roi_shift_point = 10;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.roi_shift_point_);
    }
    // optional .control.common.TrajectoryPoint end_point = 11;
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.end_point_);
    }
    // optional .control.planning_internal.Trajectories partitioned_trajectories = 12;
    if (cached_has_bits & 0x00000020u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.partitioned_trajectories_);
    }
    // optional .control.planning_internal.Trajectories chosen_trajectory = 13;
    if (cached_has_bits & 0x00000040u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.chosen_trajectory_);
    }
    // optional .control.planning_internal.Trajectories fallback_trajectory = 15;
    if (cached_has_bits & 0x00000080u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.fallback_trajectory_);
    }
  }
  if (cached_has_bits & 0x00003f00u) {
    // optional .control.common.TrajectoryPoint trajectory_stitching_point = 16;
    if (cached_has_bits & 0x00000100u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.trajectory_stitching_point_);
    }
    // optional .control.common.TrajectoryPoint future_collision_point = 17;
    if (cached_has_bits & 0x00000200u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.future_collision_point_);
    }
    // optional .control.common.PointENU origin_point = 19;
    if (cached_has_bits & 0x00000400u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.origin_point_);
    }
    // optional double time_latency = 18 [default = 0];
    if (cached_has_bits & 0x00000800u) {
      total_size += 10;
    }
    // optional double origin_heading_rad = 20;
    if (cached_has_bits & 0x00001000u) {
      total_size += 10;
    }
    // optional bool is_fallback_trajectory = 14;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void OpenSpaceDebug::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OpenSpaceDebug*>(&to_msg);
  auto& from = static_cast<const OpenSpaceDebug&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:control.planning_internal.OpenSpaceDebug)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_warm_start_dual_lambda()->MergeFrom(from._internal_warm_start_dual_lambda());
  _this->_internal_mutable_warm_start_dual_miu()->MergeFrom(from._internal_warm_start_dual_miu());
  _this->_internal_mutable_optimized_dual_lambda()->MergeFrom(from._internal_optimized_dual_lambda());
  _this->_internal_mutable_optimized_dual_miu()->MergeFrom(from._internal_optimized_dual_miu());
  _this->_internal_mutable_xy_boundary()->MergeFrom(from._internal_xy_boundary());
  _this->_internal_mutable_obstacles()->MergeFrom(
      from._internal_obstacles());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.trajectories_ != nullptr);
      if (_this->_impl_.trajectories_ == nullptr) {
        _this->_impl_.trajectories_ =
            ::google::protobuf::Message::CopyConstruct<::control::planning_internal::Trajectories>(arena, *from._impl_.trajectories_);
      } else {
        _this->_impl_.trajectories_->MergeFrom(*from._impl_.trajectories_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.warm_start_trajectory_ != nullptr);
      if (_this->_impl_.warm_start_trajectory_ == nullptr) {
        _this->_impl_.warm_start_trajectory_ =
            ::google::protobuf::Message::CopyConstruct<::control::common::VehicleMotion>(arena, *from._impl_.warm_start_trajectory_);
      } else {
        _this->_impl_.warm_start_trajectory_->MergeFrom(*from._impl_.warm_start_trajectory_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.smoothed_trajectory_ != nullptr);
      if (_this->_impl_.smoothed_trajectory_ == nullptr) {
        _this->_impl_.smoothed_trajectory_ =
            ::google::protobuf::Message::CopyConstruct<::control::common::VehicleMotion>(arena, *from._impl_.smoothed_trajectory_);
      } else {
        _this->_impl_.smoothed_trajectory_->MergeFrom(*from._impl_.smoothed_trajectory_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.roi_shift_point_ != nullptr);
      if (_this->_impl_.roi_shift_point_ == nullptr) {
        _this->_impl_.roi_shift_point_ =
            ::google::protobuf::Message::CopyConstruct<::control::common::TrajectoryPoint>(arena, *from._impl_.roi_shift_point_);
      } else {
        _this->_impl_.roi_shift_point_->MergeFrom(*from._impl_.roi_shift_point_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.end_point_ != nullptr);
      if (_this->_impl_.end_point_ == nullptr) {
        _this->_impl_.end_point_ =
            ::google::protobuf::Message::CopyConstruct<::control::common::TrajectoryPoint>(arena, *from._impl_.end_point_);
      } else {
        _this->_impl_.end_point_->MergeFrom(*from._impl_.end_point_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.partitioned_trajectories_ != nullptr);
      if (_this->_impl_.partitioned_trajectories_ == nullptr) {
        _this->_impl_.partitioned_trajectories_ =
            ::google::protobuf::Message::CopyConstruct<::control::planning_internal::Trajectories>(arena, *from._impl_.partitioned_trajectories_);
      } else {
        _this->_impl_.partitioned_trajectories_->MergeFrom(*from._impl_.partitioned_trajectories_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.chosen_trajectory_ != nullptr);
      if (_this->_impl_.chosen_trajectory_ == nullptr) {
        _this->_impl_.chosen_trajectory_ =
            ::google::protobuf::Message::CopyConstruct<::control::planning_internal::Trajectories>(arena, *from._impl_.chosen_trajectory_);
      } else {
        _this->_impl_.chosen_trajectory_->MergeFrom(*from._impl_.chosen_trajectory_);
      }
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(from._impl_.fallback_trajectory_ != nullptr);
      if (_this->_impl_.fallback_trajectory_ == nullptr) {
        _this->_impl_.fallback_trajectory_ =
            ::google::protobuf::Message::CopyConstruct<::control::planning_internal::Trajectories>(arena, *from._impl_.fallback_trajectory_);
      } else {
        _this->_impl_.fallback_trajectory_->MergeFrom(*from._impl_.fallback_trajectory_);
      }
    }
  }
  if (cached_has_bits & 0x00003f00u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(from._impl_.trajectory_stitching_point_ != nullptr);
      if (_this->_impl_.trajectory_stitching_point_ == nullptr) {
        _this->_impl_.trajectory_stitching_point_ =
            ::google::protobuf::Message::CopyConstruct<::control::common::TrajectoryPoint>(arena, *from._impl_.trajectory_stitching_point_);
      } else {
        _this->_impl_.trajectory_stitching_point_->MergeFrom(*from._impl_.trajectory_stitching_point_);
      }
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(from._impl_.future_collision_point_ != nullptr);
      if (_this->_impl_.future_collision_point_ == nullptr) {
        _this->_impl_.future_collision_point_ =
            ::google::protobuf::Message::CopyConstruct<::control::common::TrajectoryPoint>(arena, *from._impl_.future_collision_point_);
      } else {
        _this->_impl_.future_collision_point_->MergeFrom(*from._impl_.future_collision_point_);
      }
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(from._impl_.origin_point_ != nullptr);
      if (_this->_impl_.origin_point_ == nullptr) {
        _this->_impl_.origin_point_ =
            ::google::protobuf::Message::CopyConstruct<::control::common::PointENU>(arena, *from._impl_.origin_point_);
      } else {
        _this->_impl_.origin_point_->MergeFrom(*from._impl_.origin_point_);
      }
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.time_latency_ = from._impl_.time_latency_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.origin_heading_rad_ = from._impl_.origin_heading_rad_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.is_fallback_trajectory_ = from._impl_.is_fallback_trajectory_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OpenSpaceDebug::CopyFrom(const OpenSpaceDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.planning_internal.OpenSpaceDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OpenSpaceDebug::InternalSwap(OpenSpaceDebug* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.warm_start_dual_lambda_.InternalSwap(&other->_impl_.warm_start_dual_lambda_);
  _impl_.warm_start_dual_miu_.InternalSwap(&other->_impl_.warm_start_dual_miu_);
  _impl_.optimized_dual_lambda_.InternalSwap(&other->_impl_.optimized_dual_lambda_);
  _impl_.optimized_dual_miu_.InternalSwap(&other->_impl_.optimized_dual_miu_);
  _impl_.xy_boundary_.InternalSwap(&other->_impl_.xy_boundary_);
  _impl_.obstacles_.InternalSwap(&other->_impl_.obstacles_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.is_fallback_trajectory_)
      + sizeof(OpenSpaceDebug::_impl_.is_fallback_trajectory_)
      - PROTOBUF_FIELD_OFFSET(OpenSpaceDebug, _impl_.trajectories_)>(
          reinterpret_cast<char*>(&_impl_.trajectories_),
          reinterpret_cast<char*>(&other->_impl_.trajectories_));
}

::google::protobuf::Metadata OpenSpaceDebug::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SmootherDebug::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SmootherDebug>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SmootherDebug, _impl_._has_bits_);
};

SmootherDebug::SmootherDebug(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.planning_internal.SmootherDebug)
}
inline PROTOBUF_NDEBUG_INLINE SmootherDebug::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::planning_internal::SmootherDebug& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        reason_(arena, from.reason_) {}

SmootherDebug::SmootherDebug(
    ::google::protobuf::Arena* arena,
    const SmootherDebug& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SmootherDebug* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_smoothed_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, is_smoothed_),
           offsetof(Impl_, type_) -
               offsetof(Impl_, is_smoothed_) +
               sizeof(Impl_::type_));

  // @@protoc_insertion_point(copy_constructor:control.planning_internal.SmootherDebug)
}
inline PROTOBUF_NDEBUG_INLINE SmootherDebug::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        reason_(arena),
        type_{static_cast< ::control::planning_internal::SmootherDebug_SmootherType >(1)} {}

inline void SmootherDebug::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.is_smoothed_ = {};
}
SmootherDebug::~SmootherDebug() {
  // @@protoc_insertion_point(destructor:control.planning_internal.SmootherDebug)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SmootherDebug::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.reason_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SmootherDebug::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SmootherDebug::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SmootherDebug>(),
            ::google::protobuf::Message::GetNewImpl<SmootherDebug>(),
            ::google::protobuf::Message::GetClearImpl<SmootherDebug>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<SmootherDebug>(),
                ::google::protobuf::Message::GetSerializeImpl<SmootherDebug>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SmootherDebug, _impl_._cached_size_),
            false,
        },
        &SmootherDebug::kDescriptorMethods,
        &descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SmootherDebug::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 54, 2> SmootherDebug::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SmootherDebug, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SmootherDebug_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::planning_internal::SmootherDebug>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool is_smoothed = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SmootherDebug, _impl_.is_smoothed_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(SmootherDebug, _impl_.is_smoothed_)}},
    // optional .control.planning_internal.SmootherDebug.SmootherType type = 2 [default = SMOOTHER_NONE];
    {::_pbi::TcParser::FastEr1S1,
     {16, 2, 2, PROTOBUF_FIELD_OFFSET(SmootherDebug, _impl_.type_)}},
    // optional string reason = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(SmootherDebug, _impl_.reason_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool is_smoothed = 1;
    {PROTOBUF_FIELD_OFFSET(SmootherDebug, _impl_.is_smoothed_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .control.planning_internal.SmootherDebug.SmootherType type = 2 [default = SMOOTHER_NONE];
    {PROTOBUF_FIELD_OFFSET(SmootherDebug, _impl_.type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional string reason = 3;
    {PROTOBUF_FIELD_OFFSET(SmootherDebug, _impl_.reason_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {1, 2},
  }}, {{
    "\47\0\0\6\0\0\0\0"
    "control.planning_internal.SmootherDebug"
    "reason"
  }},
};

PROTOBUF_NOINLINE void SmootherDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:control.planning_internal.SmootherDebug)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.reason_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    _impl_.is_smoothed_ = false;
    _impl_.type_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SmootherDebug::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.planning_internal.SmootherDebug)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool is_smoothed = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_is_smoothed(), target);
  }

  // optional .control.planning_internal.SmootherDebug.SmootherType type = 2 [default = SMOOTHER_NONE];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_type(), target);
  }

  // optional string reason = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_reason();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "control.planning_internal.SmootherDebug.reason");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.planning_internal.SmootherDebug)
  return target;
}

::size_t SmootherDebug::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.planning_internal.SmootherDebug)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string reason = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_reason());
    }
    // optional bool is_smoothed = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }
    // optional .control.planning_internal.SmootherDebug.SmootherType type = 2 [default = SMOOTHER_NONE];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void SmootherDebug::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SmootherDebug*>(&to_msg);
  auto& from = static_cast<const SmootherDebug&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.planning_internal.SmootherDebug)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_reason(from._internal_reason());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.is_smoothed_ = from._impl_.is_smoothed_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SmootherDebug::CopyFrom(const SmootherDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.planning_internal.SmootherDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SmootherDebug::InternalSwap(SmootherDebug* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, &other->_impl_.reason_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SmootherDebug, _impl_.type_)
      + sizeof(SmootherDebug::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(SmootherDebug, _impl_.is_smoothed_)>(
          reinterpret_cast<char*>(&_impl_.is_smoothed_),
          reinterpret_cast<char*>(&other->_impl_.is_smoothed_));
}

::google::protobuf::Metadata SmootherDebug::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PullOverDebug::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PullOverDebug>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PullOverDebug, _impl_._has_bits_);
};

void PullOverDebug::clear_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ != nullptr) _impl_.position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PullOverDebug::PullOverDebug(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.planning_internal.PullOverDebug)
}
inline PROTOBUF_NDEBUG_INLINE PullOverDebug::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::planning_internal::PullOverDebug& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PullOverDebug::PullOverDebug(
    ::google::protobuf::Arena* arena,
    const PullOverDebug& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PullOverDebug* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::control::common::PointENU>(
                              arena, *from._impl_.position_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, theta_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, theta_),
           offsetof(Impl_, width_right_) -
               offsetof(Impl_, theta_) +
               sizeof(Impl_::width_right_));

  // @@protoc_insertion_point(copy_constructor:control.planning_internal.PullOverDebug)
}
inline PROTOBUF_NDEBUG_INLINE PullOverDebug::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PullOverDebug::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_),
           0,
           offsetof(Impl_, width_right_) -
               offsetof(Impl_, position_) +
               sizeof(Impl_::width_right_));
}
PullOverDebug::~PullOverDebug() {
  // @@protoc_insertion_point(destructor:control.planning_internal.PullOverDebug)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PullOverDebug::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.position_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PullOverDebug::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &PullOverDebug::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PullOverDebug>(),
            ::google::protobuf::Message::GetNewImpl<PullOverDebug>(),
            ::google::protobuf::Message::GetClearImpl<PullOverDebug>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<PullOverDebug>(),
                ::google::protobuf::Message::GetSerializeImpl<PullOverDebug>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PullOverDebug, _impl_._cached_size_),
            false,
        },
        &PullOverDebug::kDescriptorMethods,
        &descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PullOverDebug::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 0, 2> PullOverDebug::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PullOverDebug, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PullOverDebug_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::planning_internal::PullOverDebug>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .control.common.PointENU position = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PullOverDebug, _impl_.position_)}},
    // optional double theta = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(PullOverDebug, _impl_.theta_)}},
    // optional double length_front = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(PullOverDebug, _impl_.length_front_)}},
    // optional double length_back = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 3, 0, PROTOBUF_FIELD_OFFSET(PullOverDebug, _impl_.length_back_)}},
    // optional double width_left = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 4, 0, PROTOBUF_FIELD_OFFSET(PullOverDebug, _impl_.width_left_)}},
    // optional double width_right = 6;
    {::_pbi::TcParser::FastF64S1,
     {49, 5, 0, PROTOBUF_FIELD_OFFSET(PullOverDebug, _impl_.width_right_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .control.common.PointENU position = 1;
    {PROTOBUF_FIELD_OFFSET(PullOverDebug, _impl_.position_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional double theta = 2;
    {PROTOBUF_FIELD_OFFSET(PullOverDebug, _impl_.theta_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double length_front = 3;
    {PROTOBUF_FIELD_OFFSET(PullOverDebug, _impl_.length_front_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double length_back = 4;
    {PROTOBUF_FIELD_OFFSET(PullOverDebug, _impl_.length_back_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double width_left = 5;
    {PROTOBUF_FIELD_OFFSET(PullOverDebug, _impl_.width_left_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double width_right = 6;
    {PROTOBUF_FIELD_OFFSET(PullOverDebug, _impl_.width_right_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::common::PointENU>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PullOverDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:control.planning_internal.PullOverDebug)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.position_ != nullptr);
    _impl_.position_->Clear();
  }
  if (cached_has_bits & 0x0000003eu) {
    ::memset(&_impl_.theta_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.width_right_) -
        reinterpret_cast<char*>(&_impl_.theta_)) + sizeof(_impl_.width_right_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PullOverDebug::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.planning_internal.PullOverDebug)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .control.common.PointENU position = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.position_, _impl_.position_->GetCachedSize(), target, stream);
  }

  // optional double theta = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_theta(), target);
  }

  // optional double length_front = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_length_front(), target);
  }

  // optional double length_back = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_length_back(), target);
  }

  // optional double width_left = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        5, this->_internal_width_left(), target);
  }

  // optional double width_right = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        6, this->_internal_width_right(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.planning_internal.PullOverDebug)
  return target;
}

::size_t PullOverDebug::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.planning_internal.PullOverDebug)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional .control.common.PointENU position = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.position_);
    }
    // optional double theta = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }
    // optional double length_front = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 9;
    }
    // optional double length_back = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 9;
    }
    // optional double width_left = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 9;
    }
    // optional double width_right = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 9;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void PullOverDebug::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PullOverDebug*>(&to_msg);
  auto& from = static_cast<const PullOverDebug&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:control.planning_internal.PullOverDebug)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.position_ != nullptr);
      if (_this->_impl_.position_ == nullptr) {
        _this->_impl_.position_ =
            ::google::protobuf::Message::CopyConstruct<::control::common::PointENU>(arena, *from._impl_.position_);
      } else {
        _this->_impl_.position_->MergeFrom(*from._impl_.position_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.theta_ = from._impl_.theta_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.length_front_ = from._impl_.length_front_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.length_back_ = from._impl_.length_back_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.width_left_ = from._impl_.width_left_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.width_right_ = from._impl_.width_right_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PullOverDebug::CopyFrom(const PullOverDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.planning_internal.PullOverDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PullOverDebug::InternalSwap(PullOverDebug* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PullOverDebug, _impl_.width_right_)
      + sizeof(PullOverDebug::_impl_.width_right_)
      - PROTOBUF_FIELD_OFFSET(PullOverDebug, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::google::protobuf::Metadata PullOverDebug::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlanningData::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PlanningData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PlanningData, _impl_._has_bits_);
};

void PlanningData::clear_adc_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.adc_position_ != nullptr) _impl_.adc_position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void PlanningData::clear_chassis() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chassis_ != nullptr) _impl_.chassis_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void PlanningData::clear_init_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.init_point_ != nullptr) _impl_.init_point_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void PlanningData::clear_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Clear();
}
void PlanningData::clear_prediction_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.prediction_header_ != nullptr) _impl_.prediction_header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
PlanningData::PlanningData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.planning_internal.PlanningData)
}
inline PROTOBUF_NDEBUG_INLINE PlanningData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::planning_internal::PlanningData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        path_{visibility, arena, from.path_},
        speed_plan_{visibility, arena, from.speed_plan_},
        st_graph_{visibility, arena, from.st_graph_},
        sl_frame_{visibility, arena, from.sl_frame_},
        obstacle_{visibility, arena, from.obstacle_},
        reference_line_{visibility, arena, from.reference_line_} {}

PlanningData::PlanningData(
    ::google::protobuf::Arena* arena,
    const PlanningData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PlanningData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.adc_position_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::control::localization::LocalizationEstimate>(
                              arena, *from._impl_.adc_position_)
                        : nullptr;
  _impl_.chassis_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::control::canbus::Chassis>(
                              arena, *from._impl_.chassis_)
                        : nullptr;
  _impl_.init_point_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::control::common::TrajectoryPoint>(
                              arena, *from._impl_.init_point_)
                        : nullptr;
  _impl_.prediction_header_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::control::common::Header>(
                              arena, *from._impl_.prediction_header_)
                        : nullptr;
  _impl_.dp_poly_graph_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::control::planning_internal::DpPolyGraphDebug>(
                              arena, *from._impl_.dp_poly_graph_)
                        : nullptr;
  _impl_.lattice_st_image_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::control::planning_internal::LatticeStTraining>(
                              arena, *from._impl_.lattice_st_image_)
                        : nullptr;
  _impl_.auto_tuning_training_data_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::control::planning_internal::AutoTuningTrainingData>(
                              arena, *from._impl_.auto_tuning_training_data_)
                        : nullptr;
  _impl_.scenario_ = (cached_has_bits & 0x00000080u) ? ::google::protobuf::Message::CopyConstruct<::control::planning_internal::ScenarioDebug>(
                              arena, *from._impl_.scenario_)
                        : nullptr;
  _impl_.open_space_ = (cached_has_bits & 0x00000100u) ? ::google::protobuf::Message::CopyConstruct<::control::planning_internal::OpenSpaceDebug>(
                              arena, *from._impl_.open_space_)
                        : nullptr;
  _impl_.smoother_ = (cached_has_bits & 0x00000200u) ? ::google::protobuf::Message::CopyConstruct<::control::planning_internal::SmootherDebug>(
                              arena, *from._impl_.smoother_)
                        : nullptr;
  _impl_.pull_over_ = (cached_has_bits & 0x00000400u) ? ::google::protobuf::Message::CopyConstruct<::control::planning_internal::PullOverDebug>(
                              arena, *from._impl_.pull_over_)
                        : nullptr;
  _impl_.hybrid_model_ = (cached_has_bits & 0x00000800u) ? ::google::protobuf::Message::CopyConstruct<::control::planning_internal::HybridModelDebug>(
                              arena, *from._impl_.hybrid_model_)
                        : nullptr;
  _impl_.front_clear_distance_ = from._impl_.front_clear_distance_;

  // @@protoc_insertion_point(copy_constructor:control.planning_internal.PlanningData)
}
inline PROTOBUF_NDEBUG_INLINE PlanningData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        path_{visibility, arena},
        speed_plan_{visibility, arena},
        st_graph_{visibility, arena},
        sl_frame_{visibility, arena},
        obstacle_{visibility, arena},
        reference_line_{visibility, arena} {}

inline void PlanningData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, adc_position_),
           0,
           offsetof(Impl_, front_clear_distance_) -
               offsetof(Impl_, adc_position_) +
               sizeof(Impl_::front_clear_distance_));
}
PlanningData::~PlanningData() {
  // @@protoc_insertion_point(destructor:control.planning_internal.PlanningData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PlanningData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.adc_position_;
  delete _impl_.chassis_;
  delete _impl_.init_point_;
  delete _impl_.prediction_header_;
  delete _impl_.dp_poly_graph_;
  delete _impl_.lattice_st_image_;
  delete _impl_.auto_tuning_training_data_;
  delete _impl_.scenario_;
  delete _impl_.open_space_;
  delete _impl_.smoother_;
  delete _impl_.pull_over_;
  delete _impl_.hybrid_model_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PlanningData::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &PlanningData::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PlanningData>(),
            ::google::protobuf::Message::GetNewImpl<PlanningData>(),
            ::google::protobuf::Message::GetClearImpl<PlanningData>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<PlanningData>(),
                ::google::protobuf::Message::GetSerializeImpl<PlanningData>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PlanningData, _impl_._cached_size_),
            false,
        },
        &PlanningData::kDescriptorMethods,
        &descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PlanningData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 19, 18, 0, 2> PlanningData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlanningData, _impl_._has_bits_),
    0, // no _extensions_
    30, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    3240168735,  // skipmap
    offsetof(decltype(_table_), field_entries),
    19,  // num_field_entries
    18,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PlanningData_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::planning_internal::PlanningData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .control.common.Path path = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.path_)}},
    // optional .control.localization.LocalizationEstimate adc_position = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 0, 1, PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.adc_position_)}},
    // optional .control.canbus.Chassis chassis = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 1, 2, PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.chassis_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .control.common.TrajectoryPoint init_point = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 2, 3, PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.init_point_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .control.planning_internal.SpeedPlan speed_plan = 13;
    {::_pbi::TcParser::FastMtR1,
     {106, 63, 4, PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.speed_plan_)}},
    // repeated .control.planning_internal.STGraphDebug st_graph = 14;
    {::_pbi::TcParser::FastMtR1,
     {114, 63, 5, PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.st_graph_)}},
    // repeated .control.planning_internal.SLFrameDebug sl_frame = 15;
    {::_pbi::TcParser::FastMtR1,
     {122, 63, 6, PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.sl_frame_)}},
    // optional .control.common.Header prediction_header = 16;
    {::_pbi::TcParser::FastMtS2,
     {386, 3, 7, PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.prediction_header_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .control.planning_internal.ObstacleDebug obstacle = 18;
    {::_pbi::TcParser::FastMtR2,
     {402, 63, 8, PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.obstacle_)}},
    // repeated .control.planning_internal.ReferenceLineDebug reference_line = 19;
    {::_pbi::TcParser::FastMtR2,
     {410, 63, 9, PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.reference_line_)}},
    // optional .control.planning_internal.DpPolyGraphDebug dp_poly_graph = 20;
    {::_pbi::TcParser::FastMtS2,
     {418, 4, 10, PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.dp_poly_graph_)}},
    // optional .control.planning_internal.LatticeStTraining lattice_st_image = 21;
    {::_pbi::TcParser::FastMtS2,
     {426, 5, 11, PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.lattice_st_image_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .control.planning_internal.AutoTuningTrainingData auto_tuning_training_data = 23;
    {::_pbi::TcParser::FastMtS2,
     {442, 6, 12, PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.auto_tuning_training_data_)}},
    // optional double front_clear_distance = 24;
    {::_pbi::TcParser::FastF64S2,
     {449, 12, 0, PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.front_clear_distance_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .control.planning_internal.ScenarioDebug scenario = 26;
    {::_pbi::TcParser::FastMtS2,
     {466, 7, 13, PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.scenario_)}},
    // optional .control.planning_internal.OpenSpaceDebug open_space = 27;
    {::_pbi::TcParser::FastMtS2,
     {474, 8, 14, PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.open_space_)}},
    // optional .control.planning_internal.SmootherDebug smoother = 28;
    {::_pbi::TcParser::FastMtS2,
     {482, 9, 15, PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.smoother_)}},
    // optional .control.planning_internal.PullOverDebug pull_over = 29;
    {::_pbi::TcParser::FastMtS2,
     {490, 10, 16, PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.pull_over_)}},
    // optional .control.planning_internal.HybridModelDebug hybrid_model = 30;
    {::_pbi::TcParser::FastMtS2,
     {498, 11, 17, PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.hybrid_model_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .control.common.Path path = 6;
    {PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.path_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.localization.LocalizationEstimate adc_position = 7;
    {PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.adc_position_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.canbus.Chassis chassis = 8;
    {PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.chassis_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.common.TrajectoryPoint init_point = 10;
    {PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.init_point_), _Internal::kHasBitsOffset + 2, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .control.planning_internal.SpeedPlan speed_plan = 13;
    {PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.speed_plan_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .control.planning_internal.STGraphDebug st_graph = 14;
    {PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.st_graph_), -1, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .control.planning_internal.SLFrameDebug sl_frame = 15;
    {PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.sl_frame_), -1, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.common.Header prediction_header = 16;
    {PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.prediction_header_), _Internal::kHasBitsOffset + 3, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .control.planning_internal.ObstacleDebug obstacle = 18;
    {PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.obstacle_), -1, 8,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .control.planning_internal.ReferenceLineDebug reference_line = 19;
    {PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.reference_line_), -1, 9,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.planning_internal.DpPolyGraphDebug dp_poly_graph = 20;
    {PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.dp_poly_graph_), _Internal::kHasBitsOffset + 4, 10,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.planning_internal.LatticeStTraining lattice_st_image = 21;
    {PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.lattice_st_image_), _Internal::kHasBitsOffset + 5, 11,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.planning_internal.AutoTuningTrainingData auto_tuning_training_data = 23;
    {PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.auto_tuning_training_data_), _Internal::kHasBitsOffset + 6, 12,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional double front_clear_distance = 24;
    {PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.front_clear_distance_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional .control.planning_internal.ScenarioDebug scenario = 26;
    {PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.scenario_), _Internal::kHasBitsOffset + 7, 13,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.planning_internal.OpenSpaceDebug open_space = 27;
    {PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.open_space_), _Internal::kHasBitsOffset + 8, 14,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.planning_internal.SmootherDebug smoother = 28;
    {PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.smoother_), _Internal::kHasBitsOffset + 9, 15,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.planning_internal.PullOverDebug pull_over = 29;
    {PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.pull_over_), _Internal::kHasBitsOffset + 10, 16,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.planning_internal.HybridModelDebug hybrid_model = 30;
    {PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.hybrid_model_), _Internal::kHasBitsOffset + 11, 17,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::common::Path>()},
    {::_pbi::TcParser::GetTable<::control::localization::LocalizationEstimate>()},
    {::_pbi::TcParser::GetTable<::control::canbus::Chassis>()},
    {::_pbi::TcParser::GetTable<::control::common::TrajectoryPoint>()},
    {::_pbi::TcParser::GetTable<::control::planning_internal::SpeedPlan>()},
    {::_pbi::TcParser::GetTable<::control::planning_internal::STGraphDebug>()},
    {::_pbi::TcParser::GetTable<::control::planning_internal::SLFrameDebug>()},
    {::_pbi::TcParser::GetTable<::control::common::Header>()},
    {::_pbi::TcParser::GetTable<::control::planning_internal::ObstacleDebug>()},
    {::_pbi::TcParser::GetTable<::control::planning_internal::ReferenceLineDebug>()},
    {::_pbi::TcParser::GetTable<::control::planning_internal::DpPolyGraphDebug>()},
    {::_pbi::TcParser::GetTable<::control::planning_internal::LatticeStTraining>()},
    {::_pbi::TcParser::GetTable<::control::planning_internal::AutoTuningTrainingData>()},
    {::_pbi::TcParser::GetTable<::control::planning_internal::ScenarioDebug>()},
    {::_pbi::TcParser::GetTable<::control::planning_internal::OpenSpaceDebug>()},
    {::_pbi::TcParser::GetTable<::control::planning_internal::SmootherDebug>()},
    {::_pbi::TcParser::GetTable<::control::planning_internal::PullOverDebug>()},
    {::_pbi::TcParser::GetTable<::control::planning_internal::HybridModelDebug>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PlanningData::Clear() {
// @@protoc_insertion_point(message_clear_start:control.planning_internal.PlanningData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.Clear();
  _impl_.speed_plan_.Clear();
  _impl_.st_graph_.Clear();
  _impl_.sl_frame_.Clear();
  _impl_.obstacle_.Clear();
  _impl_.reference_line_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.adc_position_ != nullptr);
      _impl_.adc_position_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.chassis_ != nullptr);
      _impl_.chassis_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.init_point_ != nullptr);
      _impl_.init_point_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.prediction_header_ != nullptr);
      _impl_.prediction_header_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.dp_poly_graph_ != nullptr);
      _impl_.dp_poly_graph_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.lattice_st_image_ != nullptr);
      _impl_.lattice_st_image_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.auto_tuning_training_data_ != nullptr);
      _impl_.auto_tuning_training_data_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.scenario_ != nullptr);
      _impl_.scenario_->Clear();
    }
  }
  if (cached_has_bits & 0x00000f00u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(_impl_.open_space_ != nullptr);
      _impl_.open_space_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(_impl_.smoother_ != nullptr);
      _impl_.smoother_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(_impl_.pull_over_ != nullptr);
      _impl_.pull_over_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      ABSL_DCHECK(_impl_.hybrid_model_ != nullptr);
      _impl_.hybrid_model_->Clear();
    }
  }
  _impl_.front_clear_distance_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PlanningData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.planning_internal.PlanningData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .control.common.Path path = 6;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_path_size());
       i < n; i++) {
    const auto& repfield = this->_internal_path().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            6, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .control.localization.LocalizationEstimate adc_position = 7;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *_impl_.adc_position_, _impl_.adc_position_->GetCachedSize(), target, stream);
  }

  // optional .control.canbus.Chassis chassis = 8;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *_impl_.chassis_, _impl_.chassis_->GetCachedSize(), target, stream);
  }

  // optional .control.common.TrajectoryPoint init_point = 10;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        10, *_impl_.init_point_, _impl_.init_point_->GetCachedSize(), target, stream);
  }

  // repeated .control.planning_internal.SpeedPlan speed_plan = 13;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_speed_plan_size());
       i < n; i++) {
    const auto& repfield = this->_internal_speed_plan().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            13, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .control.planning_internal.STGraphDebug st_graph = 14;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_st_graph_size());
       i < n; i++) {
    const auto& repfield = this->_internal_st_graph().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            14, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .control.planning_internal.SLFrameDebug sl_frame = 15;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_sl_frame_size());
       i < n; i++) {
    const auto& repfield = this->_internal_sl_frame().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            15, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional .control.common.Header prediction_header = 16;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        16, *_impl_.prediction_header_, _impl_.prediction_header_->GetCachedSize(), target, stream);
  }

  // repeated .control.planning_internal.ObstacleDebug obstacle = 18;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_obstacle_size());
       i < n; i++) {
    const auto& repfield = this->_internal_obstacle().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            18, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .control.planning_internal.ReferenceLineDebug reference_line = 19;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_reference_line_size());
       i < n; i++) {
    const auto& repfield = this->_internal_reference_line().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            19, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional .control.planning_internal.DpPolyGraphDebug dp_poly_graph = 20;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        20, *_impl_.dp_poly_graph_, _impl_.dp_poly_graph_->GetCachedSize(), target, stream);
  }

  // optional .control.planning_internal.LatticeStTraining lattice_st_image = 21;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        21, *_impl_.lattice_st_image_, _impl_.lattice_st_image_->GetCachedSize(), target, stream);
  }

  // optional .control.planning_internal.AutoTuningTrainingData auto_tuning_training_data = 23;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        23, *_impl_.auto_tuning_training_data_, _impl_.auto_tuning_training_data_->GetCachedSize(), target, stream);
  }

  // optional double front_clear_distance = 24;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        24, this->_internal_front_clear_distance(), target);
  }

  // optional .control.planning_internal.ScenarioDebug scenario = 26;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        26, *_impl_.scenario_, _impl_.scenario_->GetCachedSize(), target, stream);
  }

  // optional .control.planning_internal.OpenSpaceDebug open_space = 27;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        27, *_impl_.open_space_, _impl_.open_space_->GetCachedSize(), target, stream);
  }

  // optional .control.planning_internal.SmootherDebug smoother = 28;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        28, *_impl_.smoother_, _impl_.smoother_->GetCachedSize(), target, stream);
  }

  // optional .control.planning_internal.PullOverDebug pull_over = 29;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        29, *_impl_.pull_over_, _impl_.pull_over_->GetCachedSize(), target, stream);
  }

  // optional .control.planning_internal.HybridModelDebug hybrid_model = 30;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        30, *_impl_.hybrid_model_, _impl_.hybrid_model_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.planning_internal.PlanningData)
  return target;
}

::size_t PlanningData::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.planning_internal.PlanningData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // repeated .control.common.Path path = 6;
     {
      total_size += 1UL * this->_internal_path_size();
      for (const auto& msg : this->_internal_path()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .control.planning_internal.SpeedPlan speed_plan = 13;
     {
      total_size += 1UL * this->_internal_speed_plan_size();
      for (const auto& msg : this->_internal_speed_plan()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .control.planning_internal.STGraphDebug st_graph = 14;
     {
      total_size += 1UL * this->_internal_st_graph_size();
      for (const auto& msg : this->_internal_st_graph()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .control.planning_internal.SLFrameDebug sl_frame = 15;
     {
      total_size += 1UL * this->_internal_sl_frame_size();
      for (const auto& msg : this->_internal_sl_frame()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .control.planning_internal.ObstacleDebug obstacle = 18;
     {
      total_size += 2UL * this->_internal_obstacle_size();
      for (const auto& msg : this->_internal_obstacle()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .control.planning_internal.ReferenceLineDebug reference_line = 19;
     {
      total_size += 2UL * this->_internal_reference_line_size();
      for (const auto& msg : this->_internal_reference_line()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .control.localization.LocalizationEstimate adc_position = 7;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.adc_position_);
    }
    // optional .control.canbus.Chassis chassis = 8;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.chassis_);
    }
    // optional .control.common.TrajectoryPoint init_point = 10;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.init_point_);
    }
    // optional .control.common.Header prediction_header = 16;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.prediction_header_);
    }
    // optional .control.planning_internal.DpPolyGraphDebug dp_poly_graph = 20;
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.dp_poly_graph_);
    }
    // optional .control.planning_internal.LatticeStTraining lattice_st_image = 21;
    if (cached_has_bits & 0x00000020u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.lattice_st_image_);
    }
    // optional .control.planning_internal.AutoTuningTrainingData auto_tuning_training_data = 23;
    if (cached_has_bits & 0x00000040u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.auto_tuning_training_data_);
    }
    // optional .control.planning_internal.ScenarioDebug scenario = 26;
    if (cached_has_bits & 0x00000080u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.scenario_);
    }
  }
  if (cached_has_bits & 0x00001f00u) {
    // optional .control.planning_internal.OpenSpaceDebug open_space = 27;
    if (cached_has_bits & 0x00000100u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.open_space_);
    }
    // optional .control.planning_internal.SmootherDebug smoother = 28;
    if (cached_has_bits & 0x00000200u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.smoother_);
    }
    // optional .control.planning_internal.PullOverDebug pull_over = 29;
    if (cached_has_bits & 0x00000400u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.pull_over_);
    }
    // optional .control.planning_internal.HybridModelDebug hybrid_model = 30;
    if (cached_has_bits & 0x00000800u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.hybrid_model_);
    }
    // optional double front_clear_distance = 24;
    if (cached_has_bits & 0x00001000u) {
      total_size += 10;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void PlanningData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlanningData*>(&to_msg);
  auto& from = static_cast<const PlanningData&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:control.planning_internal.PlanningData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_path()->MergeFrom(
      from._internal_path());
  _this->_internal_mutable_speed_plan()->MergeFrom(
      from._internal_speed_plan());
  _this->_internal_mutable_st_graph()->MergeFrom(
      from._internal_st_graph());
  _this->_internal_mutable_sl_frame()->MergeFrom(
      from._internal_sl_frame());
  _this->_internal_mutable_obstacle()->MergeFrom(
      from._internal_obstacle());
  _this->_internal_mutable_reference_line()->MergeFrom(
      from._internal_reference_line());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.adc_position_ != nullptr);
      if (_this->_impl_.adc_position_ == nullptr) {
        _this->_impl_.adc_position_ =
            ::google::protobuf::Message::CopyConstruct<::control::localization::LocalizationEstimate>(arena, *from._impl_.adc_position_);
      } else {
        _this->_impl_.adc_position_->MergeFrom(*from._impl_.adc_position_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.chassis_ != nullptr);
      if (_this->_impl_.chassis_ == nullptr) {
        _this->_impl_.chassis_ =
            ::google::protobuf::Message::CopyConstruct<::control::canbus::Chassis>(arena, *from._impl_.chassis_);
      } else {
        _this->_impl_.chassis_->MergeFrom(*from._impl_.chassis_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.init_point_ != nullptr);
      if (_this->_impl_.init_point_ == nullptr) {
        _this->_impl_.init_point_ =
            ::google::protobuf::Message::CopyConstruct<::control::common::TrajectoryPoint>(arena, *from._impl_.init_point_);
      } else {
        _this->_impl_.init_point_->MergeFrom(*from._impl_.init_point_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.prediction_header_ != nullptr);
      if (_this->_impl_.prediction_header_ == nullptr) {
        _this->_impl_.prediction_header_ =
            ::google::protobuf::Message::CopyConstruct<::control::common::Header>(arena, *from._impl_.prediction_header_);
      } else {
        _this->_impl_.prediction_header_->MergeFrom(*from._impl_.prediction_header_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.dp_poly_graph_ != nullptr);
      if (_this->_impl_.dp_poly_graph_ == nullptr) {
        _this->_impl_.dp_poly_graph_ =
            ::google::protobuf::Message::CopyConstruct<::control::planning_internal::DpPolyGraphDebug>(arena, *from._impl_.dp_poly_graph_);
      } else {
        _this->_impl_.dp_poly_graph_->MergeFrom(*from._impl_.dp_poly_graph_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.lattice_st_image_ != nullptr);
      if (_this->_impl_.lattice_st_image_ == nullptr) {
        _this->_impl_.lattice_st_image_ =
            ::google::protobuf::Message::CopyConstruct<::control::planning_internal::LatticeStTraining>(arena, *from._impl_.lattice_st_image_);
      } else {
        _this->_impl_.lattice_st_image_->MergeFrom(*from._impl_.lattice_st_image_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.auto_tuning_training_data_ != nullptr);
      if (_this->_impl_.auto_tuning_training_data_ == nullptr) {
        _this->_impl_.auto_tuning_training_data_ =
            ::google::protobuf::Message::CopyConstruct<::control::planning_internal::AutoTuningTrainingData>(arena, *from._impl_.auto_tuning_training_data_);
      } else {
        _this->_impl_.auto_tuning_training_data_->MergeFrom(*from._impl_.auto_tuning_training_data_);
      }
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(from._impl_.scenario_ != nullptr);
      if (_this->_impl_.scenario_ == nullptr) {
        _this->_impl_.scenario_ =
            ::google::protobuf::Message::CopyConstruct<::control::planning_internal::ScenarioDebug>(arena, *from._impl_.scenario_);
      } else {
        _this->_impl_.scenario_->MergeFrom(*from._impl_.scenario_);
      }
    }
  }
  if (cached_has_bits & 0x00001f00u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(from._impl_.open_space_ != nullptr);
      if (_this->_impl_.open_space_ == nullptr) {
        _this->_impl_.open_space_ =
            ::google::protobuf::Message::CopyConstruct<::control::planning_internal::OpenSpaceDebug>(arena, *from._impl_.open_space_);
      } else {
        _this->_impl_.open_space_->MergeFrom(*from._impl_.open_space_);
      }
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(from._impl_.smoother_ != nullptr);
      if (_this->_impl_.smoother_ == nullptr) {
        _this->_impl_.smoother_ =
            ::google::protobuf::Message::CopyConstruct<::control::planning_internal::SmootherDebug>(arena, *from._impl_.smoother_);
      } else {
        _this->_impl_.smoother_->MergeFrom(*from._impl_.smoother_);
      }
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(from._impl_.pull_over_ != nullptr);
      if (_this->_impl_.pull_over_ == nullptr) {
        _this->_impl_.pull_over_ =
            ::google::protobuf::Message::CopyConstruct<::control::planning_internal::PullOverDebug>(arena, *from._impl_.pull_over_);
      } else {
        _this->_impl_.pull_over_->MergeFrom(*from._impl_.pull_over_);
      }
    }
    if (cached_has_bits & 0x00000800u) {
      ABSL_DCHECK(from._impl_.hybrid_model_ != nullptr);
      if (_this->_impl_.hybrid_model_ == nullptr) {
        _this->_impl_.hybrid_model_ =
            ::google::protobuf::Message::CopyConstruct<::control::planning_internal::HybridModelDebug>(arena, *from._impl_.hybrid_model_);
      } else {
        _this->_impl_.hybrid_model_->MergeFrom(*from._impl_.hybrid_model_);
      }
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.front_clear_distance_ = from._impl_.front_clear_distance_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlanningData::CopyFrom(const PlanningData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.planning_internal.PlanningData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlanningData::InternalSwap(PlanningData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.path_.InternalSwap(&other->_impl_.path_);
  _impl_.speed_plan_.InternalSwap(&other->_impl_.speed_plan_);
  _impl_.st_graph_.InternalSwap(&other->_impl_.st_graph_);
  _impl_.sl_frame_.InternalSwap(&other->_impl_.sl_frame_);
  _impl_.obstacle_.InternalSwap(&other->_impl_.obstacle_);
  _impl_.reference_line_.InternalSwap(&other->_impl_.reference_line_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.front_clear_distance_)
      + sizeof(PlanningData::_impl_.front_clear_distance_)
      - PROTOBUF_FIELD_OFFSET(PlanningData, _impl_.adc_position_)>(
          reinterpret_cast<char*>(&_impl_.adc_position_),
          reinterpret_cast<char*>(&other->_impl_.adc_position_));
}

::google::protobuf::Metadata PlanningData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LatticeStPixel::_Internal {
 public:
  using HasBits =
      decltype(std::declval<LatticeStPixel>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LatticeStPixel, _impl_._has_bits_);
};

LatticeStPixel::LatticeStPixel(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.planning_internal.LatticeStPixel)
}
LatticeStPixel::LatticeStPixel(
    ::google::protobuf::Arena* arena, const LatticeStPixel& from)
    : LatticeStPixel(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE LatticeStPixel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void LatticeStPixel::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, s_),
           0,
           offsetof(Impl_, b_) -
               offsetof(Impl_, s_) +
               sizeof(Impl_::b_));
}
LatticeStPixel::~LatticeStPixel() {
  // @@protoc_insertion_point(destructor:control.planning_internal.LatticeStPixel)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LatticeStPixel::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    LatticeStPixel::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &LatticeStPixel::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<LatticeStPixel>(),
            ::google::protobuf::Message::GetNewImpl<LatticeStPixel>(),
            ::google::protobuf::Message::GetClearImpl<LatticeStPixel>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<LatticeStPixel>(),
                ::google::protobuf::Message::GetSerializeImpl<LatticeStPixel>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(LatticeStPixel, _impl_._cached_size_),
            false,
        },
        &LatticeStPixel::kDescriptorMethods,
        &descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* LatticeStPixel::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> LatticeStPixel::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LatticeStPixel, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LatticeStPixel_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::planning_internal::LatticeStPixel>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 s = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LatticeStPixel, _impl_.s_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(LatticeStPixel, _impl_.s_)}},
    // optional int32 t = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LatticeStPixel, _impl_.t_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(LatticeStPixel, _impl_.t_)}},
    // optional uint32 r = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LatticeStPixel, _impl_.r_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(LatticeStPixel, _impl_.r_)}},
    // optional uint32 g = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LatticeStPixel, _impl_.g_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(LatticeStPixel, _impl_.g_)}},
    // optional uint32 b = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LatticeStPixel, _impl_.b_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(LatticeStPixel, _impl_.b_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 s = 1;
    {PROTOBUF_FIELD_OFFSET(LatticeStPixel, _impl_.s_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 t = 2;
    {PROTOBUF_FIELD_OFFSET(LatticeStPixel, _impl_.t_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 r = 3;
    {PROTOBUF_FIELD_OFFSET(LatticeStPixel, _impl_.r_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 g = 4;
    {PROTOBUF_FIELD_OFFSET(LatticeStPixel, _impl_.g_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 b = 5;
    {PROTOBUF_FIELD_OFFSET(LatticeStPixel, _impl_.b_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void LatticeStPixel::Clear() {
// @@protoc_insertion_point(message_clear_start:control.planning_internal.LatticeStPixel)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.s_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.b_) -
        reinterpret_cast<char*>(&_impl_.s_)) + sizeof(_impl_.b_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* LatticeStPixel::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.planning_internal.LatticeStPixel)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 s = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_s(), target);
  }

  // optional int32 t = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_t(), target);
  }

  // optional uint32 r = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_r(), target);
  }

  // optional uint32 g = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_g(), target);
  }

  // optional uint32 b = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_b(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.planning_internal.LatticeStPixel)
  return target;
}

::size_t LatticeStPixel::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.planning_internal.LatticeStPixel)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional int32 s = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_s());
    }
    // optional int32 t = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_t());
    }
    // optional uint32 r = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_r());
    }
    // optional uint32 g = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_g());
    }
    // optional uint32 b = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_b());
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void LatticeStPixel::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LatticeStPixel*>(&to_msg);
  auto& from = static_cast<const LatticeStPixel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.planning_internal.LatticeStPixel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.s_ = from._impl_.s_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.t_ = from._impl_.t_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.r_ = from._impl_.r_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.g_ = from._impl_.g_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.b_ = from._impl_.b_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LatticeStPixel::CopyFrom(const LatticeStPixel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.planning_internal.LatticeStPixel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LatticeStPixel::InternalSwap(LatticeStPixel* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LatticeStPixel, _impl_.b_)
      + sizeof(LatticeStPixel::_impl_.b_)
      - PROTOBUF_FIELD_OFFSET(LatticeStPixel, _impl_.s_)>(
          reinterpret_cast<char*>(&_impl_.s_),
          reinterpret_cast<char*>(&other->_impl_.s_));
}

::google::protobuf::Metadata LatticeStPixel::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LatticeStTraining::_Internal {
 public:
  using HasBits =
      decltype(std::declval<LatticeStTraining>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LatticeStTraining, _impl_._has_bits_);
};

LatticeStTraining::LatticeStTraining(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.planning_internal.LatticeStTraining)
}
inline PROTOBUF_NDEBUG_INLINE LatticeStTraining::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::planning_internal::LatticeStTraining& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        pixel_{visibility, arena, from.pixel_},
        annotation_(arena, from.annotation_) {}

LatticeStTraining::LatticeStTraining(
    ::google::protobuf::Arena* arena,
    const LatticeStTraining& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LatticeStTraining* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, t_resolution_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::t_resolution_));

  // @@protoc_insertion_point(copy_constructor:control.planning_internal.LatticeStTraining)
}
inline PROTOBUF_NDEBUG_INLINE LatticeStTraining::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        pixel_{visibility, arena},
        annotation_(arena) {}

inline void LatticeStTraining::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, t_resolution_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::t_resolution_));
}
LatticeStTraining::~LatticeStTraining() {
  // @@protoc_insertion_point(destructor:control.planning_internal.LatticeStTraining)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LatticeStTraining::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.annotation_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    LatticeStTraining::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &LatticeStTraining::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<LatticeStTraining>(),
            ::google::protobuf::Message::GetNewImpl<LatticeStTraining>(),
            ::google::protobuf::Message::GetClearImpl<LatticeStTraining>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<LatticeStTraining>(),
                ::google::protobuf::Message::GetSerializeImpl<LatticeStTraining>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(LatticeStTraining, _impl_._cached_size_),
            false,
        },
        &LatticeStTraining::kDescriptorMethods,
        &descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* LatticeStTraining::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 62, 2> LatticeStTraining::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LatticeStTraining, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_LatticeStTraining_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::planning_internal::LatticeStTraining>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .control.planning_internal.LatticeStPixel pixel = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LatticeStTraining, _impl_.pixel_)}},
    // optional double timestamp = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(LatticeStTraining, _impl_.timestamp_)}},
    // optional string annotation = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(LatticeStTraining, _impl_.annotation_)}},
    // optional uint32 num_s_grids = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LatticeStTraining, _impl_.num_s_grids_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(LatticeStTraining, _impl_.num_s_grids_)}},
    // optional uint32 num_t_grids = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LatticeStTraining, _impl_.num_t_grids_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(LatticeStTraining, _impl_.num_t_grids_)}},
    // optional double s_resolution = 6;
    {::_pbi::TcParser::FastF64S1,
     {49, 4, 0, PROTOBUF_FIELD_OFFSET(LatticeStTraining, _impl_.s_resolution_)}},
    // optional double t_resolution = 7;
    {::_pbi::TcParser::FastF64S1,
     {57, 5, 0, PROTOBUF_FIELD_OFFSET(LatticeStTraining, _impl_.t_resolution_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .control.planning_internal.LatticeStPixel pixel = 1;
    {PROTOBUF_FIELD_OFFSET(LatticeStTraining, _impl_.pixel_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional double timestamp = 2;
    {PROTOBUF_FIELD_OFFSET(LatticeStTraining, _impl_.timestamp_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional string annotation = 3;
    {PROTOBUF_FIELD_OFFSET(LatticeStTraining, _impl_.annotation_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 num_s_grids = 4;
    {PROTOBUF_FIELD_OFFSET(LatticeStTraining, _impl_.num_s_grids_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 num_t_grids = 5;
    {PROTOBUF_FIELD_OFFSET(LatticeStTraining, _impl_.num_t_grids_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional double s_resolution = 6;
    {PROTOBUF_FIELD_OFFSET(LatticeStTraining, _impl_.s_resolution_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double t_resolution = 7;
    {PROTOBUF_FIELD_OFFSET(LatticeStTraining, _impl_.t_resolution_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::planning_internal::LatticeStPixel>()},
  }}, {{
    "\53\0\0\12\0\0\0\0"
    "control.planning_internal.LatticeStTraining"
    "annotation"
  }},
};

PROTOBUF_NOINLINE void LatticeStTraining::Clear() {
// @@protoc_insertion_point(message_clear_start:control.planning_internal.LatticeStTraining)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pixel_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.annotation_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000003eu) {
    ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.t_resolution_) -
        reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.t_resolution_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* LatticeStTraining::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.planning_internal.LatticeStTraining)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .control.planning_internal.LatticeStPixel pixel = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_pixel_size());
       i < n; i++) {
    const auto& repfield = this->_internal_pixel().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional double timestamp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_timestamp(), target);
  }

  // optional string annotation = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_annotation();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "control.planning_internal.LatticeStTraining.annotation");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional uint32 num_s_grids = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_num_s_grids(), target);
  }

  // optional uint32 num_t_grids = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_num_t_grids(), target);
  }

  // optional double s_resolution = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        6, this->_internal_s_resolution(), target);
  }

  // optional double t_resolution = 7;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        7, this->_internal_t_resolution(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.planning_internal.LatticeStTraining)
  return target;
}

::size_t LatticeStTraining::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.planning_internal.LatticeStTraining)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // repeated .control.planning_internal.LatticeStPixel pixel = 1;
     {
      total_size += 1UL * this->_internal_pixel_size();
      for (const auto& msg : this->_internal_pixel()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string annotation = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_annotation());
    }
    // optional double timestamp = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }
    // optional uint32 num_s_grids = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_num_s_grids());
    }
    // optional uint32 num_t_grids = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_num_t_grids());
    }
    // optional double s_resolution = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 9;
    }
    // optional double t_resolution = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += 9;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void LatticeStTraining::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LatticeStTraining*>(&to_msg);
  auto& from = static_cast<const LatticeStTraining&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.planning_internal.LatticeStTraining)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_pixel()->MergeFrom(
      from._internal_pixel());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_annotation(from._internal_annotation());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.timestamp_ = from._impl_.timestamp_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.num_s_grids_ = from._impl_.num_s_grids_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.num_t_grids_ = from._impl_.num_t_grids_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.s_resolution_ = from._impl_.s_resolution_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.t_resolution_ = from._impl_.t_resolution_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LatticeStTraining::CopyFrom(const LatticeStTraining& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.planning_internal.LatticeStTraining)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LatticeStTraining::InternalSwap(LatticeStTraining* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.pixel_.InternalSwap(&other->_impl_.pixel_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.annotation_, &other->_impl_.annotation_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LatticeStTraining, _impl_.t_resolution_)
      + sizeof(LatticeStTraining::_impl_.t_resolution_)
      - PROTOBUF_FIELD_OFFSET(LatticeStTraining, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata LatticeStTraining::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CostComponents::_Internal {
 public:
};

CostComponents::CostComponents(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.planning_internal.CostComponents)
}
inline PROTOBUF_NDEBUG_INLINE CostComponents::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::planning_internal::CostComponents& from_msg)
      : cost_component_{visibility, arena, from.cost_component_},
        _cached_size_{0} {}

CostComponents::CostComponents(
    ::google::protobuf::Arena* arena,
    const CostComponents& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CostComponents* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:control.planning_internal.CostComponents)
}
inline PROTOBUF_NDEBUG_INLINE CostComponents::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : cost_component_{visibility, arena},
        _cached_size_{0} {}

inline void CostComponents::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CostComponents::~CostComponents() {
  // @@protoc_insertion_point(destructor:control.planning_internal.CostComponents)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CostComponents::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    CostComponents::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &CostComponents::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<CostComponents>(),
            ::google::protobuf::Message::GetNewImpl<CostComponents>(),
            ::google::protobuf::Message::GetClearImpl<CostComponents>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<CostComponents>(),
                ::google::protobuf::Message::GetSerializeImpl<CostComponents>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(CostComponents, _impl_._cached_size_),
            false,
        },
        &CostComponents::kDescriptorMethods,
        &descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* CostComponents::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CostComponents::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CostComponents_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::planning_internal::CostComponents>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated double cost_component = 1;
    {::_pbi::TcParser::FastF64R1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(CostComponents, _impl_.cost_component_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated double cost_component = 1;
    {PROTOBUF_FIELD_OFFSET(CostComponents, _impl_.cost_component_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CostComponents::Clear() {
// @@protoc_insertion_point(message_clear_start:control.planning_internal.CostComponents)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cost_component_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CostComponents::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.planning_internal.CostComponents)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated double cost_component = 1;
  for (int i = 0, n = this->_internal_cost_component_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_cost_component().Get(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.planning_internal.CostComponents)
  return target;
}

::size_t CostComponents::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.planning_internal.CostComponents)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // repeated double cost_component = 1;
     {
      std::size_t data_size = std::size_t{8} *
          ::_pbi::FromIntSize(this->_internal_cost_component_size())
      ;
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this->_internal_cost_component_size());
      ;
      total_size += tag_size + data_size;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void CostComponents::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CostComponents*>(&to_msg);
  auto& from = static_cast<const CostComponents&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.planning_internal.CostComponents)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_cost_component()->MergeFrom(from._internal_cost_component());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CostComponents::CopyFrom(const CostComponents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.planning_internal.CostComponents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CostComponents::InternalSwap(CostComponents* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.cost_component_.InternalSwap(&other->_impl_.cost_component_);
}

::google::protobuf::Metadata CostComponents::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AutoTuningTrainingData::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AutoTuningTrainingData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AutoTuningTrainingData, _impl_._has_bits_);
};

AutoTuningTrainingData::AutoTuningTrainingData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.planning_internal.AutoTuningTrainingData)
}
inline PROTOBUF_NDEBUG_INLINE AutoTuningTrainingData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::planning_internal::AutoTuningTrainingData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

AutoTuningTrainingData::AutoTuningTrainingData(
    ::google::protobuf::Arena* arena,
    const AutoTuningTrainingData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AutoTuningTrainingData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.teacher_component_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::control::planning_internal::CostComponents>(
                              arena, *from._impl_.teacher_component_)
                        : nullptr;
  _impl_.student_component_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::control::planning_internal::CostComponents>(
                              arena, *from._impl_.student_component_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:control.planning_internal.AutoTuningTrainingData)
}
inline PROTOBUF_NDEBUG_INLINE AutoTuningTrainingData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AutoTuningTrainingData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, teacher_component_),
           0,
           offsetof(Impl_, student_component_) -
               offsetof(Impl_, teacher_component_) +
               sizeof(Impl_::student_component_));
}
AutoTuningTrainingData::~AutoTuningTrainingData() {
  // @@protoc_insertion_point(destructor:control.planning_internal.AutoTuningTrainingData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AutoTuningTrainingData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.teacher_component_;
  delete _impl_.student_component_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    AutoTuningTrainingData::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &AutoTuningTrainingData::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<AutoTuningTrainingData>(),
            ::google::protobuf::Message::GetNewImpl<AutoTuningTrainingData>(),
            ::google::protobuf::Message::GetClearImpl<AutoTuningTrainingData>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<AutoTuningTrainingData>(),
                ::google::protobuf::Message::GetSerializeImpl<AutoTuningTrainingData>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(AutoTuningTrainingData, _impl_._cached_size_),
            false,
        },
        &AutoTuningTrainingData::kDescriptorMethods,
        &descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* AutoTuningTrainingData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> AutoTuningTrainingData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AutoTuningTrainingData, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AutoTuningTrainingData_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::planning_internal::AutoTuningTrainingData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .control.planning_internal.CostComponents student_component = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(AutoTuningTrainingData, _impl_.student_component_)}},
    // optional .control.planning_internal.CostComponents teacher_component = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AutoTuningTrainingData, _impl_.teacher_component_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .control.planning_internal.CostComponents teacher_component = 1;
    {PROTOBUF_FIELD_OFFSET(AutoTuningTrainingData, _impl_.teacher_component_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .control.planning_internal.CostComponents student_component = 2;
    {PROTOBUF_FIELD_OFFSET(AutoTuningTrainingData, _impl_.student_component_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::planning_internal::CostComponents>()},
    {::_pbi::TcParser::GetTable<::control::planning_internal::CostComponents>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void AutoTuningTrainingData::Clear() {
// @@protoc_insertion_point(message_clear_start:control.planning_internal.AutoTuningTrainingData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.teacher_component_ != nullptr);
      _impl_.teacher_component_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.student_component_ != nullptr);
      _impl_.student_component_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* AutoTuningTrainingData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.planning_internal.AutoTuningTrainingData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .control.planning_internal.CostComponents teacher_component = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.teacher_component_, _impl_.teacher_component_->GetCachedSize(), target, stream);
  }

  // optional .control.planning_internal.CostComponents student_component = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.student_component_, _impl_.student_component_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.planning_internal.AutoTuningTrainingData)
  return target;
}

::size_t AutoTuningTrainingData::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.planning_internal.AutoTuningTrainingData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .control.planning_internal.CostComponents teacher_component = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.teacher_component_);
    }
    // optional .control.planning_internal.CostComponents student_component = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.student_component_);
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void AutoTuningTrainingData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AutoTuningTrainingData*>(&to_msg);
  auto& from = static_cast<const AutoTuningTrainingData&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:control.planning_internal.AutoTuningTrainingData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.teacher_component_ != nullptr);
      if (_this->_impl_.teacher_component_ == nullptr) {
        _this->_impl_.teacher_component_ =
            ::google::protobuf::Message::CopyConstruct<::control::planning_internal::CostComponents>(arena, *from._impl_.teacher_component_);
      } else {
        _this->_impl_.teacher_component_->MergeFrom(*from._impl_.teacher_component_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.student_component_ != nullptr);
      if (_this->_impl_.student_component_ == nullptr) {
        _this->_impl_.student_component_ =
            ::google::protobuf::Message::CopyConstruct<::control::planning_internal::CostComponents>(arena, *from._impl_.student_component_);
      } else {
        _this->_impl_.student_component_->MergeFrom(*from._impl_.student_component_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AutoTuningTrainingData::CopyFrom(const AutoTuningTrainingData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.planning_internal.AutoTuningTrainingData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AutoTuningTrainingData::InternalSwap(AutoTuningTrainingData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AutoTuningTrainingData, _impl_.student_component_)
      + sizeof(AutoTuningTrainingData::_impl_.student_component_)
      - PROTOBUF_FIELD_OFFSET(AutoTuningTrainingData, _impl_.teacher_component_)>(
          reinterpret_cast<char*>(&_impl_.teacher_component_),
          reinterpret_cast<char*>(&other->_impl_.teacher_component_));
}

::google::protobuf::Metadata AutoTuningTrainingData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CloudReferenceLineResponse::_Internal {
 public:
};

void CloudReferenceLineResponse::clear_segment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segment_.Clear();
}
CloudReferenceLineResponse::CloudReferenceLineResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.planning_internal.CloudReferenceLineResponse)
}
inline PROTOBUF_NDEBUG_INLINE CloudReferenceLineResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::planning_internal::CloudReferenceLineResponse& from_msg)
      : segment_{visibility, arena, from.segment_},
        _cached_size_{0} {}

CloudReferenceLineResponse::CloudReferenceLineResponse(
    ::google::protobuf::Arena* arena,
    const CloudReferenceLineResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CloudReferenceLineResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:control.planning_internal.CloudReferenceLineResponse)
}
inline PROTOBUF_NDEBUG_INLINE CloudReferenceLineResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : segment_{visibility, arena},
        _cached_size_{0} {}

inline void CloudReferenceLineResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CloudReferenceLineResponse::~CloudReferenceLineResponse() {
  // @@protoc_insertion_point(destructor:control.planning_internal.CloudReferenceLineResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CloudReferenceLineResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    CloudReferenceLineResponse::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &CloudReferenceLineResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<CloudReferenceLineResponse>(),
            ::google::protobuf::Message::GetNewImpl<CloudReferenceLineResponse>(),
            ::google::protobuf::Message::GetClearImpl<CloudReferenceLineResponse>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<CloudReferenceLineResponse>(),
                ::google::protobuf::Message::GetSerializeImpl<CloudReferenceLineResponse>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(CloudReferenceLineResponse, _impl_._cached_size_),
            false,
        },
        &CloudReferenceLineResponse::kDescriptorMethods,
        &descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* CloudReferenceLineResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CloudReferenceLineResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CloudReferenceLineResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::planning_internal::CloudReferenceLineResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .control.common.Path segment = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CloudReferenceLineResponse, _impl_.segment_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .control.common.Path segment = 1;
    {PROTOBUF_FIELD_OFFSET(CloudReferenceLineResponse, _impl_.segment_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::common::Path>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CloudReferenceLineResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:control.planning_internal.CloudReferenceLineResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.segment_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CloudReferenceLineResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.planning_internal.CloudReferenceLineResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .control.common.Path segment = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_segment_size());
       i < n; i++) {
    const auto& repfield = this->_internal_segment().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.planning_internal.CloudReferenceLineResponse)
  return target;
}

::size_t CloudReferenceLineResponse::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.planning_internal.CloudReferenceLineResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // repeated .control.common.Path segment = 1;
     {
      total_size += 1UL * this->_internal_segment_size();
      for (const auto& msg : this->_internal_segment()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void CloudReferenceLineResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CloudReferenceLineResponse*>(&to_msg);
  auto& from = static_cast<const CloudReferenceLineResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.planning_internal.CloudReferenceLineResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_segment()->MergeFrom(
      from._internal_segment());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CloudReferenceLineResponse::CopyFrom(const CloudReferenceLineResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.planning_internal.CloudReferenceLineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CloudReferenceLineResponse::InternalSwap(CloudReferenceLineResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.segment_.InternalSwap(&other->_impl_.segment_);
}

::google::protobuf::Metadata CloudReferenceLineResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HybridModelDebug::_Internal {
 public:
  using HasBits =
      decltype(std::declval<HybridModelDebug>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HybridModelDebug, _impl_._has_bits_);
};

void HybridModelDebug::clear_evaluated_path_reference() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.evaluated_path_reference_ != nullptr) _impl_.evaluated_path_reference_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
HybridModelDebug::HybridModelDebug(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.planning_internal.HybridModelDebug)
}
inline PROTOBUF_NDEBUG_INLINE HybridModelDebug::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::planning_internal::HybridModelDebug& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        learning_model_output_fail_reason_(arena, from.learning_model_output_fail_reason_) {}

HybridModelDebug::HybridModelDebug(
    ::google::protobuf::Arena* arena,
    const HybridModelDebug& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HybridModelDebug* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.evaluated_path_reference_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::control::common::Path>(
                              arena, *from._impl_.evaluated_path_reference_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, learning_model_output_usage_ratio_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, learning_model_output_usage_ratio_),
           offsetof(Impl_, using_learning_model_output_) -
               offsetof(Impl_, learning_model_output_usage_ratio_) +
               sizeof(Impl_::using_learning_model_output_));

  // @@protoc_insertion_point(copy_constructor:control.planning_internal.HybridModelDebug)
}
inline PROTOBUF_NDEBUG_INLINE HybridModelDebug::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        learning_model_output_fail_reason_(arena) {}

inline void HybridModelDebug::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, evaluated_path_reference_),
           0,
           offsetof(Impl_, using_learning_model_output_) -
               offsetof(Impl_, evaluated_path_reference_) +
               sizeof(Impl_::using_learning_model_output_));
}
HybridModelDebug::~HybridModelDebug() {
  // @@protoc_insertion_point(destructor:control.planning_internal.HybridModelDebug)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HybridModelDebug::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.learning_model_output_fail_reason_.Destroy();
  delete _impl_.evaluated_path_reference_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    HybridModelDebug::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &HybridModelDebug::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<HybridModelDebug>(),
            ::google::protobuf::Message::GetNewImpl<HybridModelDebug>(),
            ::google::protobuf::Message::GetClearImpl<HybridModelDebug>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<HybridModelDebug>(),
                ::google::protobuf::Message::GetSerializeImpl<HybridModelDebug>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(HybridModelDebug, _impl_._cached_size_),
            false,
        },
        &HybridModelDebug::kDescriptorMethods,
        &descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* HybridModelDebug::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 84, 2> HybridModelDebug::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HybridModelDebug, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_HybridModelDebug_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::planning_internal::HybridModelDebug>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .control.common.Path evaluated_path_reference = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(HybridModelDebug, _impl_.evaluated_path_reference_)}},
    // optional bool using_learning_model_output = 1 [default = false];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(HybridModelDebug, _impl_.using_learning_model_output_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(HybridModelDebug, _impl_.using_learning_model_output_)}},
    // optional double learning_model_output_usage_ratio = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 2, 0, PROTOBUF_FIELD_OFFSET(HybridModelDebug, _impl_.learning_model_output_usage_ratio_)}},
    // optional string learning_model_output_fail_reason = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(HybridModelDebug, _impl_.learning_model_output_fail_reason_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool using_learning_model_output = 1 [default = false];
    {PROTOBUF_FIELD_OFFSET(HybridModelDebug, _impl_.using_learning_model_output_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional double learning_model_output_usage_ratio = 2;
    {PROTOBUF_FIELD_OFFSET(HybridModelDebug, _impl_.learning_model_output_usage_ratio_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional string learning_model_output_fail_reason = 3;
    {PROTOBUF_FIELD_OFFSET(HybridModelDebug, _impl_.learning_model_output_fail_reason_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .control.common.Path evaluated_path_reference = 4;
    {PROTOBUF_FIELD_OFFSET(HybridModelDebug, _impl_.evaluated_path_reference_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::common::Path>()},
  }}, {{
    "\52\0\0\41\0\0\0\0"
    "control.planning_internal.HybridModelDebug"
    "learning_model_output_fail_reason"
  }},
};

PROTOBUF_NOINLINE void HybridModelDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:control.planning_internal.HybridModelDebug)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.learning_model_output_fail_reason_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.evaluated_path_reference_ != nullptr);
      _impl_.evaluated_path_reference_->Clear();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&_impl_.learning_model_output_usage_ratio_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.using_learning_model_output_) -
        reinterpret_cast<char*>(&_impl_.learning_model_output_usage_ratio_)) + sizeof(_impl_.using_learning_model_output_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* HybridModelDebug::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.planning_internal.HybridModelDebug)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool using_learning_model_output = 1 [default = false];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_using_learning_model_output(), target);
  }

  // optional double learning_model_output_usage_ratio = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_learning_model_output_usage_ratio(), target);
  }

  // optional string learning_model_output_fail_reason = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_learning_model_output_fail_reason();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "control.planning_internal.HybridModelDebug.learning_model_output_fail_reason");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional .control.common.Path evaluated_path_reference = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.evaluated_path_reference_, _impl_.evaluated_path_reference_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.planning_internal.HybridModelDebug)
  return target;
}

::size_t HybridModelDebug::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.planning_internal.HybridModelDebug)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string learning_model_output_fail_reason = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_learning_model_output_fail_reason());
    }
    // optional .control.common.Path evaluated_path_reference = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.evaluated_path_reference_);
    }
    // optional double learning_model_output_usage_ratio = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 9;
    }
    // optional bool using_learning_model_output = 1 [default = false];
    if (cached_has_bits & 0x00000008u) {
      total_size += 2;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void HybridModelDebug::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HybridModelDebug*>(&to_msg);
  auto& from = static_cast<const HybridModelDebug&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:control.planning_internal.HybridModelDebug)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_learning_model_output_fail_reason(from._internal_learning_model_output_fail_reason());
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.evaluated_path_reference_ != nullptr);
      if (_this->_impl_.evaluated_path_reference_ == nullptr) {
        _this->_impl_.evaluated_path_reference_ =
            ::google::protobuf::Message::CopyConstruct<::control::common::Path>(arena, *from._impl_.evaluated_path_reference_);
      } else {
        _this->_impl_.evaluated_path_reference_->MergeFrom(*from._impl_.evaluated_path_reference_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.learning_model_output_usage_ratio_ = from._impl_.learning_model_output_usage_ratio_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.using_learning_model_output_ = from._impl_.using_learning_model_output_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HybridModelDebug::CopyFrom(const HybridModelDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.planning_internal.HybridModelDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HybridModelDebug::InternalSwap(HybridModelDebug* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.learning_model_output_fail_reason_, &other->_impl_.learning_model_output_fail_reason_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HybridModelDebug, _impl_.using_learning_model_output_)
      + sizeof(HybridModelDebug::_impl_.using_learning_model_output_)
      - PROTOBUF_FIELD_OFFSET(HybridModelDebug, _impl_.evaluated_path_reference_)>(
          reinterpret_cast<char*>(&_impl_.evaluated_path_reference_),
          reinterpret_cast<char*>(&other->_impl_.evaluated_path_reference_));
}

::google::protobuf::Metadata HybridModelDebug::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace planning_internal
}  // namespace control
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_planning_5fmsgs_2fplanning_5finternal_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
