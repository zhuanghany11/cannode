// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: control_base/preprocessor.proto
// Protobuf C++ Version: 5.28.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_control_5fbase_2fpreprocessor_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_control_5fbase_2fpreprocessor_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "common_msgs/basic_msgs/header.pb.h"
#include "common_msgs/basic_msgs/drive_state.pb.h"
#include "control_msgs/input_debug.pb.h"
#include "control_base/local_view.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_control_5fbase_2fpreprocessor_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_control_5fbase_2fpreprocessor_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_control_5fbase_2fpreprocessor_2eproto;
namespace control {
class Preprocessor;
struct PreprocessorDefaultTypeInternal;
extern PreprocessorDefaultTypeInternal _Preprocessor_default_instance_;
}  // namespace control
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace control {

// ===================================================================


// -------------------------------------------------------------------

class Preprocessor final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:control.Preprocessor) */ {
 public:
  inline Preprocessor() : Preprocessor(nullptr) {}
  ~Preprocessor() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Preprocessor(
      ::google::protobuf::internal::ConstantInitialized);

  inline Preprocessor(const Preprocessor& from) : Preprocessor(nullptr, from) {}
  inline Preprocessor(Preprocessor&& from) noexcept
      : Preprocessor(nullptr, std::move(from)) {}
  inline Preprocessor& operator=(const Preprocessor& from) {
    CopyFrom(from);
    return *this;
  }
  inline Preprocessor& operator=(Preprocessor&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Preprocessor& default_instance() {
    return *internal_default_instance();
  }
  static inline const Preprocessor* internal_default_instance() {
    return reinterpret_cast<const Preprocessor*>(
        &_Preprocessor_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Preprocessor& a, Preprocessor& b) { a.Swap(&b); }
  inline void Swap(Preprocessor* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Preprocessor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Preprocessor* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Preprocessor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Preprocessor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Preprocessor& from) { Preprocessor::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  ::size_t ByteSizeLong() const PROTOBUF_FINAL;
  ::uint8_t* _InternalSerialize(::uint8_t* target,
                              ::google::protobuf::io::EpsCopyOutputStream*
                                  stream) const PROTOBUF_FINAL;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Preprocessor* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "control.Preprocessor"; }

 protected:
  explicit Preprocessor(::google::protobuf::Arena* arena);
  Preprocessor(::google::protobuf::Arena* arena, const Preprocessor& from);
  Preprocessor(::google::protobuf::Arena* arena, Preprocessor&& from) noexcept
      : Preprocessor(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEstopReasonFieldNumber = 8,
    kHeaderFieldNumber = 1,
    kLocalViewFieldNumber = 2,
    kEngageAdviceFieldNumber = 4,
    kInputDebugFieldNumber = 5,
    kReceivedPadMsgFieldNumber = 6,
    kEstopFieldNumber = 7,
  };
  // optional string estop_reason = 8;
  bool has_estop_reason() const;
  void clear_estop_reason() ;
  const std::string& estop_reason() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_estop_reason(Arg_&& arg, Args_... args);
  std::string* mutable_estop_reason();
  PROTOBUF_NODISCARD std::string* release_estop_reason();
  void set_allocated_estop_reason(std::string* value);

  private:
  const std::string& _internal_estop_reason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_estop_reason(
      const std::string& value);
  std::string* _internal_mutable_estop_reason();

  public:
  // optional .control.common.Header header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::control::common::Header& header() const;
  PROTOBUF_NODISCARD ::control::common::Header* release_header();
  ::control::common::Header* mutable_header();
  void set_allocated_header(::control::common::Header* value);
  void unsafe_arena_set_allocated_header(::control::common::Header* value);
  ::control::common::Header* unsafe_arena_release_header();

  private:
  const ::control::common::Header& _internal_header() const;
  ::control::common::Header* _internal_mutable_header();

  public:
  // optional .control.LocalView local_view = 2;
  bool has_local_view() const;
  void clear_local_view() ;
  const ::control::LocalView& local_view() const;
  PROTOBUF_NODISCARD ::control::LocalView* release_local_view();
  ::control::LocalView* mutable_local_view();
  void set_allocated_local_view(::control::LocalView* value);
  void unsafe_arena_set_allocated_local_view(::control::LocalView* value);
  ::control::LocalView* unsafe_arena_release_local_view();

  private:
  const ::control::LocalView& _internal_local_view() const;
  ::control::LocalView* _internal_mutable_local_view();

  public:
  // optional .control.common.EngageAdvice engage_advice = 4;
  bool has_engage_advice() const;
  void clear_engage_advice() ;
  const ::control::common::EngageAdvice& engage_advice() const;
  PROTOBUF_NODISCARD ::control::common::EngageAdvice* release_engage_advice();
  ::control::common::EngageAdvice* mutable_engage_advice();
  void set_allocated_engage_advice(::control::common::EngageAdvice* value);
  void unsafe_arena_set_allocated_engage_advice(::control::common::EngageAdvice* value);
  ::control::common::EngageAdvice* unsafe_arena_release_engage_advice();

  private:
  const ::control::common::EngageAdvice& _internal_engage_advice() const;
  ::control::common::EngageAdvice* _internal_mutable_engage_advice();

  public:
  // optional .control.InputDebug input_debug = 5;
  bool has_input_debug() const;
  void clear_input_debug() ;
  const ::control::InputDebug& input_debug() const;
  PROTOBUF_NODISCARD ::control::InputDebug* release_input_debug();
  ::control::InputDebug* mutable_input_debug();
  void set_allocated_input_debug(::control::InputDebug* value);
  void unsafe_arena_set_allocated_input_debug(::control::InputDebug* value);
  ::control::InputDebug* unsafe_arena_release_input_debug();

  private:
  const ::control::InputDebug& _internal_input_debug() const;
  ::control::InputDebug* _internal_mutable_input_debug();

  public:
  // optional bool received_pad_msg = 6 [default = false];
  bool has_received_pad_msg() const;
  void clear_received_pad_msg() ;
  bool received_pad_msg() const;
  void set_received_pad_msg(bool value);

  private:
  bool _internal_received_pad_msg() const;
  void _internal_set_received_pad_msg(bool value);

  public:
  // optional bool estop = 7 [default = false];
  bool has_estop() const;
  void clear_estop() ;
  bool estop() const;
  void set_estop(bool value);

  private:
  bool _internal_estop() const;
  void _internal_set_estop(bool value);

  public:
  // @@protoc_insertion_point(class_scope:control.Preprocessor)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 4,
      41, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Preprocessor_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Preprocessor& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr estop_reason_;
    ::control::common::Header* header_;
    ::control::LocalView* local_view_;
    ::control::common::EngageAdvice* engage_advice_;
    ::control::InputDebug* input_debug_;
    bool received_pad_msg_;
    bool estop_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_control_5fbase_2fpreprocessor_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Preprocessor

// optional .control.common.Header header = 1;
inline bool Preprocessor::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline const ::control::common::Header& Preprocessor::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::control::common::Header* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::control::common::Header&>(::control::common::_Header_default_instance_);
}
inline const ::control::common::Header& Preprocessor::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.Preprocessor.header)
  return _internal_header();
}
inline void Preprocessor::unsafe_arena_set_allocated_header(::control::common::Header* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::control::common::Header*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control.Preprocessor.header)
}
inline ::control::common::Header* Preprocessor::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::control::common::Header* released = _impl_.header_;
  _impl_.header_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::control::common::Header* Preprocessor::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control.Preprocessor.header)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::control::common::Header* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::control::common::Header* Preprocessor::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::control::common::Header>(GetArena());
    _impl_.header_ = reinterpret_cast<::control::common::Header*>(p);
  }
  return _impl_.header_;
}
inline ::control::common::Header* Preprocessor::mutable_header() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::control::common::Header* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:control.Preprocessor.header)
  return _msg;
}
inline void Preprocessor::set_allocated_header(::control::common::Header* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.header_ = reinterpret_cast<::control::common::Header*>(value);
  // @@protoc_insertion_point(field_set_allocated:control.Preprocessor.header)
}

// optional .control.LocalView local_view = 2;
inline bool Preprocessor::has_local_view() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.local_view_ != nullptr);
  return value;
}
inline const ::control::LocalView& Preprocessor::_internal_local_view() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::control::LocalView* p = _impl_.local_view_;
  return p != nullptr ? *p : reinterpret_cast<const ::control::LocalView&>(::control::_LocalView_default_instance_);
}
inline const ::control::LocalView& Preprocessor::local_view() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.Preprocessor.local_view)
  return _internal_local_view();
}
inline void Preprocessor::unsafe_arena_set_allocated_local_view(::control::LocalView* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.local_view_);
  }
  _impl_.local_view_ = reinterpret_cast<::control::LocalView*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control.Preprocessor.local_view)
}
inline ::control::LocalView* Preprocessor::release_local_view() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::control::LocalView* released = _impl_.local_view_;
  _impl_.local_view_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::control::LocalView* Preprocessor::unsafe_arena_release_local_view() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control.Preprocessor.local_view)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::control::LocalView* temp = _impl_.local_view_;
  _impl_.local_view_ = nullptr;
  return temp;
}
inline ::control::LocalView* Preprocessor::_internal_mutable_local_view() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.local_view_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::control::LocalView>(GetArena());
    _impl_.local_view_ = reinterpret_cast<::control::LocalView*>(p);
  }
  return _impl_.local_view_;
}
inline ::control::LocalView* Preprocessor::mutable_local_view() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::control::LocalView* _msg = _internal_mutable_local_view();
  // @@protoc_insertion_point(field_mutable:control.Preprocessor.local_view)
  return _msg;
}
inline void Preprocessor::set_allocated_local_view(::control::LocalView* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.local_view_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.local_view_ = reinterpret_cast<::control::LocalView*>(value);
  // @@protoc_insertion_point(field_set_allocated:control.Preprocessor.local_view)
}

// optional .control.common.EngageAdvice engage_advice = 4;
inline bool Preprocessor::has_engage_advice() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.engage_advice_ != nullptr);
  return value;
}
inline const ::control::common::EngageAdvice& Preprocessor::_internal_engage_advice() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::control::common::EngageAdvice* p = _impl_.engage_advice_;
  return p != nullptr ? *p : reinterpret_cast<const ::control::common::EngageAdvice&>(::control::common::_EngageAdvice_default_instance_);
}
inline const ::control::common::EngageAdvice& Preprocessor::engage_advice() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.Preprocessor.engage_advice)
  return _internal_engage_advice();
}
inline void Preprocessor::unsafe_arena_set_allocated_engage_advice(::control::common::EngageAdvice* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.engage_advice_);
  }
  _impl_.engage_advice_ = reinterpret_cast<::control::common::EngageAdvice*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control.Preprocessor.engage_advice)
}
inline ::control::common::EngageAdvice* Preprocessor::release_engage_advice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::control::common::EngageAdvice* released = _impl_.engage_advice_;
  _impl_.engage_advice_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::control::common::EngageAdvice* Preprocessor::unsafe_arena_release_engage_advice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control.Preprocessor.engage_advice)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::control::common::EngageAdvice* temp = _impl_.engage_advice_;
  _impl_.engage_advice_ = nullptr;
  return temp;
}
inline ::control::common::EngageAdvice* Preprocessor::_internal_mutable_engage_advice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.engage_advice_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::control::common::EngageAdvice>(GetArena());
    _impl_.engage_advice_ = reinterpret_cast<::control::common::EngageAdvice*>(p);
  }
  return _impl_.engage_advice_;
}
inline ::control::common::EngageAdvice* Preprocessor::mutable_engage_advice() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::control::common::EngageAdvice* _msg = _internal_mutable_engage_advice();
  // @@protoc_insertion_point(field_mutable:control.Preprocessor.engage_advice)
  return _msg;
}
inline void Preprocessor::set_allocated_engage_advice(::control::common::EngageAdvice* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.engage_advice_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.engage_advice_ = reinterpret_cast<::control::common::EngageAdvice*>(value);
  // @@protoc_insertion_point(field_set_allocated:control.Preprocessor.engage_advice)
}

// optional .control.InputDebug input_debug = 5;
inline bool Preprocessor::has_input_debug() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.input_debug_ != nullptr);
  return value;
}
inline const ::control::InputDebug& Preprocessor::_internal_input_debug() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::control::InputDebug* p = _impl_.input_debug_;
  return p != nullptr ? *p : reinterpret_cast<const ::control::InputDebug&>(::control::_InputDebug_default_instance_);
}
inline const ::control::InputDebug& Preprocessor::input_debug() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.Preprocessor.input_debug)
  return _internal_input_debug();
}
inline void Preprocessor::unsafe_arena_set_allocated_input_debug(::control::InputDebug* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.input_debug_);
  }
  _impl_.input_debug_ = reinterpret_cast<::control::InputDebug*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:control.Preprocessor.input_debug)
}
inline ::control::InputDebug* Preprocessor::release_input_debug() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::control::InputDebug* released = _impl_.input_debug_;
  _impl_.input_debug_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::control::InputDebug* Preprocessor::unsafe_arena_release_input_debug() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control.Preprocessor.input_debug)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::control::InputDebug* temp = _impl_.input_debug_;
  _impl_.input_debug_ = nullptr;
  return temp;
}
inline ::control::InputDebug* Preprocessor::_internal_mutable_input_debug() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.input_debug_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::control::InputDebug>(GetArena());
    _impl_.input_debug_ = reinterpret_cast<::control::InputDebug*>(p);
  }
  return _impl_.input_debug_;
}
inline ::control::InputDebug* Preprocessor::mutable_input_debug() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::control::InputDebug* _msg = _internal_mutable_input_debug();
  // @@protoc_insertion_point(field_mutable:control.Preprocessor.input_debug)
  return _msg;
}
inline void Preprocessor::set_allocated_input_debug(::control::InputDebug* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.input_debug_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.input_debug_ = reinterpret_cast<::control::InputDebug*>(value);
  // @@protoc_insertion_point(field_set_allocated:control.Preprocessor.input_debug)
}

// optional bool received_pad_msg = 6 [default = false];
inline bool Preprocessor::has_received_pad_msg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void Preprocessor::clear_received_pad_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.received_pad_msg_ = false;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline bool Preprocessor::received_pad_msg() const {
  // @@protoc_insertion_point(field_get:control.Preprocessor.received_pad_msg)
  return _internal_received_pad_msg();
}
inline void Preprocessor::set_received_pad_msg(bool value) {
  _internal_set_received_pad_msg(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:control.Preprocessor.received_pad_msg)
}
inline bool Preprocessor::_internal_received_pad_msg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.received_pad_msg_;
}
inline void Preprocessor::_internal_set_received_pad_msg(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.received_pad_msg_ = value;
}

// optional bool estop = 7 [default = false];
inline bool Preprocessor::has_estop() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void Preprocessor::clear_estop() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.estop_ = false;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline bool Preprocessor::estop() const {
  // @@protoc_insertion_point(field_get:control.Preprocessor.estop)
  return _internal_estop();
}
inline void Preprocessor::set_estop(bool value) {
  _internal_set_estop(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:control.Preprocessor.estop)
}
inline bool Preprocessor::_internal_estop() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.estop_;
}
inline void Preprocessor::_internal_set_estop(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.estop_ = value;
}

// optional string estop_reason = 8;
inline bool Preprocessor::has_estop_reason() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Preprocessor::clear_estop_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.estop_reason_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Preprocessor::estop_reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:control.Preprocessor.estop_reason)
  return _internal_estop_reason();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Preprocessor::set_estop_reason(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.estop_reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:control.Preprocessor.estop_reason)
}
inline std::string* Preprocessor::mutable_estop_reason() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_estop_reason();
  // @@protoc_insertion_point(field_mutable:control.Preprocessor.estop_reason)
  return _s;
}
inline const std::string& Preprocessor::_internal_estop_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.estop_reason_.Get();
}
inline void Preprocessor::_internal_set_estop_reason(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.estop_reason_.Set(value, GetArena());
}
inline std::string* Preprocessor::_internal_mutable_estop_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.estop_reason_.Mutable( GetArena());
}
inline std::string* Preprocessor::release_estop_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:control.Preprocessor.estop_reason)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.estop_reason_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.estop_reason_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Preprocessor::set_allocated_estop_reason(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.estop_reason_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.estop_reason_.IsDefault()) {
          _impl_.estop_reason_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:control.Preprocessor.estop_reason)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace control


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_control_5fbase_2fpreprocessor_2eproto_2epb_2eh
