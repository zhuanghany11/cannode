// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: control_base/lat_pid_controller_config.proto
// Protobuf C++ Version: 5.28.0-dev

#include "control_base/lat_pid_controller_config.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace control {

inline constexpr PiffTrackingDifferentiatorSwitch::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        enable_center_line_c2_{false},
        enable_yaw_rate_{false} {}

template <typename>
PROTOBUF_CONSTEXPR PiffTrackingDifferentiatorSwitch::PiffTrackingDifferentiatorSwitch(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PiffTrackingDifferentiatorSwitchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PiffTrackingDifferentiatorSwitchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PiffTrackingDifferentiatorSwitchDefaultTypeInternal() {}
  union {
    PiffTrackingDifferentiatorSwitch _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PiffTrackingDifferentiatorSwitchDefaultTypeInternal _PiffTrackingDifferentiatorSwitch_default_instance_;

inline constexpr PiffTrackingDifferentiatorStateParameters::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tracking_rate_{0},
        smooth_frame_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PiffTrackingDifferentiatorStateParameters::PiffTrackingDifferentiatorStateParameters(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PiffTrackingDifferentiatorStateParametersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PiffTrackingDifferentiatorStateParametersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PiffTrackingDifferentiatorStateParametersDefaultTypeInternal() {}
  union {
    PiffTrackingDifferentiatorStateParameters _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PiffTrackingDifferentiatorStateParametersDefaultTypeInternal _PiffTrackingDifferentiatorStateParameters_default_instance_;

inline constexpr PiffProtectIntegratorConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        flag_protection_{false},
        frames_protection_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PiffProtectIntegratorConfig::PiffProtectIntegratorConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PiffProtectIntegratorConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PiffProtectIntegratorConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PiffProtectIntegratorConfigDefaultTypeInternal() {}
  union {
    PiffProtectIntegratorConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PiffProtectIntegratorConfigDefaultTypeInternal _PiffProtectIntegratorConfig_default_instance_;

inline constexpr PiffPercentageModeIntegratorConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        track_percentage_{0},
        enable_lateral_err_contribution_{false},
        enable_lateral_err_rate_contribution_{false},
        enable_heading_err_contribution_{false},
        enable_heading_err_rate_contribution_{false} {}

template <typename>
PROTOBUF_CONSTEXPR PiffPercentageModeIntegratorConfig::PiffPercentageModeIntegratorConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PiffPercentageModeIntegratorConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PiffPercentageModeIntegratorConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PiffPercentageModeIntegratorConfigDefaultTypeInternal() {}
  union {
    PiffPercentageModeIntegratorConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PiffPercentageModeIntegratorConfigDefaultTypeInternal _PiffPercentageModeIntegratorConfig_default_instance_;

inline constexpr PiffParameters::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        matrix_k_{},
        curvature_{0},
        speed_kph_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PiffParameters::PiffParameters(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PiffParametersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PiffParametersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PiffParametersDefaultTypeInternal() {}
  union {
    PiffParameters _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PiffParametersDefaultTypeInternal _PiffParameters_default_instance_;

inline constexpr PiffPPSteeringAngleLimit::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        speed_kph_{0},
        steering_range_deg_{0},
        steering_rate_range_degps_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PiffPPSteeringAngleLimit::PiffPPSteeringAngleLimit(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PiffPPSteeringAngleLimitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PiffPPSteeringAngleLimitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PiffPPSteeringAngleLimitDefaultTypeInternal() {}
  union {
    PiffPPSteeringAngleLimit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PiffPPSteeringAngleLimitDefaultTypeInternal _PiffPPSteeringAngleLimit_default_instance_;

inline constexpr PiffPPDectivateControlContentConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        speed_kph_{0},
        steering_rate_degps_{0},
        steering_frame_track_percentage_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PiffPPDectivateControlContentConfig::PiffPPDectivateControlContentConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PiffPPDectivateControlContentConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PiffPPDectivateControlContentConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PiffPPDectivateControlContentConfigDefaultTypeInternal() {}
  union {
    PiffPPDectivateControlContentConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PiffPPDectivateControlContentConfigDefaultTypeInternal _PiffPPDectivateControlContentConfig_default_instance_;

inline constexpr PiffPPActivateControlContentConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        speed_kph_{0},
        steering_rate_degps_{0},
        steering_dead_zone_deg_{0},
        steering_frame_track_percentage_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PiffPPActivateControlContentConfig::PiffPPActivateControlContentConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PiffPPActivateControlContentConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PiffPPActivateControlContentConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PiffPPActivateControlContentConfigDefaultTypeInternal() {}
  union {
    PiffPPActivateControlContentConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PiffPPActivateControlContentConfigDefaultTypeInternal _PiffPPActivateControlContentConfig_default_instance_;

inline constexpr PiffMeanFilterWindowSize::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        center_line_c0_mfws_{0},
        center_line_c1_mfws_{0},
        center_line_c2_mfws_{0},
        speed_mps_mfws_{0},
        yaw_rate_mfws_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PiffMeanFilterWindowSize::PiffMeanFilterWindowSize(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PiffMeanFilterWindowSizeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PiffMeanFilterWindowSizeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PiffMeanFilterWindowSizeDefaultTypeInternal() {}
  union {
    PiffMeanFilterWindowSize _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PiffMeanFilterWindowSizeDefaultTypeInternal _PiffMeanFilterWindowSize_default_instance_;

inline constexpr PiffMeanFilterSwitch::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        enable_center_line_c0_{false},
        enable_center_line_c1_{false},
        enable_center_line_c2_{false},
        enable_speed_mps_{false},
        enable_yaw_rate_{false} {}

template <typename>
PROTOBUF_CONSTEXPR PiffMeanFilterSwitch::PiffMeanFilterSwitch(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PiffMeanFilterSwitchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PiffMeanFilterSwitchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PiffMeanFilterSwitchDefaultTypeInternal() {}
  union {
    PiffMeanFilterSwitch _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PiffMeanFilterSwitchDefaultTypeInternal _PiffMeanFilterSwitch_default_instance_;

inline constexpr PiffLinearModeIntegratorConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ki_{},
        ki_mode_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PiffLinearModeIntegratorConfig::PiffLinearModeIntegratorConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PiffLinearModeIntegratorConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PiffLinearModeIntegratorConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PiffLinearModeIntegratorConfigDefaultTypeInternal() {}
  union {
    PiffLinearModeIntegratorConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PiffLinearModeIntegratorConfigDefaultTypeInternal _PiffLinearModeIntegratorConfig_default_instance_;

inline constexpr PiffDTInputMaxLimitConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        speed_kph_{0},
        lateral_error_{0},
        heading_error_deg_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PiffDTInputMaxLimitConfig::PiffDTInputMaxLimitConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PiffDTInputMaxLimitConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PiffDTInputMaxLimitConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PiffDTInputMaxLimitConfigDefaultTypeInternal() {}
  union {
    PiffDTInputMaxLimitConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PiffDTInputMaxLimitConfigDefaultTypeInternal _PiffDTInputMaxLimitConfig_default_instance_;

inline constexpr PiffDTInputFrameLimitConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        speed_kph_{0},
        c0_jump_max_m_{0},
        c0_transit_rate_mps_{0},
        c0_track_percentage_{0},
        c1_jump_max_rad_{0},
        c1_transit_rate_radps_{0},
        c1_track_percentage_{0},
        c2_jump_max_{0},
        c2_transit_rate_{0},
        c2_track_percentage_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PiffDTInputFrameLimitConfig::PiffDTInputFrameLimitConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PiffDTInputFrameLimitConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PiffDTInputFrameLimitConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PiffDTInputFrameLimitConfigDefaultTypeInternal() {}
  union {
    PiffDTInputFrameLimitConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PiffDTInputFrameLimitConfigDefaultTypeInternal _PiffDTInputFrameLimitConfig_default_instance_;

inline constexpr PiffControllerContentRateConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        curvature_{0},
        speed_kph_{0},
        ff_rate_{0},
        fb_rate_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PiffControllerContentRateConfig::PiffControllerContentRateConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PiffControllerContentRateConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PiffControllerContentRateConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PiffControllerContentRateConfigDefaultTypeInternal() {}
  union {
    PiffControllerContentRateConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PiffControllerContentRateConfigDefaultTypeInternal _PiffControllerContentRateConfig_default_instance_;

inline constexpr PiffCommonParametersConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        control_period_{0},
        standstill_speed_mps_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PiffCommonParametersConfig::PiffCommonParametersConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PiffCommonParametersConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PiffCommonParametersConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PiffCommonParametersConfigDefaultTypeInternal() {}
  union {
    PiffCommonParametersConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PiffCommonParametersConfigDefaultTypeInternal _PiffCommonParametersConfig_default_instance_;

inline constexpr PiffCoeffientGainConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        c0_threshold_{0},
        c1_coef_{0},
        c2_coef_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PiffCoeffientGainConfig::PiffCoeffientGainConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PiffCoeffientGainConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PiffCoeffientGainConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PiffCoeffientGainConfigDefaultTypeInternal() {}
  union {
    PiffCoeffientGainConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PiffCoeffientGainConfigDefaultTypeInternal _PiffCoeffientGainConfig_default_instance_;

inline constexpr PiffCCSteeringFakeDeadZoneConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        lateral_error_m_fake_zone_{0},
        enable_fake_dead_zone_{false},
        enable_fake_transition_zone_{false},
        heading_error_rad_fake_zone_{0},
        lateral_error_m_transition_zone_{0},
        heading_error_rad_transition_zone_{0},
        mode_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PiffCCSteeringFakeDeadZoneConfig::PiffCCSteeringFakeDeadZoneConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PiffCCSteeringFakeDeadZoneConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PiffCCSteeringFakeDeadZoneConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PiffCCSteeringFakeDeadZoneConfigDefaultTypeInternal() {}
  union {
    PiffCCSteeringFakeDeadZoneConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PiffCCSteeringFakeDeadZoneConfigDefaultTypeInternal _PiffCCSteeringFakeDeadZoneConfig_default_instance_;

inline constexpr PiffTrackingDifferentiatorConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        td_switch_{nullptr},
        center_line_c2_paras_{nullptr},
        yaw_rate_paras_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PiffTrackingDifferentiatorConfig::PiffTrackingDifferentiatorConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PiffTrackingDifferentiatorConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PiffTrackingDifferentiatorConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PiffTrackingDifferentiatorConfigDefaultTypeInternal() {}
  union {
    PiffTrackingDifferentiatorConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PiffTrackingDifferentiatorConfigDefaultTypeInternal _PiffTrackingDifferentiatorConfig_default_instance_;

inline constexpr PiffPPDeactivateControlConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        deactivate_conf_{},
        enable_post_deactivate_control_{false},
        ramp_mode_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PiffPPDeactivateControlConfig::PiffPPDeactivateControlConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PiffPPDeactivateControlConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PiffPPDeactivateControlConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PiffPPDeactivateControlConfigDefaultTypeInternal() {}
  union {
    PiffPPDeactivateControlConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PiffPPDeactivateControlConfigDefaultTypeInternal _PiffPPDeactivateControlConfig_default_instance_;

inline constexpr PiffPPActivateControlConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        activate_conf_{},
        enable_post_activate_control_{false},
        ramp_mode_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PiffPPActivateControlConfig::PiffPPActivateControlConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PiffPPActivateControlConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PiffPPActivateControlConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PiffPPActivateControlConfigDefaultTypeInternal() {}
  union {
    PiffPPActivateControlConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PiffPPActivateControlConfigDefaultTypeInternal _PiffPPActivateControlConfig_default_instance_;

inline constexpr PiffMeanFilterConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        filter_switch_{nullptr},
        window_size_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PiffMeanFilterConfig::PiffMeanFilterConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PiffMeanFilterConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PiffMeanFilterConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PiffMeanFilterConfigDefaultTypeInternal() {}
  union {
    PiffMeanFilterConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PiffMeanFilterConfigDefaultTypeInternal _PiffMeanFilterConfig_default_instance_;

inline constexpr PiffIntegratorConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        linear_mode_integrator_conf_{nullptr},
        percentage_mode_integrator_conf_{nullptr},
        protect_integrator_conf_{nullptr},
        enable_integrator_{false},
        steering_saturation_level_deg_{0},
        mode_integrator_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PiffIntegratorConfig::PiffIntegratorConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PiffIntegratorConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PiffIntegratorConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PiffIntegratorConfigDefaultTypeInternal() {}
  union {
    PiffIntegratorConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PiffIntegratorConfigDefaultTypeInternal _PiffIntegratorConfig_default_instance_;

inline constexpr PiffDataTransformConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        input_max_limit_conf_{},
        input_frame_limit_conf_{},
        enable_input_max_limit_{false},
        enable_input_frame_limit_{false},
        frame_ramp_mode_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PiffDataTransformConfig::PiffDataTransformConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PiffDataTransformConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PiffDataTransformConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PiffDataTransformConfigDefaultTypeInternal() {}
  union {
    PiffDataTransformConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PiffDataTransformConfigDefaultTypeInternal _PiffDataTransformConfig_default_instance_;

inline constexpr PiffPostProcessConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        steering_angle_limit_{},
        post_activate_control_conf_{nullptr},
        post_deactivate_control_conf_{nullptr},
        enable_steering_limit_{false},
        steering_range_factor_{0},
        steering_rate_range_factor_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PiffPostProcessConfig::PiffPostProcessConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PiffPostProcessConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PiffPostProcessConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PiffPostProcessConfigDefaultTypeInternal() {}
  union {
    PiffPostProcessConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PiffPostProcessConfigDefaultTypeInternal _PiffPostProcessConfig_default_instance_;

inline constexpr PiffControllerContentConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rate_conf_{},
        integrator_conf_{nullptr},
        steering_fake_dead_zone_conf_{nullptr},
        preview_mode_{0},
        preview_time_ms_c01_{0},
        preview_time_ms_c2_{0},
        curvature_min_start_ff_{0},
        steering_bias_deg_{0},
        curvaturn_transition_ff_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PiffControllerContentConfig::PiffControllerContentConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PiffControllerContentConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PiffControllerContentConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PiffControllerContentConfigDefaultTypeInternal() {}
  union {
    PiffControllerContentConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PiffControllerContentConfigDefaultTypeInternal _PiffControllerContentConfig_default_instance_;

inline constexpr LatPidConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        piff_paras_{},
        common_para_conf_{nullptr},
        controller_content_conf_{nullptr},
        mean_filter_conf_{nullptr},
        tracking_differentiator_conf_{nullptr},
        data_transform_conf_{nullptr},
        post_process_conf_{nullptr},
        coeffient_gain_conf_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR LatPidConfig::LatPidConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LatPidConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LatPidConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LatPidConfigDefaultTypeInternal() {}
  union {
    LatPidConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LatPidConfigDefaultTypeInternal _LatPidConfig_default_instance_;
}  // namespace control
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto = nullptr;
const ::uint32_t
    TableStruct_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::control::PiffParameters, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::PiffParameters, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::PiffParameters, _impl_.curvature_),
        PROTOBUF_FIELD_OFFSET(::control::PiffParameters, _impl_.speed_kph_),
        PROTOBUF_FIELD_OFFSET(::control::PiffParameters, _impl_.matrix_k_),
        0,
        1,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::control::PiffMeanFilterSwitch, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::PiffMeanFilterSwitch, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::PiffMeanFilterSwitch, _impl_.enable_center_line_c0_),
        PROTOBUF_FIELD_OFFSET(::control::PiffMeanFilterSwitch, _impl_.enable_center_line_c1_),
        PROTOBUF_FIELD_OFFSET(::control::PiffMeanFilterSwitch, _impl_.enable_center_line_c2_),
        PROTOBUF_FIELD_OFFSET(::control::PiffMeanFilterSwitch, _impl_.enable_speed_mps_),
        PROTOBUF_FIELD_OFFSET(::control::PiffMeanFilterSwitch, _impl_.enable_yaw_rate_),
        0,
        1,
        2,
        3,
        4,
        PROTOBUF_FIELD_OFFSET(::control::PiffMeanFilterWindowSize, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::PiffMeanFilterWindowSize, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::PiffMeanFilterWindowSize, _impl_.center_line_c0_mfws_),
        PROTOBUF_FIELD_OFFSET(::control::PiffMeanFilterWindowSize, _impl_.center_line_c1_mfws_),
        PROTOBUF_FIELD_OFFSET(::control::PiffMeanFilterWindowSize, _impl_.center_line_c2_mfws_),
        PROTOBUF_FIELD_OFFSET(::control::PiffMeanFilterWindowSize, _impl_.speed_mps_mfws_),
        PROTOBUF_FIELD_OFFSET(::control::PiffMeanFilterWindowSize, _impl_.yaw_rate_mfws_),
        0,
        1,
        2,
        3,
        4,
        PROTOBUF_FIELD_OFFSET(::control::PiffMeanFilterConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::PiffMeanFilterConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::PiffMeanFilterConfig, _impl_.filter_switch_),
        PROTOBUF_FIELD_OFFSET(::control::PiffMeanFilterConfig, _impl_.window_size_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::control::PiffControllerContentRateConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::PiffControllerContentRateConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::PiffControllerContentRateConfig, _impl_.curvature_),
        PROTOBUF_FIELD_OFFSET(::control::PiffControllerContentRateConfig, _impl_.speed_kph_),
        PROTOBUF_FIELD_OFFSET(::control::PiffControllerContentRateConfig, _impl_.ff_rate_),
        PROTOBUF_FIELD_OFFSET(::control::PiffControllerContentRateConfig, _impl_.fb_rate_),
        0,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::control::PiffLinearModeIntegratorConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::PiffLinearModeIntegratorConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::PiffLinearModeIntegratorConfig, _impl_.ki_mode_),
        PROTOBUF_FIELD_OFFSET(::control::PiffLinearModeIntegratorConfig, _impl_.ki_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::control::PiffPercentageModeIntegratorConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::PiffPercentageModeIntegratorConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::PiffPercentageModeIntegratorConfig, _impl_.track_percentage_),
        PROTOBUF_FIELD_OFFSET(::control::PiffPercentageModeIntegratorConfig, _impl_.enable_lateral_err_contribution_),
        PROTOBUF_FIELD_OFFSET(::control::PiffPercentageModeIntegratorConfig, _impl_.enable_lateral_err_rate_contribution_),
        PROTOBUF_FIELD_OFFSET(::control::PiffPercentageModeIntegratorConfig, _impl_.enable_heading_err_contribution_),
        PROTOBUF_FIELD_OFFSET(::control::PiffPercentageModeIntegratorConfig, _impl_.enable_heading_err_rate_contribution_),
        0,
        1,
        2,
        3,
        4,
        PROTOBUF_FIELD_OFFSET(::control::PiffProtectIntegratorConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::PiffProtectIntegratorConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::PiffProtectIntegratorConfig, _impl_.flag_protection_),
        PROTOBUF_FIELD_OFFSET(::control::PiffProtectIntegratorConfig, _impl_.frames_protection_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::control::PiffIntegratorConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::PiffIntegratorConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::PiffIntegratorConfig, _impl_.enable_integrator_),
        PROTOBUF_FIELD_OFFSET(::control::PiffIntegratorConfig, _impl_.steering_saturation_level_deg_),
        PROTOBUF_FIELD_OFFSET(::control::PiffIntegratorConfig, _impl_.mode_integrator_),
        PROTOBUF_FIELD_OFFSET(::control::PiffIntegratorConfig, _impl_.linear_mode_integrator_conf_),
        PROTOBUF_FIELD_OFFSET(::control::PiffIntegratorConfig, _impl_.percentage_mode_integrator_conf_),
        PROTOBUF_FIELD_OFFSET(::control::PiffIntegratorConfig, _impl_.protect_integrator_conf_),
        3,
        4,
        5,
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::control::PiffCCSteeringFakeDeadZoneConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::PiffCCSteeringFakeDeadZoneConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::PiffCCSteeringFakeDeadZoneConfig, _impl_.enable_fake_dead_zone_),
        PROTOBUF_FIELD_OFFSET(::control::PiffCCSteeringFakeDeadZoneConfig, _impl_.lateral_error_m_fake_zone_),
        PROTOBUF_FIELD_OFFSET(::control::PiffCCSteeringFakeDeadZoneConfig, _impl_.heading_error_rad_fake_zone_),
        PROTOBUF_FIELD_OFFSET(::control::PiffCCSteeringFakeDeadZoneConfig, _impl_.enable_fake_transition_zone_),
        PROTOBUF_FIELD_OFFSET(::control::PiffCCSteeringFakeDeadZoneConfig, _impl_.lateral_error_m_transition_zone_),
        PROTOBUF_FIELD_OFFSET(::control::PiffCCSteeringFakeDeadZoneConfig, _impl_.heading_error_rad_transition_zone_),
        PROTOBUF_FIELD_OFFSET(::control::PiffCCSteeringFakeDeadZoneConfig, _impl_.mode_),
        1,
        0,
        3,
        2,
        4,
        5,
        6,
        PROTOBUF_FIELD_OFFSET(::control::PiffControllerContentConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::PiffControllerContentConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::PiffControllerContentConfig, _impl_.preview_mode_),
        PROTOBUF_FIELD_OFFSET(::control::PiffControllerContentConfig, _impl_.preview_time_ms_c01_),
        PROTOBUF_FIELD_OFFSET(::control::PiffControllerContentConfig, _impl_.preview_time_ms_c2_),
        PROTOBUF_FIELD_OFFSET(::control::PiffControllerContentConfig, _impl_.curvature_min_start_ff_),
        PROTOBUF_FIELD_OFFSET(::control::PiffControllerContentConfig, _impl_.rate_conf_),
        PROTOBUF_FIELD_OFFSET(::control::PiffControllerContentConfig, _impl_.integrator_conf_),
        PROTOBUF_FIELD_OFFSET(::control::PiffControllerContentConfig, _impl_.steering_bias_deg_),
        PROTOBUF_FIELD_OFFSET(::control::PiffControllerContentConfig, _impl_.steering_fake_dead_zone_conf_),
        PROTOBUF_FIELD_OFFSET(::control::PiffControllerContentConfig, _impl_.curvaturn_transition_ff_),
        2,
        3,
        4,
        5,
        ~0u,
        0,
        6,
        1,
        7,
        PROTOBUF_FIELD_OFFSET(::control::PiffTrackingDifferentiatorSwitch, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::PiffTrackingDifferentiatorSwitch, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::PiffTrackingDifferentiatorSwitch, _impl_.enable_center_line_c2_),
        PROTOBUF_FIELD_OFFSET(::control::PiffTrackingDifferentiatorSwitch, _impl_.enable_yaw_rate_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::control::PiffTrackingDifferentiatorStateParameters, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::PiffTrackingDifferentiatorStateParameters, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::PiffTrackingDifferentiatorStateParameters, _impl_.tracking_rate_),
        PROTOBUF_FIELD_OFFSET(::control::PiffTrackingDifferentiatorStateParameters, _impl_.smooth_frame_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::control::PiffTrackingDifferentiatorConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::PiffTrackingDifferentiatorConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::PiffTrackingDifferentiatorConfig, _impl_.td_switch_),
        PROTOBUF_FIELD_OFFSET(::control::PiffTrackingDifferentiatorConfig, _impl_.center_line_c2_paras_),
        PROTOBUF_FIELD_OFFSET(::control::PiffTrackingDifferentiatorConfig, _impl_.yaw_rate_paras_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::control::PiffDTInputMaxLimitConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::PiffDTInputMaxLimitConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::PiffDTInputMaxLimitConfig, _impl_.speed_kph_),
        PROTOBUF_FIELD_OFFSET(::control::PiffDTInputMaxLimitConfig, _impl_.lateral_error_),
        PROTOBUF_FIELD_OFFSET(::control::PiffDTInputMaxLimitConfig, _impl_.heading_error_deg_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::control::PiffDTInputFrameLimitConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::PiffDTInputFrameLimitConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::PiffDTInputFrameLimitConfig, _impl_.speed_kph_),
        PROTOBUF_FIELD_OFFSET(::control::PiffDTInputFrameLimitConfig, _impl_.c0_jump_max_m_),
        PROTOBUF_FIELD_OFFSET(::control::PiffDTInputFrameLimitConfig, _impl_.c0_transit_rate_mps_),
        PROTOBUF_FIELD_OFFSET(::control::PiffDTInputFrameLimitConfig, _impl_.c0_track_percentage_),
        PROTOBUF_FIELD_OFFSET(::control::PiffDTInputFrameLimitConfig, _impl_.c1_jump_max_rad_),
        PROTOBUF_FIELD_OFFSET(::control::PiffDTInputFrameLimitConfig, _impl_.c1_transit_rate_radps_),
        PROTOBUF_FIELD_OFFSET(::control::PiffDTInputFrameLimitConfig, _impl_.c1_track_percentage_),
        PROTOBUF_FIELD_OFFSET(::control::PiffDTInputFrameLimitConfig, _impl_.c2_jump_max_),
        PROTOBUF_FIELD_OFFSET(::control::PiffDTInputFrameLimitConfig, _impl_.c2_transit_rate_),
        PROTOBUF_FIELD_OFFSET(::control::PiffDTInputFrameLimitConfig, _impl_.c2_track_percentage_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        PROTOBUF_FIELD_OFFSET(::control::PiffDataTransformConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::PiffDataTransformConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::PiffDataTransformConfig, _impl_.enable_input_max_limit_),
        PROTOBUF_FIELD_OFFSET(::control::PiffDataTransformConfig, _impl_.input_max_limit_conf_),
        PROTOBUF_FIELD_OFFSET(::control::PiffDataTransformConfig, _impl_.enable_input_frame_limit_),
        PROTOBUF_FIELD_OFFSET(::control::PiffDataTransformConfig, _impl_.input_frame_limit_conf_),
        PROTOBUF_FIELD_OFFSET(::control::PiffDataTransformConfig, _impl_.frame_ramp_mode_),
        0,
        ~0u,
        1,
        ~0u,
        2,
        PROTOBUF_FIELD_OFFSET(::control::PiffPPSteeringAngleLimit, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::PiffPPSteeringAngleLimit, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::PiffPPSteeringAngleLimit, _impl_.speed_kph_),
        PROTOBUF_FIELD_OFFSET(::control::PiffPPSteeringAngleLimit, _impl_.steering_range_deg_),
        PROTOBUF_FIELD_OFFSET(::control::PiffPPSteeringAngleLimit, _impl_.steering_rate_range_degps_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::control::PiffPPActivateControlContentConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::PiffPPActivateControlContentConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::PiffPPActivateControlContentConfig, _impl_.speed_kph_),
        PROTOBUF_FIELD_OFFSET(::control::PiffPPActivateControlContentConfig, _impl_.steering_rate_degps_),
        PROTOBUF_FIELD_OFFSET(::control::PiffPPActivateControlContentConfig, _impl_.steering_dead_zone_deg_),
        PROTOBUF_FIELD_OFFSET(::control::PiffPPActivateControlContentConfig, _impl_.steering_frame_track_percentage_),
        0,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::control::PiffPPDectivateControlContentConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::PiffPPDectivateControlContentConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::PiffPPDectivateControlContentConfig, _impl_.speed_kph_),
        PROTOBUF_FIELD_OFFSET(::control::PiffPPDectivateControlContentConfig, _impl_.steering_rate_degps_),
        PROTOBUF_FIELD_OFFSET(::control::PiffPPDectivateControlContentConfig, _impl_.steering_frame_track_percentage_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::control::PiffPPActivateControlConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::PiffPPActivateControlConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::PiffPPActivateControlConfig, _impl_.enable_post_activate_control_),
        PROTOBUF_FIELD_OFFSET(::control::PiffPPActivateControlConfig, _impl_.activate_conf_),
        PROTOBUF_FIELD_OFFSET(::control::PiffPPActivateControlConfig, _impl_.ramp_mode_),
        0,
        ~0u,
        1,
        PROTOBUF_FIELD_OFFSET(::control::PiffPPDeactivateControlConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::PiffPPDeactivateControlConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::PiffPPDeactivateControlConfig, _impl_.enable_post_deactivate_control_),
        PROTOBUF_FIELD_OFFSET(::control::PiffPPDeactivateControlConfig, _impl_.deactivate_conf_),
        PROTOBUF_FIELD_OFFSET(::control::PiffPPDeactivateControlConfig, _impl_.ramp_mode_),
        0,
        ~0u,
        1,
        PROTOBUF_FIELD_OFFSET(::control::PiffPostProcessConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::PiffPostProcessConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::PiffPostProcessConfig, _impl_.enable_steering_limit_),
        PROTOBUF_FIELD_OFFSET(::control::PiffPostProcessConfig, _impl_.steering_range_factor_),
        PROTOBUF_FIELD_OFFSET(::control::PiffPostProcessConfig, _impl_.steering_rate_range_factor_),
        PROTOBUF_FIELD_OFFSET(::control::PiffPostProcessConfig, _impl_.steering_angle_limit_),
        PROTOBUF_FIELD_OFFSET(::control::PiffPostProcessConfig, _impl_.post_activate_control_conf_),
        PROTOBUF_FIELD_OFFSET(::control::PiffPostProcessConfig, _impl_.post_deactivate_control_conf_),
        2,
        3,
        4,
        ~0u,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::control::PiffCoeffientGainConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::PiffCoeffientGainConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::PiffCoeffientGainConfig, _impl_.c0_threshold_),
        PROTOBUF_FIELD_OFFSET(::control::PiffCoeffientGainConfig, _impl_.c1_coef_),
        PROTOBUF_FIELD_OFFSET(::control::PiffCoeffientGainConfig, _impl_.c2_coef_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::control::PiffCommonParametersConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::PiffCommonParametersConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::PiffCommonParametersConfig, _impl_.control_period_),
        PROTOBUF_FIELD_OFFSET(::control::PiffCommonParametersConfig, _impl_.standstill_speed_mps_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::control::LatPidConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::LatPidConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::LatPidConfig, _impl_.common_para_conf_),
        PROTOBUF_FIELD_OFFSET(::control::LatPidConfig, _impl_.controller_content_conf_),
        PROTOBUF_FIELD_OFFSET(::control::LatPidConfig, _impl_.piff_paras_),
        PROTOBUF_FIELD_OFFSET(::control::LatPidConfig, _impl_.mean_filter_conf_),
        PROTOBUF_FIELD_OFFSET(::control::LatPidConfig, _impl_.tracking_differentiator_conf_),
        PROTOBUF_FIELD_OFFSET(::control::LatPidConfig, _impl_.data_transform_conf_),
        PROTOBUF_FIELD_OFFSET(::control::LatPidConfig, _impl_.post_process_conf_),
        PROTOBUF_FIELD_OFFSET(::control::LatPidConfig, _impl_.coeffient_gain_conf_),
        0,
        1,
        ~0u,
        2,
        3,
        4,
        5,
        6,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::control::PiffParameters)},
        {14, 27, -1, sizeof(::control::PiffMeanFilterSwitch)},
        {32, 45, -1, sizeof(::control::PiffMeanFilterWindowSize)},
        {50, 60, -1, sizeof(::control::PiffMeanFilterConfig)},
        {62, 74, -1, sizeof(::control::PiffControllerContentRateConfig)},
        {78, 88, -1, sizeof(::control::PiffLinearModeIntegratorConfig)},
        {90, 103, -1, sizeof(::control::PiffPercentageModeIntegratorConfig)},
        {108, 118, -1, sizeof(::control::PiffProtectIntegratorConfig)},
        {120, 134, -1, sizeof(::control::PiffIntegratorConfig)},
        {140, 155, -1, sizeof(::control::PiffCCSteeringFakeDeadZoneConfig)},
        {162, 179, -1, sizeof(::control::PiffControllerContentConfig)},
        {188, 198, -1, sizeof(::control::PiffTrackingDifferentiatorSwitch)},
        {200, 210, -1, sizeof(::control::PiffTrackingDifferentiatorStateParameters)},
        {212, 223, -1, sizeof(::control::PiffTrackingDifferentiatorConfig)},
        {226, 237, -1, sizeof(::control::PiffDTInputMaxLimitConfig)},
        {240, 258, -1, sizeof(::control::PiffDTInputFrameLimitConfig)},
        {268, 281, -1, sizeof(::control::PiffDataTransformConfig)},
        {286, 297, -1, sizeof(::control::PiffPPSteeringAngleLimit)},
        {300, 312, -1, sizeof(::control::PiffPPActivateControlContentConfig)},
        {316, 327, -1, sizeof(::control::PiffPPDectivateControlContentConfig)},
        {330, 341, -1, sizeof(::control::PiffPPActivateControlConfig)},
        {344, 355, -1, sizeof(::control::PiffPPDeactivateControlConfig)},
        {358, 372, -1, sizeof(::control::PiffPostProcessConfig)},
        {378, 389, -1, sizeof(::control::PiffCoeffientGainConfig)},
        {392, 402, -1, sizeof(::control::PiffCommonParametersConfig)},
        {404, 420, -1, sizeof(::control::LatPidConfig)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::control::_PiffParameters_default_instance_._instance,
    &::control::_PiffMeanFilterSwitch_default_instance_._instance,
    &::control::_PiffMeanFilterWindowSize_default_instance_._instance,
    &::control::_PiffMeanFilterConfig_default_instance_._instance,
    &::control::_PiffControllerContentRateConfig_default_instance_._instance,
    &::control::_PiffLinearModeIntegratorConfig_default_instance_._instance,
    &::control::_PiffPercentageModeIntegratorConfig_default_instance_._instance,
    &::control::_PiffProtectIntegratorConfig_default_instance_._instance,
    &::control::_PiffIntegratorConfig_default_instance_._instance,
    &::control::_PiffCCSteeringFakeDeadZoneConfig_default_instance_._instance,
    &::control::_PiffControllerContentConfig_default_instance_._instance,
    &::control::_PiffTrackingDifferentiatorSwitch_default_instance_._instance,
    &::control::_PiffTrackingDifferentiatorStateParameters_default_instance_._instance,
    &::control::_PiffTrackingDifferentiatorConfig_default_instance_._instance,
    &::control::_PiffDTInputMaxLimitConfig_default_instance_._instance,
    &::control::_PiffDTInputFrameLimitConfig_default_instance_._instance,
    &::control::_PiffDataTransformConfig_default_instance_._instance,
    &::control::_PiffPPSteeringAngleLimit_default_instance_._instance,
    &::control::_PiffPPActivateControlContentConfig_default_instance_._instance,
    &::control::_PiffPPDectivateControlContentConfig_default_instance_._instance,
    &::control::_PiffPPActivateControlConfig_default_instance_._instance,
    &::control::_PiffPPDeactivateControlConfig_default_instance_._instance,
    &::control::_PiffPostProcessConfig_default_instance_._instance,
    &::control::_PiffCoeffientGainConfig_default_instance_._instance,
    &::control::_PiffCommonParametersConfig_default_instance_._instance,
    &::control::_LatPidConfig_default_instance_._instance,
};
const char descriptor_table_protodef_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n,control_base/lat_pid_controller_config"
    ".proto\022\007control\"H\n\016PiffParameters\022\021\n\tcur"
    "vature\030\001 \002(\002\022\021\n\tspeed_kph\030\002 \002(\002\022\020\n\010matri"
    "x_k\030\003 \003(\002\"\246\001\n\024PiffMeanFilterSwitch\022\035\n\025en"
    "able_center_line_c0\030\001 \002(\010\022\035\n\025enable_cent"
    "er_line_c1\030\002 \002(\010\022\035\n\025enable_center_line_c"
    "2\030\003 \002(\010\022\030\n\020enable_speed_mps\030\004 \002(\010\022\027\n\017ena"
    "ble_yaw_rate\030\005 \002(\010\"\240\001\n\030PiffMeanFilterWin"
    "dowSize\022\033\n\023center_line_c0_mfws\030\001 \002(\005\022\033\n\023"
    "center_line_c1_mfws\030\002 \002(\005\022\033\n\023center_line"
    "_c2_mfws\030\003 \002(\005\022\026\n\016speed_mps_mfws\030\004 \002(\005\022\025"
    "\n\ryaw_rate_mfws\030\005 \002(\005\"\204\001\n\024PiffMeanFilter"
    "Config\0224\n\rfilter_switch\030\001 \002(\0132\035.control."
    "PiffMeanFilterSwitch\0226\n\013window_size\030\002 \002("
    "\0132!.control.PiffMeanFilterWindowSize\"i\n\037"
    "PiffControllerContentRateConfig\022\021\n\tcurva"
    "ture\030\001 \002(\002\022\021\n\tspeed_kph\030\002 \002(\002\022\017\n\007ff_rate"
    "\030\003 \002(\002\022\017\n\007fb_rate\030\004 \002(\002\"=\n\036PiffLinearMod"
    "eIntegratorConfig\022\017\n\007ki_mode\030\001 \002(\005\022\n\n\002ki"
    "\030\002 \003(\002\"\354\001\n\"PiffPercentageModeIntegratorC"
    "onfig\022\030\n\020track_percentage\030\001 \002(\002\022\'\n\037enabl"
    "e_lateral_err_contribution\030\002 \002(\010\022,\n$enab"
    "le_lateral_err_rate_contribution\030\003 \002(\010\022\'"
    "\n\037enable_heading_err_contribution\030\004 \002(\010\022"
    ",\n$enable_heading_err_rate_contribution\030"
    "\005 \002(\010\"Q\n\033PiffProtectIntegratorConfig\022\027\n\017"
    "flag_protection\030\001 \002(\010\022\031\n\021frames_protecti"
    "on\030\002 \002(\005\"\334\002\n\024PiffIntegratorConfig\022\031\n\021ena"
    "ble_integrator\030\001 \002(\010\022%\n\035steering_saturat"
    "ion_level_deg\030\002 \002(\002\022\027\n\017mode_integrator\030\003"
    " \002(\005\022L\n\033linear_mode_integrator_conf\030\004 \002("
    "\0132\'.control.PiffLinearModeIntegratorConf"
    "ig\022T\n\037percentage_mode_integrator_conf\030\005 "
    "\002(\0132+.control.PiffPercentageModeIntegrat"
    "orConfig\022E\n\027protect_integrator_conf\030\006 \002("
    "\0132$.control.PiffProtectIntegratorConfig\""
    "\220\002\n PiffCCSteeringFakeDeadZoneConfig\022\035\n\025"
    "enable_fake_dead_zone\030\001 \002(\010\022!\n\031lateral_e"
    "rror_m_fake_zone\030\002 \002(\002\022#\n\033heading_error_"
    "rad_fake_zone\030\003 \002(\002\022#\n\033enable_fake_trans"
    "ition_zone\030\004 \002(\010\022\'\n\037lateral_error_m_tran"
    "sition_zone\030\005 \002(\002\022)\n!heading_error_rad_t"
    "ransition_zone\030\006 \002(\002\022\014\n\004mode\030\007 \002(\005\"\216\003\n\033P"
    "iffControllerContentConfig\022\024\n\014preview_mo"
    "de\030\001 \002(\005\022\033\n\023preview_time_ms_c01\030\002 \002(\002\022\032\n"
    "\022preview_time_ms_c2\030\003 \002(\002\022\036\n\026curvature_m"
    "in_start_ff\030\004 \002(\002\022;\n\trate_conf\030\005 \003(\0132(.c"
    "ontrol.PiffControllerContentRateConfig\0226"
    "\n\017integrator_conf\030\006 \002(\0132\035.control.PiffIn"
    "tegratorConfig\022\031\n\021steering_bias_deg\030\007 \002("
    "\002\022O\n\034steering_fake_dead_zone_conf\030\010 \002(\0132"
    ").control.PiffCCSteeringFakeDeadZoneConf"
    "ig\022\037\n\027curvaturn_transition_ff\030\t \002(\002\"Z\n P"
    "iffTrackingDifferentiatorSwitch\022\035\n\025enabl"
    "e_center_line_c2\030\001 \002(\010\022\027\n\017enable_yaw_rat"
    "e\030\002 \002(\010\"X\n)PiffTrackingDifferentiatorSta"
    "teParameters\022\025\n\rtracking_rate\030\001 \002(\002\022\024\n\014s"
    "mooth_frame\030\002 \002(\005\"\376\001\n PiffTrackingDiffer"
    "entiatorConfig\022<\n\ttd_switch\030\001 \002(\0132).cont"
    "rol.PiffTrackingDifferentiatorSwitch\022P\n\024"
    "center_line_c2_paras\030\002 \002(\01322.control.Pif"
    "fTrackingDifferentiatorStateParameters\022J"
    "\n\016yaw_rate_paras\030\003 \002(\01322.control.PiffTra"
    "ckingDifferentiatorStateParameters\"`\n\031Pi"
    "ffDTInputMaxLimitConfig\022\021\n\tspeed_kph\030\001 \002"
    "(\002\022\025\n\rlateral_error\030\002 \002(\002\022\031\n\021heading_err"
    "or_deg\030\003 \002(\002\"\241\002\n\033PiffDTInputFrameLimitCo"
    "nfig\022\021\n\tspeed_kph\030\001 \002(\002\022\025\n\rc0_jump_max_m"
    "\030\002 \002(\002\022\033\n\023c0_transit_rate_mps\030\003 \002(\002\022\033\n\023c"
    "0_track_percentage\030\004 \002(\002\022\027\n\017c1_jump_max_"
    "rad\030\005 \002(\002\022\035\n\025c1_transit_rate_radps\030\006 \002(\002"
    "\022\033\n\023c1_track_percentage\030\007 \002(\002\022\023\n\013c2_jump"
    "_max\030\010 \002(\002\022\027\n\017c2_transit_rate\030\t \002(\002\022\033\n\023c"
    "2_track_percentage\030\n \002(\002\"\374\001\n\027PiffDataTra"
    "nsformConfig\022\036\n\026enable_input_max_limit\030\001"
    " \002(\010\022@\n\024input_max_limit_conf\030\002 \003(\0132\".con"
    "trol.PiffDTInputMaxLimitConfig\022 \n\030enable"
    "_input_frame_limit\030\003 \002(\010\022D\n\026input_frame_"
    "limit_conf\030\004 \003(\0132$.control.PiffDTInputFr"
    "ameLimitConfig\022\027\n\017frame_ramp_mode\030\005 \002(\005\""
    "l\n\030PiffPPSteeringAngleLimit\022\021\n\tspeed_kph"
    "\030\001 \002(\002\022\032\n\022steering_range_deg\030\002 \002(\002\022!\n\031st"
    "eering_rate_range_degps\030\003 \002(\002\"\235\001\n\"PiffPP"
    "ActivateControlContentConfig\022\021\n\tspeed_kp"
    "h\030\001 \002(\002\022\033\n\023steering_rate_degps\030\002 \002(\002\022\036\n\026"
    "steering_dead_zone_deg\030\003 \002(\002\022\'\n\037steering"
    "_frame_track_percentage\030\004 \002(\002\"~\n#PiffPPD"
    "ectivateControlContentConfig\022\021\n\tspeed_kp"
    "h\030\001 \002(\002\022\033\n\023steering_rate_degps\030\002 \002(\002\022\'\n\037"
    "steering_frame_track_percentage\030\003 \002(\002\"\232\001"
    "\n\033PiffPPActivateControlConfig\022$\n\034enable_"
    "post_activate_control\030\001 \002(\010\022B\n\ractivate_"
    "conf\030\002 \003(\0132+.control.PiffPPActivateContr"
    "olContentConfig\022\021\n\tramp_mode\030\003 \002(\005\"\241\001\n\035P"
    "iffPPDeactivateControlConfig\022&\n\036enable_p"
    "ost_deactivate_control\030\001 \002(\010\022E\n\017deactiva"
    "te_conf\030\002 \003(\0132,.control.PiffPPDectivateC"
    "ontrolContentConfig\022\021\n\tramp_mode\030\003 \002(\005\"\322"
    "\002\n\025PiffPostProcessConfig\022\035\n\025enable_steer"
    "ing_limit\030\001 \002(\010\022\035\n\025steering_range_factor"
    "\030\002 \002(\002\022\"\n\032steering_rate_range_factor\030\003 \002"
    "(\002\022\?\n\024steering_angle_limit\030\004 \003(\0132!.contr"
    "ol.PiffPPSteeringAngleLimit\022H\n\032post_acti"
    "vate_control_conf\030\005 \002(\0132$.control.PiffPP"
    "ActivateControlConfig\022L\n\034post_deactivate"
    "_control_conf\030\006 \002(\0132&.control.PiffPPDeac"
    "tivateControlConfig\"Q\n\027PiffCoeffientGain"
    "Config\022\024\n\014c0_threshold\030\001 \002(\002\022\017\n\007c1_coef\030"
    "\002 \002(\002\022\017\n\007c2_coef\030\003 \002(\002\"R\n\032PiffCommonPara"
    "metersConfig\022\026\n\016control_period\030\001 \002(\002\022\034\n\024"
    "standstill_speed_mps\030\003 \002(\002\"\204\004\n\014LatPidCon"
    "fig\022=\n\020common_para_conf\030\001 \002(\0132#.control."
    "PiffCommonParametersConfig\022E\n\027controller"
    "_content_conf\030\002 \002(\0132$.control.PiffContro"
    "llerContentConfig\022+\n\npiff_paras\030\003 \003(\0132\027."
    "control.PiffParameters\0227\n\020mean_filter_co"
    "nf\030\004 \002(\0132\035.control.PiffMeanFilterConfig\022"
    "O\n\034tracking_differentiator_conf\030\005 \002(\0132)."
    "control.PiffTrackingDifferentiatorConfig"
    "\022=\n\023data_transform_conf\030\006 \002(\0132 .control."
    "PiffDataTransformConfig\0229\n\021post_process_"
    "conf\030\007 \002(\0132\036.control.PiffPostProcessConf"
    "ig\022=\n\023coeffient_gain_conf\030\010 \002(\0132 .contro"
    "l.PiffCoeffientGainConfig"
};
static ::absl::once_flag descriptor_table_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto = {
    false,
    false,
    4945,
    descriptor_table_protodef_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto,
    "control_base/lat_pid_controller_config.proto",
    &descriptor_table_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto_once,
    nullptr,
    0,
    26,
    schemas,
    file_default_instances,
    TableStruct_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto::offsets,
    file_level_enum_descriptors_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto,
    file_level_service_descriptors_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto,
};
namespace control {
// ===================================================================

class PiffParameters::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PiffParameters>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PiffParameters, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

PiffParameters::PiffParameters(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.PiffParameters)
}
inline PROTOBUF_NDEBUG_INLINE PiffParameters::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::PiffParameters& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        matrix_k_{visibility, arena, from.matrix_k_} {}

PiffParameters::PiffParameters(
    ::google::protobuf::Arena* arena,
    const PiffParameters& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PiffParameters* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, curvature_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, curvature_),
           offsetof(Impl_, speed_kph_) -
               offsetof(Impl_, curvature_) +
               sizeof(Impl_::speed_kph_));

  // @@protoc_insertion_point(copy_constructor:control.PiffParameters)
}
inline PROTOBUF_NDEBUG_INLINE PiffParameters::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        matrix_k_{visibility, arena} {}

inline void PiffParameters::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, curvature_),
           0,
           offsetof(Impl_, speed_kph_) -
               offsetof(Impl_, curvature_) +
               sizeof(Impl_::speed_kph_));
}
PiffParameters::~PiffParameters() {
  // @@protoc_insertion_point(destructor:control.PiffParameters)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PiffParameters::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PiffParameters::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            PiffParameters::IsInitializedImpl,
            &PiffParameters::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PiffParameters>(),
            ::google::protobuf::Message::GetNewImpl<PiffParameters>(),
            ::google::protobuf::Message::GetClearImpl<PiffParameters>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<PiffParameters>(),
                ::google::protobuf::Message::GetSerializeImpl<PiffParameters>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PiffParameters, _impl_._cached_size_),
            false,
        },
        &PiffParameters::kDescriptorMethods,
        &descriptor_table_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PiffParameters::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> PiffParameters::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PiffParameters, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PiffParameters_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::PiffParameters>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required float curvature = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(PiffParameters, _impl_.curvature_)}},
    // required float speed_kph = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(PiffParameters, _impl_.speed_kph_)}},
    // repeated float matrix_k = 3;
    {::_pbi::TcParser::FastF32R1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(PiffParameters, _impl_.matrix_k_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required float curvature = 1;
    {PROTOBUF_FIELD_OFFSET(PiffParameters, _impl_.curvature_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float speed_kph = 2;
    {PROTOBUF_FIELD_OFFSET(PiffParameters, _impl_.speed_kph_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // repeated float matrix_k = 3;
    {PROTOBUF_FIELD_OFFSET(PiffParameters, _impl_.matrix_k_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PiffParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:control.PiffParameters)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.matrix_k_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.curvature_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.speed_kph_) -
        reinterpret_cast<char*>(&_impl_.curvature_)) + sizeof(_impl_.speed_kph_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PiffParameters::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.PiffParameters)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required float curvature = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_curvature(), target);
  }

  // required float speed_kph = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_speed_kph(), target);
  }

  // repeated float matrix_k = 3;
  for (int i = 0, n = this->_internal_matrix_k_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_matrix_k().Get(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.PiffParameters)
  return target;
}

::size_t PiffParameters::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.PiffParameters)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // repeated float matrix_k = 3;
     {
      std::size_t data_size = std::size_t{4} *
          ::_pbi::FromIntSize(this->_internal_matrix_k_size())
      ;
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this->_internal_matrix_k_size());
      ;
      total_size += tag_size + data_size;
    }
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required float curvature = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 5;
    }
    // required float speed_kph = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void PiffParameters::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PiffParameters*>(&to_msg);
  auto& from = static_cast<const PiffParameters&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.PiffParameters)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_matrix_k()->MergeFrom(from._internal_matrix_k());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.curvature_ = from._impl_.curvature_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.speed_kph_ = from._impl_.speed_kph_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PiffParameters::CopyFrom(const PiffParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.PiffParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PiffParameters::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const PiffParameters&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void PiffParameters::InternalSwap(PiffParameters* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.matrix_k_.InternalSwap(&other->_impl_.matrix_k_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PiffParameters, _impl_.speed_kph_)
      + sizeof(PiffParameters::_impl_.speed_kph_)
      - PROTOBUF_FIELD_OFFSET(PiffParameters, _impl_.curvature_)>(
          reinterpret_cast<char*>(&_impl_.curvature_),
          reinterpret_cast<char*>(&other->_impl_.curvature_));
}

::google::protobuf::Metadata PiffParameters::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PiffMeanFilterSwitch::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PiffMeanFilterSwitch>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PiffMeanFilterSwitch, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000001f) ^ 0x0000001f) != 0;
  }
};

PiffMeanFilterSwitch::PiffMeanFilterSwitch(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.PiffMeanFilterSwitch)
}
PiffMeanFilterSwitch::PiffMeanFilterSwitch(
    ::google::protobuf::Arena* arena, const PiffMeanFilterSwitch& from)
    : PiffMeanFilterSwitch(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PiffMeanFilterSwitch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PiffMeanFilterSwitch::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, enable_center_line_c0_),
           0,
           offsetof(Impl_, enable_yaw_rate_) -
               offsetof(Impl_, enable_center_line_c0_) +
               sizeof(Impl_::enable_yaw_rate_));
}
PiffMeanFilterSwitch::~PiffMeanFilterSwitch() {
  // @@protoc_insertion_point(destructor:control.PiffMeanFilterSwitch)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PiffMeanFilterSwitch::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PiffMeanFilterSwitch::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            PiffMeanFilterSwitch::IsInitializedImpl,
            &PiffMeanFilterSwitch::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PiffMeanFilterSwitch>(),
            ::google::protobuf::Message::GetNewImpl<PiffMeanFilterSwitch>(),
            ::google::protobuf::Message::GetClearImpl<PiffMeanFilterSwitch>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<PiffMeanFilterSwitch>(),
                ::google::protobuf::Message::GetSerializeImpl<PiffMeanFilterSwitch>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PiffMeanFilterSwitch, _impl_._cached_size_),
            false,
        },
        &PiffMeanFilterSwitch::kDescriptorMethods,
        &descriptor_table_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PiffMeanFilterSwitch::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> PiffMeanFilterSwitch::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PiffMeanFilterSwitch, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PiffMeanFilterSwitch_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::PiffMeanFilterSwitch>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required bool enable_center_line_c0 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PiffMeanFilterSwitch, _impl_.enable_center_line_c0_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(PiffMeanFilterSwitch, _impl_.enable_center_line_c0_)}},
    // required bool enable_center_line_c1 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PiffMeanFilterSwitch, _impl_.enable_center_line_c1_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(PiffMeanFilterSwitch, _impl_.enable_center_line_c1_)}},
    // required bool enable_center_line_c2 = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PiffMeanFilterSwitch, _impl_.enable_center_line_c2_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(PiffMeanFilterSwitch, _impl_.enable_center_line_c2_)}},
    // required bool enable_speed_mps = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PiffMeanFilterSwitch, _impl_.enable_speed_mps_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(PiffMeanFilterSwitch, _impl_.enable_speed_mps_)}},
    // required bool enable_yaw_rate = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PiffMeanFilterSwitch, _impl_.enable_yaw_rate_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(PiffMeanFilterSwitch, _impl_.enable_yaw_rate_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required bool enable_center_line_c0 = 1;
    {PROTOBUF_FIELD_OFFSET(PiffMeanFilterSwitch, _impl_.enable_center_line_c0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required bool enable_center_line_c1 = 2;
    {PROTOBUF_FIELD_OFFSET(PiffMeanFilterSwitch, _impl_.enable_center_line_c1_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required bool enable_center_line_c2 = 3;
    {PROTOBUF_FIELD_OFFSET(PiffMeanFilterSwitch, _impl_.enable_center_line_c2_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required bool enable_speed_mps = 4;
    {PROTOBUF_FIELD_OFFSET(PiffMeanFilterSwitch, _impl_.enable_speed_mps_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required bool enable_yaw_rate = 5;
    {PROTOBUF_FIELD_OFFSET(PiffMeanFilterSwitch, _impl_.enable_yaw_rate_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PiffMeanFilterSwitch::Clear() {
// @@protoc_insertion_point(message_clear_start:control.PiffMeanFilterSwitch)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.enable_center_line_c0_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.enable_yaw_rate_) -
        reinterpret_cast<char*>(&_impl_.enable_center_line_c0_)) + sizeof(_impl_.enable_yaw_rate_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PiffMeanFilterSwitch::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.PiffMeanFilterSwitch)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required bool enable_center_line_c0 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_enable_center_line_c0(), target);
  }

  // required bool enable_center_line_c1 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_enable_center_line_c1(), target);
  }

  // required bool enable_center_line_c2 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_enable_center_line_c2(), target);
  }

  // required bool enable_speed_mps = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_enable_speed_mps(), target);
  }

  // required bool enable_yaw_rate = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_enable_yaw_rate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.PiffMeanFilterSwitch)
  return target;
}

::size_t PiffMeanFilterSwitch::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.PiffMeanFilterSwitch)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // required bool enable_center_line_c0 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2;
    }
    // required bool enable_center_line_c1 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }
    // required bool enable_center_line_c2 = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2;
    }
    // required bool enable_speed_mps = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2;
    }
    // required bool enable_yaw_rate = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void PiffMeanFilterSwitch::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PiffMeanFilterSwitch*>(&to_msg);
  auto& from = static_cast<const PiffMeanFilterSwitch&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.PiffMeanFilterSwitch)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.enable_center_line_c0_ = from._impl_.enable_center_line_c0_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.enable_center_line_c1_ = from._impl_.enable_center_line_c1_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.enable_center_line_c2_ = from._impl_.enable_center_line_c2_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.enable_speed_mps_ = from._impl_.enable_speed_mps_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.enable_yaw_rate_ = from._impl_.enable_yaw_rate_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PiffMeanFilterSwitch::CopyFrom(const PiffMeanFilterSwitch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.PiffMeanFilterSwitch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PiffMeanFilterSwitch::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const PiffMeanFilterSwitch&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void PiffMeanFilterSwitch::InternalSwap(PiffMeanFilterSwitch* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PiffMeanFilterSwitch, _impl_.enable_yaw_rate_)
      + sizeof(PiffMeanFilterSwitch::_impl_.enable_yaw_rate_)
      - PROTOBUF_FIELD_OFFSET(PiffMeanFilterSwitch, _impl_.enable_center_line_c0_)>(
          reinterpret_cast<char*>(&_impl_.enable_center_line_c0_),
          reinterpret_cast<char*>(&other->_impl_.enable_center_line_c0_));
}

::google::protobuf::Metadata PiffMeanFilterSwitch::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PiffMeanFilterWindowSize::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PiffMeanFilterWindowSize>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PiffMeanFilterWindowSize, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000001f) ^ 0x0000001f) != 0;
  }
};

PiffMeanFilterWindowSize::PiffMeanFilterWindowSize(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.PiffMeanFilterWindowSize)
}
PiffMeanFilterWindowSize::PiffMeanFilterWindowSize(
    ::google::protobuf::Arena* arena, const PiffMeanFilterWindowSize& from)
    : PiffMeanFilterWindowSize(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PiffMeanFilterWindowSize::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PiffMeanFilterWindowSize::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, center_line_c0_mfws_),
           0,
           offsetof(Impl_, yaw_rate_mfws_) -
               offsetof(Impl_, center_line_c0_mfws_) +
               sizeof(Impl_::yaw_rate_mfws_));
}
PiffMeanFilterWindowSize::~PiffMeanFilterWindowSize() {
  // @@protoc_insertion_point(destructor:control.PiffMeanFilterWindowSize)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PiffMeanFilterWindowSize::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PiffMeanFilterWindowSize::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            PiffMeanFilterWindowSize::IsInitializedImpl,
            &PiffMeanFilterWindowSize::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PiffMeanFilterWindowSize>(),
            ::google::protobuf::Message::GetNewImpl<PiffMeanFilterWindowSize>(),
            ::google::protobuf::Message::GetClearImpl<PiffMeanFilterWindowSize>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<PiffMeanFilterWindowSize>(),
                ::google::protobuf::Message::GetSerializeImpl<PiffMeanFilterWindowSize>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PiffMeanFilterWindowSize, _impl_._cached_size_),
            false,
        },
        &PiffMeanFilterWindowSize::kDescriptorMethods,
        &descriptor_table_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PiffMeanFilterWindowSize::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> PiffMeanFilterWindowSize::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PiffMeanFilterWindowSize, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PiffMeanFilterWindowSize_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::PiffMeanFilterWindowSize>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required int32 center_line_c0_mfws = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PiffMeanFilterWindowSize, _impl_.center_line_c0_mfws_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(PiffMeanFilterWindowSize, _impl_.center_line_c0_mfws_)}},
    // required int32 center_line_c1_mfws = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PiffMeanFilterWindowSize, _impl_.center_line_c1_mfws_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(PiffMeanFilterWindowSize, _impl_.center_line_c1_mfws_)}},
    // required int32 center_line_c2_mfws = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PiffMeanFilterWindowSize, _impl_.center_line_c2_mfws_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(PiffMeanFilterWindowSize, _impl_.center_line_c2_mfws_)}},
    // required int32 speed_mps_mfws = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PiffMeanFilterWindowSize, _impl_.speed_mps_mfws_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(PiffMeanFilterWindowSize, _impl_.speed_mps_mfws_)}},
    // required int32 yaw_rate_mfws = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PiffMeanFilterWindowSize, _impl_.yaw_rate_mfws_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(PiffMeanFilterWindowSize, _impl_.yaw_rate_mfws_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required int32 center_line_c0_mfws = 1;
    {PROTOBUF_FIELD_OFFSET(PiffMeanFilterWindowSize, _impl_.center_line_c0_mfws_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required int32 center_line_c1_mfws = 2;
    {PROTOBUF_FIELD_OFFSET(PiffMeanFilterWindowSize, _impl_.center_line_c1_mfws_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required int32 center_line_c2_mfws = 3;
    {PROTOBUF_FIELD_OFFSET(PiffMeanFilterWindowSize, _impl_.center_line_c2_mfws_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required int32 speed_mps_mfws = 4;
    {PROTOBUF_FIELD_OFFSET(PiffMeanFilterWindowSize, _impl_.speed_mps_mfws_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required int32 yaw_rate_mfws = 5;
    {PROTOBUF_FIELD_OFFSET(PiffMeanFilterWindowSize, _impl_.yaw_rate_mfws_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PiffMeanFilterWindowSize::Clear() {
// @@protoc_insertion_point(message_clear_start:control.PiffMeanFilterWindowSize)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.center_line_c0_mfws_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.yaw_rate_mfws_) -
        reinterpret_cast<char*>(&_impl_.center_line_c0_mfws_)) + sizeof(_impl_.yaw_rate_mfws_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PiffMeanFilterWindowSize::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.PiffMeanFilterWindowSize)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 center_line_c0_mfws = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_center_line_c0_mfws(), target);
  }

  // required int32 center_line_c1_mfws = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_center_line_c1_mfws(), target);
  }

  // required int32 center_line_c2_mfws = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_center_line_c2_mfws(), target);
  }

  // required int32 speed_mps_mfws = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_speed_mps_mfws(), target);
  }

  // required int32 yaw_rate_mfws = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_yaw_rate_mfws(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.PiffMeanFilterWindowSize)
  return target;
}

::size_t PiffMeanFilterWindowSize::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.PiffMeanFilterWindowSize)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // required int32 center_line_c0_mfws = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_center_line_c0_mfws());
    }
    // required int32 center_line_c1_mfws = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_center_line_c1_mfws());
    }
    // required int32 center_line_c2_mfws = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_center_line_c2_mfws());
    }
    // required int32 speed_mps_mfws = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_speed_mps_mfws());
    }
    // required int32 yaw_rate_mfws = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_yaw_rate_mfws());
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void PiffMeanFilterWindowSize::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PiffMeanFilterWindowSize*>(&to_msg);
  auto& from = static_cast<const PiffMeanFilterWindowSize&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.PiffMeanFilterWindowSize)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.center_line_c0_mfws_ = from._impl_.center_line_c0_mfws_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.center_line_c1_mfws_ = from._impl_.center_line_c1_mfws_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.center_line_c2_mfws_ = from._impl_.center_line_c2_mfws_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.speed_mps_mfws_ = from._impl_.speed_mps_mfws_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.yaw_rate_mfws_ = from._impl_.yaw_rate_mfws_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PiffMeanFilterWindowSize::CopyFrom(const PiffMeanFilterWindowSize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.PiffMeanFilterWindowSize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PiffMeanFilterWindowSize::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const PiffMeanFilterWindowSize&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void PiffMeanFilterWindowSize::InternalSwap(PiffMeanFilterWindowSize* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PiffMeanFilterWindowSize, _impl_.yaw_rate_mfws_)
      + sizeof(PiffMeanFilterWindowSize::_impl_.yaw_rate_mfws_)
      - PROTOBUF_FIELD_OFFSET(PiffMeanFilterWindowSize, _impl_.center_line_c0_mfws_)>(
          reinterpret_cast<char*>(&_impl_.center_line_c0_mfws_),
          reinterpret_cast<char*>(&other->_impl_.center_line_c0_mfws_));
}

::google::protobuf::Metadata PiffMeanFilterWindowSize::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PiffMeanFilterConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PiffMeanFilterConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PiffMeanFilterConfig, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

PiffMeanFilterConfig::PiffMeanFilterConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.PiffMeanFilterConfig)
}
inline PROTOBUF_NDEBUG_INLINE PiffMeanFilterConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::PiffMeanFilterConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PiffMeanFilterConfig::PiffMeanFilterConfig(
    ::google::protobuf::Arena* arena,
    const PiffMeanFilterConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PiffMeanFilterConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.filter_switch_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::control::PiffMeanFilterSwitch>(
                              arena, *from._impl_.filter_switch_)
                        : nullptr;
  _impl_.window_size_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::control::PiffMeanFilterWindowSize>(
                              arena, *from._impl_.window_size_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:control.PiffMeanFilterConfig)
}
inline PROTOBUF_NDEBUG_INLINE PiffMeanFilterConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PiffMeanFilterConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, filter_switch_),
           0,
           offsetof(Impl_, window_size_) -
               offsetof(Impl_, filter_switch_) +
               sizeof(Impl_::window_size_));
}
PiffMeanFilterConfig::~PiffMeanFilterConfig() {
  // @@protoc_insertion_point(destructor:control.PiffMeanFilterConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PiffMeanFilterConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.filter_switch_;
  delete _impl_.window_size_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PiffMeanFilterConfig::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            PiffMeanFilterConfig::IsInitializedImpl,
            &PiffMeanFilterConfig::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PiffMeanFilterConfig>(),
            ::google::protobuf::Message::GetNewImpl<PiffMeanFilterConfig>(),
            ::google::protobuf::Message::GetClearImpl<PiffMeanFilterConfig>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<PiffMeanFilterConfig>(),
                ::google::protobuf::Message::GetSerializeImpl<PiffMeanFilterConfig>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PiffMeanFilterConfig, _impl_._cached_size_),
            false,
        },
        &PiffMeanFilterConfig::kDescriptorMethods,
        &descriptor_table_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PiffMeanFilterConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> PiffMeanFilterConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PiffMeanFilterConfig, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PiffMeanFilterConfig_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::PiffMeanFilterConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // required .control.PiffMeanFilterWindowSize window_size = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(PiffMeanFilterConfig, _impl_.window_size_)}},
    // required .control.PiffMeanFilterSwitch filter_switch = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PiffMeanFilterConfig, _impl_.filter_switch_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .control.PiffMeanFilterSwitch filter_switch = 1;
    {PROTOBUF_FIELD_OFFSET(PiffMeanFilterConfig, _impl_.filter_switch_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .control.PiffMeanFilterWindowSize window_size = 2;
    {PROTOBUF_FIELD_OFFSET(PiffMeanFilterConfig, _impl_.window_size_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::PiffMeanFilterSwitch>()},
    {::_pbi::TcParser::GetTable<::control::PiffMeanFilterWindowSize>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PiffMeanFilterConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:control.PiffMeanFilterConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.filter_switch_ != nullptr);
      _impl_.filter_switch_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.window_size_ != nullptr);
      _impl_.window_size_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PiffMeanFilterConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.PiffMeanFilterConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .control.PiffMeanFilterSwitch filter_switch = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.filter_switch_, _impl_.filter_switch_->GetCachedSize(), target, stream);
  }

  // required .control.PiffMeanFilterWindowSize window_size = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.window_size_, _impl_.window_size_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.PiffMeanFilterConfig)
  return target;
}

::size_t PiffMeanFilterConfig::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.PiffMeanFilterConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required .control.PiffMeanFilterSwitch filter_switch = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.filter_switch_);
    }
    // required .control.PiffMeanFilterWindowSize window_size = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.window_size_);
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void PiffMeanFilterConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PiffMeanFilterConfig*>(&to_msg);
  auto& from = static_cast<const PiffMeanFilterConfig&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:control.PiffMeanFilterConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.filter_switch_ != nullptr);
      if (_this->_impl_.filter_switch_ == nullptr) {
        _this->_impl_.filter_switch_ =
            ::google::protobuf::Message::CopyConstruct<::control::PiffMeanFilterSwitch>(arena, *from._impl_.filter_switch_);
      } else {
        _this->_impl_.filter_switch_->MergeFrom(*from._impl_.filter_switch_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.window_size_ != nullptr);
      if (_this->_impl_.window_size_ == nullptr) {
        _this->_impl_.window_size_ =
            ::google::protobuf::Message::CopyConstruct<::control::PiffMeanFilterWindowSize>(arena, *from._impl_.window_size_);
      } else {
        _this->_impl_.window_size_->MergeFrom(*from._impl_.window_size_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PiffMeanFilterConfig::CopyFrom(const PiffMeanFilterConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.PiffMeanFilterConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PiffMeanFilterConfig::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const PiffMeanFilterConfig&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._impl_.filter_switch_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._impl_.window_size_->IsInitialized()) return false;
  }
  return true;
}

void PiffMeanFilterConfig::InternalSwap(PiffMeanFilterConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PiffMeanFilterConfig, _impl_.window_size_)
      + sizeof(PiffMeanFilterConfig::_impl_.window_size_)
      - PROTOBUF_FIELD_OFFSET(PiffMeanFilterConfig, _impl_.filter_switch_)>(
          reinterpret_cast<char*>(&_impl_.filter_switch_),
          reinterpret_cast<char*>(&other->_impl_.filter_switch_));
}

::google::protobuf::Metadata PiffMeanFilterConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PiffControllerContentRateConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PiffControllerContentRateConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PiffControllerContentRateConfig, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000000f) ^ 0x0000000f) != 0;
  }
};

PiffControllerContentRateConfig::PiffControllerContentRateConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.PiffControllerContentRateConfig)
}
PiffControllerContentRateConfig::PiffControllerContentRateConfig(
    ::google::protobuf::Arena* arena, const PiffControllerContentRateConfig& from)
    : PiffControllerContentRateConfig(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PiffControllerContentRateConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PiffControllerContentRateConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, curvature_),
           0,
           offsetof(Impl_, fb_rate_) -
               offsetof(Impl_, curvature_) +
               sizeof(Impl_::fb_rate_));
}
PiffControllerContentRateConfig::~PiffControllerContentRateConfig() {
  // @@protoc_insertion_point(destructor:control.PiffControllerContentRateConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PiffControllerContentRateConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PiffControllerContentRateConfig::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            PiffControllerContentRateConfig::IsInitializedImpl,
            &PiffControllerContentRateConfig::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PiffControllerContentRateConfig>(),
            ::google::protobuf::Message::GetNewImpl<PiffControllerContentRateConfig>(),
            ::google::protobuf::Message::GetClearImpl<PiffControllerContentRateConfig>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<PiffControllerContentRateConfig>(),
                ::google::protobuf::Message::GetSerializeImpl<PiffControllerContentRateConfig>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PiffControllerContentRateConfig, _impl_._cached_size_),
            false,
        },
        &PiffControllerContentRateConfig::kDescriptorMethods,
        &descriptor_table_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PiffControllerContentRateConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> PiffControllerContentRateConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PiffControllerContentRateConfig, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PiffControllerContentRateConfig_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::PiffControllerContentRateConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // required float fb_rate = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(PiffControllerContentRateConfig, _impl_.fb_rate_)}},
    // required float curvature = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(PiffControllerContentRateConfig, _impl_.curvature_)}},
    // required float speed_kph = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(PiffControllerContentRateConfig, _impl_.speed_kph_)}},
    // required float ff_rate = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(PiffControllerContentRateConfig, _impl_.ff_rate_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required float curvature = 1;
    {PROTOBUF_FIELD_OFFSET(PiffControllerContentRateConfig, _impl_.curvature_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float speed_kph = 2;
    {PROTOBUF_FIELD_OFFSET(PiffControllerContentRateConfig, _impl_.speed_kph_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float ff_rate = 3;
    {PROTOBUF_FIELD_OFFSET(PiffControllerContentRateConfig, _impl_.ff_rate_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float fb_rate = 4;
    {PROTOBUF_FIELD_OFFSET(PiffControllerContentRateConfig, _impl_.fb_rate_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PiffControllerContentRateConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:control.PiffControllerContentRateConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.curvature_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.fb_rate_) -
        reinterpret_cast<char*>(&_impl_.curvature_)) + sizeof(_impl_.fb_rate_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PiffControllerContentRateConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.PiffControllerContentRateConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required float curvature = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_curvature(), target);
  }

  // required float speed_kph = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_speed_kph(), target);
  }

  // required float ff_rate = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_ff_rate(), target);
  }

  // required float fb_rate = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_fb_rate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.PiffControllerContentRateConfig)
  return target;
}

::size_t PiffControllerContentRateConfig::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.PiffControllerContentRateConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // required float curvature = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 5;
    }
    // required float speed_kph = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }
    // required float ff_rate = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }
    // required float fb_rate = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 5;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void PiffControllerContentRateConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PiffControllerContentRateConfig*>(&to_msg);
  auto& from = static_cast<const PiffControllerContentRateConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.PiffControllerContentRateConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.curvature_ = from._impl_.curvature_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.speed_kph_ = from._impl_.speed_kph_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.ff_rate_ = from._impl_.ff_rate_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.fb_rate_ = from._impl_.fb_rate_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PiffControllerContentRateConfig::CopyFrom(const PiffControllerContentRateConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.PiffControllerContentRateConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PiffControllerContentRateConfig::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const PiffControllerContentRateConfig&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void PiffControllerContentRateConfig::InternalSwap(PiffControllerContentRateConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PiffControllerContentRateConfig, _impl_.fb_rate_)
      + sizeof(PiffControllerContentRateConfig::_impl_.fb_rate_)
      - PROTOBUF_FIELD_OFFSET(PiffControllerContentRateConfig, _impl_.curvature_)>(
          reinterpret_cast<char*>(&_impl_.curvature_),
          reinterpret_cast<char*>(&other->_impl_.curvature_));
}

::google::protobuf::Metadata PiffControllerContentRateConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PiffLinearModeIntegratorConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PiffLinearModeIntegratorConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PiffLinearModeIntegratorConfig, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

PiffLinearModeIntegratorConfig::PiffLinearModeIntegratorConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.PiffLinearModeIntegratorConfig)
}
inline PROTOBUF_NDEBUG_INLINE PiffLinearModeIntegratorConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::PiffLinearModeIntegratorConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        ki_{visibility, arena, from.ki_} {}

PiffLinearModeIntegratorConfig::PiffLinearModeIntegratorConfig(
    ::google::protobuf::Arena* arena,
    const PiffLinearModeIntegratorConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PiffLinearModeIntegratorConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.ki_mode_ = from._impl_.ki_mode_;

  // @@protoc_insertion_point(copy_constructor:control.PiffLinearModeIntegratorConfig)
}
inline PROTOBUF_NDEBUG_INLINE PiffLinearModeIntegratorConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        ki_{visibility, arena} {}

inline void PiffLinearModeIntegratorConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.ki_mode_ = {};
}
PiffLinearModeIntegratorConfig::~PiffLinearModeIntegratorConfig() {
  // @@protoc_insertion_point(destructor:control.PiffLinearModeIntegratorConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PiffLinearModeIntegratorConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PiffLinearModeIntegratorConfig::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            PiffLinearModeIntegratorConfig::IsInitializedImpl,
            &PiffLinearModeIntegratorConfig::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PiffLinearModeIntegratorConfig>(),
            ::google::protobuf::Message::GetNewImpl<PiffLinearModeIntegratorConfig>(),
            ::google::protobuf::Message::GetClearImpl<PiffLinearModeIntegratorConfig>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<PiffLinearModeIntegratorConfig>(),
                ::google::protobuf::Message::GetSerializeImpl<PiffLinearModeIntegratorConfig>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PiffLinearModeIntegratorConfig, _impl_._cached_size_),
            false,
        },
        &PiffLinearModeIntegratorConfig::kDescriptorMethods,
        &descriptor_table_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PiffLinearModeIntegratorConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> PiffLinearModeIntegratorConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PiffLinearModeIntegratorConfig, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PiffLinearModeIntegratorConfig_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::PiffLinearModeIntegratorConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated float ki = 2;
    {::_pbi::TcParser::FastF32R1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(PiffLinearModeIntegratorConfig, _impl_.ki_)}},
    // required int32 ki_mode = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PiffLinearModeIntegratorConfig, _impl_.ki_mode_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(PiffLinearModeIntegratorConfig, _impl_.ki_mode_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required int32 ki_mode = 1;
    {PROTOBUF_FIELD_OFFSET(PiffLinearModeIntegratorConfig, _impl_.ki_mode_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated float ki = 2;
    {PROTOBUF_FIELD_OFFSET(PiffLinearModeIntegratorConfig, _impl_.ki_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PiffLinearModeIntegratorConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:control.PiffLinearModeIntegratorConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ki_.Clear();
  _impl_.ki_mode_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PiffLinearModeIntegratorConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.PiffLinearModeIntegratorConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 ki_mode = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_ki_mode(), target);
  }

  // repeated float ki = 2;
  for (int i = 0, n = this->_internal_ki_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_ki().Get(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.PiffLinearModeIntegratorConfig)
  return target;
}

::size_t PiffLinearModeIntegratorConfig::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.PiffLinearModeIntegratorConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // repeated float ki = 2;
     {
      std::size_t data_size = std::size_t{4} *
          ::_pbi::FromIntSize(this->_internal_ki_size())
      ;
      std::size_t tag_size = std::size_t{1} *
          ::_pbi::FromIntSize(this->_internal_ki_size());
      ;
      total_size += tag_size + data_size;
    }
  }
   {
    // required int32 ki_mode = 1;
    cached_has_bits = _impl_._has_bits_[0];
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_ki_mode());
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void PiffLinearModeIntegratorConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PiffLinearModeIntegratorConfig*>(&to_msg);
  auto& from = static_cast<const PiffLinearModeIntegratorConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.PiffLinearModeIntegratorConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_ki()->MergeFrom(from._internal_ki());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.ki_mode_ = from._impl_.ki_mode_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PiffLinearModeIntegratorConfig::CopyFrom(const PiffLinearModeIntegratorConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.PiffLinearModeIntegratorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PiffLinearModeIntegratorConfig::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const PiffLinearModeIntegratorConfig&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void PiffLinearModeIntegratorConfig::InternalSwap(PiffLinearModeIntegratorConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.ki_.InternalSwap(&other->_impl_.ki_);
        swap(_impl_.ki_mode_, other->_impl_.ki_mode_);
}

::google::protobuf::Metadata PiffLinearModeIntegratorConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PiffPercentageModeIntegratorConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PiffPercentageModeIntegratorConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PiffPercentageModeIntegratorConfig, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000001f) ^ 0x0000001f) != 0;
  }
};

PiffPercentageModeIntegratorConfig::PiffPercentageModeIntegratorConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.PiffPercentageModeIntegratorConfig)
}
PiffPercentageModeIntegratorConfig::PiffPercentageModeIntegratorConfig(
    ::google::protobuf::Arena* arena, const PiffPercentageModeIntegratorConfig& from)
    : PiffPercentageModeIntegratorConfig(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PiffPercentageModeIntegratorConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PiffPercentageModeIntegratorConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, track_percentage_),
           0,
           offsetof(Impl_, enable_heading_err_rate_contribution_) -
               offsetof(Impl_, track_percentage_) +
               sizeof(Impl_::enable_heading_err_rate_contribution_));
}
PiffPercentageModeIntegratorConfig::~PiffPercentageModeIntegratorConfig() {
  // @@protoc_insertion_point(destructor:control.PiffPercentageModeIntegratorConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PiffPercentageModeIntegratorConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PiffPercentageModeIntegratorConfig::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            PiffPercentageModeIntegratorConfig::IsInitializedImpl,
            &PiffPercentageModeIntegratorConfig::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PiffPercentageModeIntegratorConfig>(),
            ::google::protobuf::Message::GetNewImpl<PiffPercentageModeIntegratorConfig>(),
            ::google::protobuf::Message::GetClearImpl<PiffPercentageModeIntegratorConfig>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<PiffPercentageModeIntegratorConfig>(),
                ::google::protobuf::Message::GetSerializeImpl<PiffPercentageModeIntegratorConfig>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PiffPercentageModeIntegratorConfig, _impl_._cached_size_),
            false,
        },
        &PiffPercentageModeIntegratorConfig::kDescriptorMethods,
        &descriptor_table_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PiffPercentageModeIntegratorConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> PiffPercentageModeIntegratorConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PiffPercentageModeIntegratorConfig, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PiffPercentageModeIntegratorConfig_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::PiffPercentageModeIntegratorConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required float track_percentage = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(PiffPercentageModeIntegratorConfig, _impl_.track_percentage_)}},
    // required bool enable_lateral_err_contribution = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PiffPercentageModeIntegratorConfig, _impl_.enable_lateral_err_contribution_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(PiffPercentageModeIntegratorConfig, _impl_.enable_lateral_err_contribution_)}},
    // required bool enable_lateral_err_rate_contribution = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PiffPercentageModeIntegratorConfig, _impl_.enable_lateral_err_rate_contribution_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(PiffPercentageModeIntegratorConfig, _impl_.enable_lateral_err_rate_contribution_)}},
    // required bool enable_heading_err_contribution = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PiffPercentageModeIntegratorConfig, _impl_.enable_heading_err_contribution_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(PiffPercentageModeIntegratorConfig, _impl_.enable_heading_err_contribution_)}},
    // required bool enable_heading_err_rate_contribution = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PiffPercentageModeIntegratorConfig, _impl_.enable_heading_err_rate_contribution_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(PiffPercentageModeIntegratorConfig, _impl_.enable_heading_err_rate_contribution_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required float track_percentage = 1;
    {PROTOBUF_FIELD_OFFSET(PiffPercentageModeIntegratorConfig, _impl_.track_percentage_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required bool enable_lateral_err_contribution = 2;
    {PROTOBUF_FIELD_OFFSET(PiffPercentageModeIntegratorConfig, _impl_.enable_lateral_err_contribution_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required bool enable_lateral_err_rate_contribution = 3;
    {PROTOBUF_FIELD_OFFSET(PiffPercentageModeIntegratorConfig, _impl_.enable_lateral_err_rate_contribution_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required bool enable_heading_err_contribution = 4;
    {PROTOBUF_FIELD_OFFSET(PiffPercentageModeIntegratorConfig, _impl_.enable_heading_err_contribution_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required bool enable_heading_err_rate_contribution = 5;
    {PROTOBUF_FIELD_OFFSET(PiffPercentageModeIntegratorConfig, _impl_.enable_heading_err_rate_contribution_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PiffPercentageModeIntegratorConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:control.PiffPercentageModeIntegratorConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.track_percentage_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.enable_heading_err_rate_contribution_) -
        reinterpret_cast<char*>(&_impl_.track_percentage_)) + sizeof(_impl_.enable_heading_err_rate_contribution_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PiffPercentageModeIntegratorConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.PiffPercentageModeIntegratorConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required float track_percentage = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_track_percentage(), target);
  }

  // required bool enable_lateral_err_contribution = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_enable_lateral_err_contribution(), target);
  }

  // required bool enable_lateral_err_rate_contribution = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_enable_lateral_err_rate_contribution(), target);
  }

  // required bool enable_heading_err_contribution = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_enable_heading_err_contribution(), target);
  }

  // required bool enable_heading_err_rate_contribution = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_enable_heading_err_rate_contribution(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.PiffPercentageModeIntegratorConfig)
  return target;
}

::size_t PiffPercentageModeIntegratorConfig::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.PiffPercentageModeIntegratorConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // required float track_percentage = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 5;
    }
    // required bool enable_lateral_err_contribution = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }
    // required bool enable_lateral_err_rate_contribution = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2;
    }
    // required bool enable_heading_err_contribution = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2;
    }
    // required bool enable_heading_err_rate_contribution = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void PiffPercentageModeIntegratorConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PiffPercentageModeIntegratorConfig*>(&to_msg);
  auto& from = static_cast<const PiffPercentageModeIntegratorConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.PiffPercentageModeIntegratorConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.track_percentage_ = from._impl_.track_percentage_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.enable_lateral_err_contribution_ = from._impl_.enable_lateral_err_contribution_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.enable_lateral_err_rate_contribution_ = from._impl_.enable_lateral_err_rate_contribution_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.enable_heading_err_contribution_ = from._impl_.enable_heading_err_contribution_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.enable_heading_err_rate_contribution_ = from._impl_.enable_heading_err_rate_contribution_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PiffPercentageModeIntegratorConfig::CopyFrom(const PiffPercentageModeIntegratorConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.PiffPercentageModeIntegratorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PiffPercentageModeIntegratorConfig::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const PiffPercentageModeIntegratorConfig&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void PiffPercentageModeIntegratorConfig::InternalSwap(PiffPercentageModeIntegratorConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PiffPercentageModeIntegratorConfig, _impl_.enable_heading_err_rate_contribution_)
      + sizeof(PiffPercentageModeIntegratorConfig::_impl_.enable_heading_err_rate_contribution_)
      - PROTOBUF_FIELD_OFFSET(PiffPercentageModeIntegratorConfig, _impl_.track_percentage_)>(
          reinterpret_cast<char*>(&_impl_.track_percentage_),
          reinterpret_cast<char*>(&other->_impl_.track_percentage_));
}

::google::protobuf::Metadata PiffPercentageModeIntegratorConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PiffProtectIntegratorConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PiffProtectIntegratorConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PiffProtectIntegratorConfig, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

PiffProtectIntegratorConfig::PiffProtectIntegratorConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.PiffProtectIntegratorConfig)
}
PiffProtectIntegratorConfig::PiffProtectIntegratorConfig(
    ::google::protobuf::Arena* arena, const PiffProtectIntegratorConfig& from)
    : PiffProtectIntegratorConfig(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PiffProtectIntegratorConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PiffProtectIntegratorConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, flag_protection_),
           0,
           offsetof(Impl_, frames_protection_) -
               offsetof(Impl_, flag_protection_) +
               sizeof(Impl_::frames_protection_));
}
PiffProtectIntegratorConfig::~PiffProtectIntegratorConfig() {
  // @@protoc_insertion_point(destructor:control.PiffProtectIntegratorConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PiffProtectIntegratorConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PiffProtectIntegratorConfig::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            PiffProtectIntegratorConfig::IsInitializedImpl,
            &PiffProtectIntegratorConfig::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PiffProtectIntegratorConfig>(),
            ::google::protobuf::Message::GetNewImpl<PiffProtectIntegratorConfig>(),
            ::google::protobuf::Message::GetClearImpl<PiffProtectIntegratorConfig>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<PiffProtectIntegratorConfig>(),
                ::google::protobuf::Message::GetSerializeImpl<PiffProtectIntegratorConfig>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PiffProtectIntegratorConfig, _impl_._cached_size_),
            false,
        },
        &PiffProtectIntegratorConfig::kDescriptorMethods,
        &descriptor_table_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PiffProtectIntegratorConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> PiffProtectIntegratorConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PiffProtectIntegratorConfig, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PiffProtectIntegratorConfig_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::PiffProtectIntegratorConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // required int32 frames_protection = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PiffProtectIntegratorConfig, _impl_.frames_protection_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(PiffProtectIntegratorConfig, _impl_.frames_protection_)}},
    // required bool flag_protection = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PiffProtectIntegratorConfig, _impl_.flag_protection_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(PiffProtectIntegratorConfig, _impl_.flag_protection_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required bool flag_protection = 1;
    {PROTOBUF_FIELD_OFFSET(PiffProtectIntegratorConfig, _impl_.flag_protection_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required int32 frames_protection = 2;
    {PROTOBUF_FIELD_OFFSET(PiffProtectIntegratorConfig, _impl_.frames_protection_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PiffProtectIntegratorConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:control.PiffProtectIntegratorConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.flag_protection_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.frames_protection_) -
        reinterpret_cast<char*>(&_impl_.flag_protection_)) + sizeof(_impl_.frames_protection_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PiffProtectIntegratorConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.PiffProtectIntegratorConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required bool flag_protection = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_flag_protection(), target);
  }

  // required int32 frames_protection = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_frames_protection(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.PiffProtectIntegratorConfig)
  return target;
}

::size_t PiffProtectIntegratorConfig::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.PiffProtectIntegratorConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required bool flag_protection = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2;
    }
    // required int32 frames_protection = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_frames_protection());
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void PiffProtectIntegratorConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PiffProtectIntegratorConfig*>(&to_msg);
  auto& from = static_cast<const PiffProtectIntegratorConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.PiffProtectIntegratorConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.flag_protection_ = from._impl_.flag_protection_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.frames_protection_ = from._impl_.frames_protection_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PiffProtectIntegratorConfig::CopyFrom(const PiffProtectIntegratorConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.PiffProtectIntegratorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PiffProtectIntegratorConfig::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const PiffProtectIntegratorConfig&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void PiffProtectIntegratorConfig::InternalSwap(PiffProtectIntegratorConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PiffProtectIntegratorConfig, _impl_.frames_protection_)
      + sizeof(PiffProtectIntegratorConfig::_impl_.frames_protection_)
      - PROTOBUF_FIELD_OFFSET(PiffProtectIntegratorConfig, _impl_.flag_protection_)>(
          reinterpret_cast<char*>(&_impl_.flag_protection_),
          reinterpret_cast<char*>(&other->_impl_.flag_protection_));
}

::google::protobuf::Metadata PiffProtectIntegratorConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PiffIntegratorConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PiffIntegratorConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PiffIntegratorConfig, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000003f) ^ 0x0000003f) != 0;
  }
};

PiffIntegratorConfig::PiffIntegratorConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.PiffIntegratorConfig)
}
inline PROTOBUF_NDEBUG_INLINE PiffIntegratorConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::PiffIntegratorConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PiffIntegratorConfig::PiffIntegratorConfig(
    ::google::protobuf::Arena* arena,
    const PiffIntegratorConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PiffIntegratorConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.linear_mode_integrator_conf_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::control::PiffLinearModeIntegratorConfig>(
                              arena, *from._impl_.linear_mode_integrator_conf_)
                        : nullptr;
  _impl_.percentage_mode_integrator_conf_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::control::PiffPercentageModeIntegratorConfig>(
                              arena, *from._impl_.percentage_mode_integrator_conf_)
                        : nullptr;
  _impl_.protect_integrator_conf_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::control::PiffProtectIntegratorConfig>(
                              arena, *from._impl_.protect_integrator_conf_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, enable_integrator_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, enable_integrator_),
           offsetof(Impl_, mode_integrator_) -
               offsetof(Impl_, enable_integrator_) +
               sizeof(Impl_::mode_integrator_));

  // @@protoc_insertion_point(copy_constructor:control.PiffIntegratorConfig)
}
inline PROTOBUF_NDEBUG_INLINE PiffIntegratorConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PiffIntegratorConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, linear_mode_integrator_conf_),
           0,
           offsetof(Impl_, mode_integrator_) -
               offsetof(Impl_, linear_mode_integrator_conf_) +
               sizeof(Impl_::mode_integrator_));
}
PiffIntegratorConfig::~PiffIntegratorConfig() {
  // @@protoc_insertion_point(destructor:control.PiffIntegratorConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PiffIntegratorConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.linear_mode_integrator_conf_;
  delete _impl_.percentage_mode_integrator_conf_;
  delete _impl_.protect_integrator_conf_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PiffIntegratorConfig::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            PiffIntegratorConfig::IsInitializedImpl,
            &PiffIntegratorConfig::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PiffIntegratorConfig>(),
            ::google::protobuf::Message::GetNewImpl<PiffIntegratorConfig>(),
            ::google::protobuf::Message::GetClearImpl<PiffIntegratorConfig>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<PiffIntegratorConfig>(),
                ::google::protobuf::Message::GetSerializeImpl<PiffIntegratorConfig>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PiffIntegratorConfig, _impl_._cached_size_),
            false,
        },
        &PiffIntegratorConfig::kDescriptorMethods,
        &descriptor_table_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PiffIntegratorConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 3, 0, 2> PiffIntegratorConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PiffIntegratorConfig, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PiffIntegratorConfig_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::PiffIntegratorConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required bool enable_integrator = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PiffIntegratorConfig, _impl_.enable_integrator_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(PiffIntegratorConfig, _impl_.enable_integrator_)}},
    // required float steering_saturation_level_deg = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 4, 0, PROTOBUF_FIELD_OFFSET(PiffIntegratorConfig, _impl_.steering_saturation_level_deg_)}},
    // required int32 mode_integrator = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PiffIntegratorConfig, _impl_.mode_integrator_), 5>(),
     {24, 5, 0, PROTOBUF_FIELD_OFFSET(PiffIntegratorConfig, _impl_.mode_integrator_)}},
    // required .control.PiffLinearModeIntegratorConfig linear_mode_integrator_conf = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(PiffIntegratorConfig, _impl_.linear_mode_integrator_conf_)}},
    // required .control.PiffPercentageModeIntegratorConfig percentage_mode_integrator_conf = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(PiffIntegratorConfig, _impl_.percentage_mode_integrator_conf_)}},
    // required .control.PiffProtectIntegratorConfig protect_integrator_conf = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 2, 2, PROTOBUF_FIELD_OFFSET(PiffIntegratorConfig, _impl_.protect_integrator_conf_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required bool enable_integrator = 1;
    {PROTOBUF_FIELD_OFFSET(PiffIntegratorConfig, _impl_.enable_integrator_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required float steering_saturation_level_deg = 2;
    {PROTOBUF_FIELD_OFFSET(PiffIntegratorConfig, _impl_.steering_saturation_level_deg_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required int32 mode_integrator = 3;
    {PROTOBUF_FIELD_OFFSET(PiffIntegratorConfig, _impl_.mode_integrator_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required .control.PiffLinearModeIntegratorConfig linear_mode_integrator_conf = 4;
    {PROTOBUF_FIELD_OFFSET(PiffIntegratorConfig, _impl_.linear_mode_integrator_conf_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .control.PiffPercentageModeIntegratorConfig percentage_mode_integrator_conf = 5;
    {PROTOBUF_FIELD_OFFSET(PiffIntegratorConfig, _impl_.percentage_mode_integrator_conf_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .control.PiffProtectIntegratorConfig protect_integrator_conf = 6;
    {PROTOBUF_FIELD_OFFSET(PiffIntegratorConfig, _impl_.protect_integrator_conf_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::PiffLinearModeIntegratorConfig>()},
    {::_pbi::TcParser::GetTable<::control::PiffPercentageModeIntegratorConfig>()},
    {::_pbi::TcParser::GetTable<::control::PiffProtectIntegratorConfig>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PiffIntegratorConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:control.PiffIntegratorConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.linear_mode_integrator_conf_ != nullptr);
      _impl_.linear_mode_integrator_conf_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.percentage_mode_integrator_conf_ != nullptr);
      _impl_.percentage_mode_integrator_conf_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.protect_integrator_conf_ != nullptr);
      _impl_.protect_integrator_conf_->Clear();
    }
  }
  if (cached_has_bits & 0x00000038u) {
    ::memset(&_impl_.enable_integrator_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.mode_integrator_) -
        reinterpret_cast<char*>(&_impl_.enable_integrator_)) + sizeof(_impl_.mode_integrator_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PiffIntegratorConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.PiffIntegratorConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required bool enable_integrator = 1;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_enable_integrator(), target);
  }

  // required float steering_saturation_level_deg = 2;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_steering_saturation_level_deg(), target);
  }

  // required int32 mode_integrator = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_mode_integrator(), target);
  }

  // required .control.PiffLinearModeIntegratorConfig linear_mode_integrator_conf = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.linear_mode_integrator_conf_, _impl_.linear_mode_integrator_conf_->GetCachedSize(), target, stream);
  }

  // required .control.PiffPercentageModeIntegratorConfig percentage_mode_integrator_conf = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.percentage_mode_integrator_conf_, _impl_.percentage_mode_integrator_conf_->GetCachedSize(), target, stream);
  }

  // required .control.PiffProtectIntegratorConfig protect_integrator_conf = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *_impl_.protect_integrator_conf_, _impl_.protect_integrator_conf_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.PiffIntegratorConfig)
  return target;
}

::size_t PiffIntegratorConfig::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.PiffIntegratorConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // required .control.PiffLinearModeIntegratorConfig linear_mode_integrator_conf = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.linear_mode_integrator_conf_);
    }
    // required .control.PiffPercentageModeIntegratorConfig percentage_mode_integrator_conf = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.percentage_mode_integrator_conf_);
    }
    // required .control.PiffProtectIntegratorConfig protect_integrator_conf = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.protect_integrator_conf_);
    }
    // required bool enable_integrator = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2;
    }
    // required float steering_saturation_level_deg = 2;
    if (cached_has_bits & 0x00000010u) {
      total_size += 5;
    }
    // required int32 mode_integrator = 3;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_mode_integrator());
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void PiffIntegratorConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PiffIntegratorConfig*>(&to_msg);
  auto& from = static_cast<const PiffIntegratorConfig&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:control.PiffIntegratorConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.linear_mode_integrator_conf_ != nullptr);
      if (_this->_impl_.linear_mode_integrator_conf_ == nullptr) {
        _this->_impl_.linear_mode_integrator_conf_ =
            ::google::protobuf::Message::CopyConstruct<::control::PiffLinearModeIntegratorConfig>(arena, *from._impl_.linear_mode_integrator_conf_);
      } else {
        _this->_impl_.linear_mode_integrator_conf_->MergeFrom(*from._impl_.linear_mode_integrator_conf_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.percentage_mode_integrator_conf_ != nullptr);
      if (_this->_impl_.percentage_mode_integrator_conf_ == nullptr) {
        _this->_impl_.percentage_mode_integrator_conf_ =
            ::google::protobuf::Message::CopyConstruct<::control::PiffPercentageModeIntegratorConfig>(arena, *from._impl_.percentage_mode_integrator_conf_);
      } else {
        _this->_impl_.percentage_mode_integrator_conf_->MergeFrom(*from._impl_.percentage_mode_integrator_conf_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.protect_integrator_conf_ != nullptr);
      if (_this->_impl_.protect_integrator_conf_ == nullptr) {
        _this->_impl_.protect_integrator_conf_ =
            ::google::protobuf::Message::CopyConstruct<::control::PiffProtectIntegratorConfig>(arena, *from._impl_.protect_integrator_conf_);
      } else {
        _this->_impl_.protect_integrator_conf_->MergeFrom(*from._impl_.protect_integrator_conf_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.enable_integrator_ = from._impl_.enable_integrator_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.steering_saturation_level_deg_ = from._impl_.steering_saturation_level_deg_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.mode_integrator_ = from._impl_.mode_integrator_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PiffIntegratorConfig::CopyFrom(const PiffIntegratorConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.PiffIntegratorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PiffIntegratorConfig::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const PiffIntegratorConfig&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._impl_.linear_mode_integrator_conf_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._impl_.percentage_mode_integrator_conf_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._impl_.protect_integrator_conf_->IsInitialized()) return false;
  }
  return true;
}

void PiffIntegratorConfig::InternalSwap(PiffIntegratorConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PiffIntegratorConfig, _impl_.mode_integrator_)
      + sizeof(PiffIntegratorConfig::_impl_.mode_integrator_)
      - PROTOBUF_FIELD_OFFSET(PiffIntegratorConfig, _impl_.linear_mode_integrator_conf_)>(
          reinterpret_cast<char*>(&_impl_.linear_mode_integrator_conf_),
          reinterpret_cast<char*>(&other->_impl_.linear_mode_integrator_conf_));
}

::google::protobuf::Metadata PiffIntegratorConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PiffCCSteeringFakeDeadZoneConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PiffCCSteeringFakeDeadZoneConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PiffCCSteeringFakeDeadZoneConfig, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000007f) ^ 0x0000007f) != 0;
  }
};

PiffCCSteeringFakeDeadZoneConfig::PiffCCSteeringFakeDeadZoneConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.PiffCCSteeringFakeDeadZoneConfig)
}
PiffCCSteeringFakeDeadZoneConfig::PiffCCSteeringFakeDeadZoneConfig(
    ::google::protobuf::Arena* arena, const PiffCCSteeringFakeDeadZoneConfig& from)
    : PiffCCSteeringFakeDeadZoneConfig(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PiffCCSteeringFakeDeadZoneConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PiffCCSteeringFakeDeadZoneConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lateral_error_m_fake_zone_),
           0,
           offsetof(Impl_, mode_) -
               offsetof(Impl_, lateral_error_m_fake_zone_) +
               sizeof(Impl_::mode_));
}
PiffCCSteeringFakeDeadZoneConfig::~PiffCCSteeringFakeDeadZoneConfig() {
  // @@protoc_insertion_point(destructor:control.PiffCCSteeringFakeDeadZoneConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PiffCCSteeringFakeDeadZoneConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PiffCCSteeringFakeDeadZoneConfig::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            PiffCCSteeringFakeDeadZoneConfig::IsInitializedImpl,
            &PiffCCSteeringFakeDeadZoneConfig::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PiffCCSteeringFakeDeadZoneConfig>(),
            ::google::protobuf::Message::GetNewImpl<PiffCCSteeringFakeDeadZoneConfig>(),
            ::google::protobuf::Message::GetClearImpl<PiffCCSteeringFakeDeadZoneConfig>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<PiffCCSteeringFakeDeadZoneConfig>(),
                ::google::protobuf::Message::GetSerializeImpl<PiffCCSteeringFakeDeadZoneConfig>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PiffCCSteeringFakeDeadZoneConfig, _impl_._cached_size_),
            false,
        },
        &PiffCCSteeringFakeDeadZoneConfig::kDescriptorMethods,
        &descriptor_table_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PiffCCSteeringFakeDeadZoneConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2> PiffCCSteeringFakeDeadZoneConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PiffCCSteeringFakeDeadZoneConfig, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PiffCCSteeringFakeDeadZoneConfig_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::PiffCCSteeringFakeDeadZoneConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required bool enable_fake_dead_zone = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PiffCCSteeringFakeDeadZoneConfig, _impl_.enable_fake_dead_zone_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(PiffCCSteeringFakeDeadZoneConfig, _impl_.enable_fake_dead_zone_)}},
    // required float lateral_error_m_fake_zone = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 0, 0, PROTOBUF_FIELD_OFFSET(PiffCCSteeringFakeDeadZoneConfig, _impl_.lateral_error_m_fake_zone_)}},
    // required float heading_error_rad_fake_zone = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 3, 0, PROTOBUF_FIELD_OFFSET(PiffCCSteeringFakeDeadZoneConfig, _impl_.heading_error_rad_fake_zone_)}},
    // required bool enable_fake_transition_zone = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PiffCCSteeringFakeDeadZoneConfig, _impl_.enable_fake_transition_zone_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(PiffCCSteeringFakeDeadZoneConfig, _impl_.enable_fake_transition_zone_)}},
    // required float lateral_error_m_transition_zone = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(PiffCCSteeringFakeDeadZoneConfig, _impl_.lateral_error_m_transition_zone_)}},
    // required float heading_error_rad_transition_zone = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 5, 0, PROTOBUF_FIELD_OFFSET(PiffCCSteeringFakeDeadZoneConfig, _impl_.heading_error_rad_transition_zone_)}},
    // required int32 mode = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PiffCCSteeringFakeDeadZoneConfig, _impl_.mode_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(PiffCCSteeringFakeDeadZoneConfig, _impl_.mode_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required bool enable_fake_dead_zone = 1;
    {PROTOBUF_FIELD_OFFSET(PiffCCSteeringFakeDeadZoneConfig, _impl_.enable_fake_dead_zone_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required float lateral_error_m_fake_zone = 2;
    {PROTOBUF_FIELD_OFFSET(PiffCCSteeringFakeDeadZoneConfig, _impl_.lateral_error_m_fake_zone_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float heading_error_rad_fake_zone = 3;
    {PROTOBUF_FIELD_OFFSET(PiffCCSteeringFakeDeadZoneConfig, _impl_.heading_error_rad_fake_zone_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required bool enable_fake_transition_zone = 4;
    {PROTOBUF_FIELD_OFFSET(PiffCCSteeringFakeDeadZoneConfig, _impl_.enable_fake_transition_zone_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required float lateral_error_m_transition_zone = 5;
    {PROTOBUF_FIELD_OFFSET(PiffCCSteeringFakeDeadZoneConfig, _impl_.lateral_error_m_transition_zone_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float heading_error_rad_transition_zone = 6;
    {PROTOBUF_FIELD_OFFSET(PiffCCSteeringFakeDeadZoneConfig, _impl_.heading_error_rad_transition_zone_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required int32 mode = 7;
    {PROTOBUF_FIELD_OFFSET(PiffCCSteeringFakeDeadZoneConfig, _impl_.mode_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PiffCCSteeringFakeDeadZoneConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:control.PiffCCSteeringFakeDeadZoneConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    ::memset(&_impl_.lateral_error_m_fake_zone_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.mode_) -
        reinterpret_cast<char*>(&_impl_.lateral_error_m_fake_zone_)) + sizeof(_impl_.mode_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PiffCCSteeringFakeDeadZoneConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.PiffCCSteeringFakeDeadZoneConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required bool enable_fake_dead_zone = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_enable_fake_dead_zone(), target);
  }

  // required float lateral_error_m_fake_zone = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_lateral_error_m_fake_zone(), target);
  }

  // required float heading_error_rad_fake_zone = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_heading_error_rad_fake_zone(), target);
  }

  // required bool enable_fake_transition_zone = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_enable_fake_transition_zone(), target);
  }

  // required float lateral_error_m_transition_zone = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_lateral_error_m_transition_zone(), target);
  }

  // required float heading_error_rad_transition_zone = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        6, this->_internal_heading_error_rad_transition_zone(), target);
  }

  // required int32 mode = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.PiffCCSteeringFakeDeadZoneConfig)
  return target;
}

::size_t PiffCCSteeringFakeDeadZoneConfig::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.PiffCCSteeringFakeDeadZoneConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // required float lateral_error_m_fake_zone = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 5;
    }
    // required bool enable_fake_dead_zone = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }
    // required bool enable_fake_transition_zone = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2;
    }
    // required float heading_error_rad_fake_zone = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 5;
    }
    // required float lateral_error_m_transition_zone = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 5;
    }
    // required float heading_error_rad_transition_zone = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 5;
    }
    // required int32 mode = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_mode());
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void PiffCCSteeringFakeDeadZoneConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PiffCCSteeringFakeDeadZoneConfig*>(&to_msg);
  auto& from = static_cast<const PiffCCSteeringFakeDeadZoneConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.PiffCCSteeringFakeDeadZoneConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.lateral_error_m_fake_zone_ = from._impl_.lateral_error_m_fake_zone_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.enable_fake_dead_zone_ = from._impl_.enable_fake_dead_zone_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.enable_fake_transition_zone_ = from._impl_.enable_fake_transition_zone_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.heading_error_rad_fake_zone_ = from._impl_.heading_error_rad_fake_zone_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.lateral_error_m_transition_zone_ = from._impl_.lateral_error_m_transition_zone_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.heading_error_rad_transition_zone_ = from._impl_.heading_error_rad_transition_zone_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.mode_ = from._impl_.mode_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PiffCCSteeringFakeDeadZoneConfig::CopyFrom(const PiffCCSteeringFakeDeadZoneConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.PiffCCSteeringFakeDeadZoneConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PiffCCSteeringFakeDeadZoneConfig::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const PiffCCSteeringFakeDeadZoneConfig&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void PiffCCSteeringFakeDeadZoneConfig::InternalSwap(PiffCCSteeringFakeDeadZoneConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PiffCCSteeringFakeDeadZoneConfig, _impl_.mode_)
      + sizeof(PiffCCSteeringFakeDeadZoneConfig::_impl_.mode_)
      - PROTOBUF_FIELD_OFFSET(PiffCCSteeringFakeDeadZoneConfig, _impl_.lateral_error_m_fake_zone_)>(
          reinterpret_cast<char*>(&_impl_.lateral_error_m_fake_zone_),
          reinterpret_cast<char*>(&other->_impl_.lateral_error_m_fake_zone_));
}

::google::protobuf::Metadata PiffCCSteeringFakeDeadZoneConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PiffControllerContentConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PiffControllerContentConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PiffControllerContentConfig, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x000000ff) ^ 0x000000ff) != 0;
  }
};

PiffControllerContentConfig::PiffControllerContentConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.PiffControllerContentConfig)
}
inline PROTOBUF_NDEBUG_INLINE PiffControllerContentConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::PiffControllerContentConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        rate_conf_{visibility, arena, from.rate_conf_} {}

PiffControllerContentConfig::PiffControllerContentConfig(
    ::google::protobuf::Arena* arena,
    const PiffControllerContentConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PiffControllerContentConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.integrator_conf_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::control::PiffIntegratorConfig>(
                              arena, *from._impl_.integrator_conf_)
                        : nullptr;
  _impl_.steering_fake_dead_zone_conf_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::control::PiffCCSteeringFakeDeadZoneConfig>(
                              arena, *from._impl_.steering_fake_dead_zone_conf_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, preview_mode_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, preview_mode_),
           offsetof(Impl_, curvaturn_transition_ff_) -
               offsetof(Impl_, preview_mode_) +
               sizeof(Impl_::curvaturn_transition_ff_));

  // @@protoc_insertion_point(copy_constructor:control.PiffControllerContentConfig)
}
inline PROTOBUF_NDEBUG_INLINE PiffControllerContentConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        rate_conf_{visibility, arena} {}

inline void PiffControllerContentConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, integrator_conf_),
           0,
           offsetof(Impl_, curvaturn_transition_ff_) -
               offsetof(Impl_, integrator_conf_) +
               sizeof(Impl_::curvaturn_transition_ff_));
}
PiffControllerContentConfig::~PiffControllerContentConfig() {
  // @@protoc_insertion_point(destructor:control.PiffControllerContentConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PiffControllerContentConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.integrator_conf_;
  delete _impl_.steering_fake_dead_zone_conf_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PiffControllerContentConfig::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            PiffControllerContentConfig::IsInitializedImpl,
            &PiffControllerContentConfig::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PiffControllerContentConfig>(),
            ::google::protobuf::Message::GetNewImpl<PiffControllerContentConfig>(),
            ::google::protobuf::Message::GetClearImpl<PiffControllerContentConfig>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<PiffControllerContentConfig>(),
                ::google::protobuf::Message::GetSerializeImpl<PiffControllerContentConfig>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PiffControllerContentConfig, _impl_._cached_size_),
            false,
        },
        &PiffControllerContentConfig::kDescriptorMethods,
        &descriptor_table_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PiffControllerContentConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 3, 0, 2> PiffControllerContentConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PiffControllerContentConfig, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PiffControllerContentConfig_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::PiffControllerContentConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required int32 preview_mode = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PiffControllerContentConfig, _impl_.preview_mode_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(PiffControllerContentConfig, _impl_.preview_mode_)}},
    // required float preview_time_ms_c01 = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 3, 0, PROTOBUF_FIELD_OFFSET(PiffControllerContentConfig, _impl_.preview_time_ms_c01_)}},
    // required float preview_time_ms_c2 = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 4, 0, PROTOBUF_FIELD_OFFSET(PiffControllerContentConfig, _impl_.preview_time_ms_c2_)}},
    // required float curvature_min_start_ff = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 5, 0, PROTOBUF_FIELD_OFFSET(PiffControllerContentConfig, _impl_.curvature_min_start_ff_)}},
    // repeated .control.PiffControllerContentRateConfig rate_conf = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(PiffControllerContentConfig, _impl_.rate_conf_)}},
    // required .control.PiffIntegratorConfig integrator_conf = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 1, PROTOBUF_FIELD_OFFSET(PiffControllerContentConfig, _impl_.integrator_conf_)}},
    // required float steering_bias_deg = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 6, 0, PROTOBUF_FIELD_OFFSET(PiffControllerContentConfig, _impl_.steering_bias_deg_)}},
    // required .control.PiffCCSteeringFakeDeadZoneConfig steering_fake_dead_zone_conf = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 1, 2, PROTOBUF_FIELD_OFFSET(PiffControllerContentConfig, _impl_.steering_fake_dead_zone_conf_)}},
    // required float curvaturn_transition_ff = 9;
    {::_pbi::TcParser::FastF32S1,
     {77, 7, 0, PROTOBUF_FIELD_OFFSET(PiffControllerContentConfig, _impl_.curvaturn_transition_ff_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required int32 preview_mode = 1;
    {PROTOBUF_FIELD_OFFSET(PiffControllerContentConfig, _impl_.preview_mode_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required float preview_time_ms_c01 = 2;
    {PROTOBUF_FIELD_OFFSET(PiffControllerContentConfig, _impl_.preview_time_ms_c01_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float preview_time_ms_c2 = 3;
    {PROTOBUF_FIELD_OFFSET(PiffControllerContentConfig, _impl_.preview_time_ms_c2_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float curvature_min_start_ff = 4;
    {PROTOBUF_FIELD_OFFSET(PiffControllerContentConfig, _impl_.curvature_min_start_ff_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // repeated .control.PiffControllerContentRateConfig rate_conf = 5;
    {PROTOBUF_FIELD_OFFSET(PiffControllerContentConfig, _impl_.rate_conf_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .control.PiffIntegratorConfig integrator_conf = 6;
    {PROTOBUF_FIELD_OFFSET(PiffControllerContentConfig, _impl_.integrator_conf_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required float steering_bias_deg = 7;
    {PROTOBUF_FIELD_OFFSET(PiffControllerContentConfig, _impl_.steering_bias_deg_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required .control.PiffCCSteeringFakeDeadZoneConfig steering_fake_dead_zone_conf = 8;
    {PROTOBUF_FIELD_OFFSET(PiffControllerContentConfig, _impl_.steering_fake_dead_zone_conf_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required float curvaturn_transition_ff = 9;
    {PROTOBUF_FIELD_OFFSET(PiffControllerContentConfig, _impl_.curvaturn_transition_ff_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::PiffControllerContentRateConfig>()},
    {::_pbi::TcParser::GetTable<::control::PiffIntegratorConfig>()},
    {::_pbi::TcParser::GetTable<::control::PiffCCSteeringFakeDeadZoneConfig>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PiffControllerContentConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:control.PiffControllerContentConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rate_conf_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.integrator_conf_ != nullptr);
      _impl_.integrator_conf_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.steering_fake_dead_zone_conf_ != nullptr);
      _impl_.steering_fake_dead_zone_conf_->Clear();
    }
  }
  if (cached_has_bits & 0x000000fcu) {
    ::memset(&_impl_.preview_mode_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.curvaturn_transition_ff_) -
        reinterpret_cast<char*>(&_impl_.preview_mode_)) + sizeof(_impl_.curvaturn_transition_ff_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PiffControllerContentConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.PiffControllerContentConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 preview_mode = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_preview_mode(), target);
  }

  // required float preview_time_ms_c01 = 2;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_preview_time_ms_c01(), target);
  }

  // required float preview_time_ms_c2 = 3;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_preview_time_ms_c2(), target);
  }

  // required float curvature_min_start_ff = 4;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_curvature_min_start_ff(), target);
  }

  // repeated .control.PiffControllerContentRateConfig rate_conf = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_rate_conf_size());
       i < n; i++) {
    const auto& repfield = this->_internal_rate_conf().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // required .control.PiffIntegratorConfig integrator_conf = 6;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *_impl_.integrator_conf_, _impl_.integrator_conf_->GetCachedSize(), target, stream);
  }

  // required float steering_bias_deg = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        7, this->_internal_steering_bias_deg(), target);
  }

  // required .control.PiffCCSteeringFakeDeadZoneConfig steering_fake_dead_zone_conf = 8;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *_impl_.steering_fake_dead_zone_conf_, _impl_.steering_fake_dead_zone_conf_->GetCachedSize(), target, stream);
  }

  // required float curvaturn_transition_ff = 9;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        9, this->_internal_curvaturn_transition_ff(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.PiffControllerContentConfig)
  return target;
}

::size_t PiffControllerContentConfig::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.PiffControllerContentConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // repeated .control.PiffControllerContentRateConfig rate_conf = 5;
     {
      total_size += 1UL * this->_internal_rate_conf_size();
      for (const auto& msg : this->_internal_rate_conf()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // required .control.PiffIntegratorConfig integrator_conf = 6;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.integrator_conf_);
    }
    // required .control.PiffCCSteeringFakeDeadZoneConfig steering_fake_dead_zone_conf = 8;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.steering_fake_dead_zone_conf_);
    }
    // required int32 preview_mode = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_preview_mode());
    }
    // required float preview_time_ms_c01 = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 5;
    }
    // required float preview_time_ms_c2 = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += 5;
    }
    // required float curvature_min_start_ff = 4;
    if (cached_has_bits & 0x00000020u) {
      total_size += 5;
    }
    // required float steering_bias_deg = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 5;
    }
    // required float curvaturn_transition_ff = 9;
    if (cached_has_bits & 0x00000080u) {
      total_size += 5;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void PiffControllerContentConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PiffControllerContentConfig*>(&to_msg);
  auto& from = static_cast<const PiffControllerContentConfig&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:control.PiffControllerContentConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_rate_conf()->MergeFrom(
      from._internal_rate_conf());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.integrator_conf_ != nullptr);
      if (_this->_impl_.integrator_conf_ == nullptr) {
        _this->_impl_.integrator_conf_ =
            ::google::protobuf::Message::CopyConstruct<::control::PiffIntegratorConfig>(arena, *from._impl_.integrator_conf_);
      } else {
        _this->_impl_.integrator_conf_->MergeFrom(*from._impl_.integrator_conf_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.steering_fake_dead_zone_conf_ != nullptr);
      if (_this->_impl_.steering_fake_dead_zone_conf_ == nullptr) {
        _this->_impl_.steering_fake_dead_zone_conf_ =
            ::google::protobuf::Message::CopyConstruct<::control::PiffCCSteeringFakeDeadZoneConfig>(arena, *from._impl_.steering_fake_dead_zone_conf_);
      } else {
        _this->_impl_.steering_fake_dead_zone_conf_->MergeFrom(*from._impl_.steering_fake_dead_zone_conf_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.preview_mode_ = from._impl_.preview_mode_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.preview_time_ms_c01_ = from._impl_.preview_time_ms_c01_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.preview_time_ms_c2_ = from._impl_.preview_time_ms_c2_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.curvature_min_start_ff_ = from._impl_.curvature_min_start_ff_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.steering_bias_deg_ = from._impl_.steering_bias_deg_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.curvaturn_transition_ff_ = from._impl_.curvaturn_transition_ff_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PiffControllerContentConfig::CopyFrom(const PiffControllerContentConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.PiffControllerContentConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PiffControllerContentConfig::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const PiffControllerContentConfig&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this_._internal_rate_conf()))
    return false;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._impl_.integrator_conf_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._impl_.steering_fake_dead_zone_conf_->IsInitialized()) return false;
  }
  return true;
}

void PiffControllerContentConfig::InternalSwap(PiffControllerContentConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.rate_conf_.InternalSwap(&other->_impl_.rate_conf_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PiffControllerContentConfig, _impl_.curvaturn_transition_ff_)
      + sizeof(PiffControllerContentConfig::_impl_.curvaturn_transition_ff_)
      - PROTOBUF_FIELD_OFFSET(PiffControllerContentConfig, _impl_.integrator_conf_)>(
          reinterpret_cast<char*>(&_impl_.integrator_conf_),
          reinterpret_cast<char*>(&other->_impl_.integrator_conf_));
}

::google::protobuf::Metadata PiffControllerContentConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PiffTrackingDifferentiatorSwitch::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PiffTrackingDifferentiatorSwitch>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PiffTrackingDifferentiatorSwitch, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

PiffTrackingDifferentiatorSwitch::PiffTrackingDifferentiatorSwitch(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.PiffTrackingDifferentiatorSwitch)
}
PiffTrackingDifferentiatorSwitch::PiffTrackingDifferentiatorSwitch(
    ::google::protobuf::Arena* arena, const PiffTrackingDifferentiatorSwitch& from)
    : PiffTrackingDifferentiatorSwitch(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PiffTrackingDifferentiatorSwitch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PiffTrackingDifferentiatorSwitch::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, enable_center_line_c2_),
           0,
           offsetof(Impl_, enable_yaw_rate_) -
               offsetof(Impl_, enable_center_line_c2_) +
               sizeof(Impl_::enable_yaw_rate_));
}
PiffTrackingDifferentiatorSwitch::~PiffTrackingDifferentiatorSwitch() {
  // @@protoc_insertion_point(destructor:control.PiffTrackingDifferentiatorSwitch)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PiffTrackingDifferentiatorSwitch::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PiffTrackingDifferentiatorSwitch::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            PiffTrackingDifferentiatorSwitch::IsInitializedImpl,
            &PiffTrackingDifferentiatorSwitch::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PiffTrackingDifferentiatorSwitch>(),
            ::google::protobuf::Message::GetNewImpl<PiffTrackingDifferentiatorSwitch>(),
            ::google::protobuf::Message::GetClearImpl<PiffTrackingDifferentiatorSwitch>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<PiffTrackingDifferentiatorSwitch>(),
                ::google::protobuf::Message::GetSerializeImpl<PiffTrackingDifferentiatorSwitch>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PiffTrackingDifferentiatorSwitch, _impl_._cached_size_),
            false,
        },
        &PiffTrackingDifferentiatorSwitch::kDescriptorMethods,
        &descriptor_table_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PiffTrackingDifferentiatorSwitch::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> PiffTrackingDifferentiatorSwitch::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PiffTrackingDifferentiatorSwitch, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PiffTrackingDifferentiatorSwitch_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::PiffTrackingDifferentiatorSwitch>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // required bool enable_yaw_rate = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PiffTrackingDifferentiatorSwitch, _impl_.enable_yaw_rate_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(PiffTrackingDifferentiatorSwitch, _impl_.enable_yaw_rate_)}},
    // required bool enable_center_line_c2 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PiffTrackingDifferentiatorSwitch, _impl_.enable_center_line_c2_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(PiffTrackingDifferentiatorSwitch, _impl_.enable_center_line_c2_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required bool enable_center_line_c2 = 1;
    {PROTOBUF_FIELD_OFFSET(PiffTrackingDifferentiatorSwitch, _impl_.enable_center_line_c2_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required bool enable_yaw_rate = 2;
    {PROTOBUF_FIELD_OFFSET(PiffTrackingDifferentiatorSwitch, _impl_.enable_yaw_rate_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PiffTrackingDifferentiatorSwitch::Clear() {
// @@protoc_insertion_point(message_clear_start:control.PiffTrackingDifferentiatorSwitch)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.enable_center_line_c2_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.enable_yaw_rate_) -
      reinterpret_cast<char*>(&_impl_.enable_center_line_c2_)) + sizeof(_impl_.enable_yaw_rate_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PiffTrackingDifferentiatorSwitch::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.PiffTrackingDifferentiatorSwitch)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required bool enable_center_line_c2 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_enable_center_line_c2(), target);
  }

  // required bool enable_yaw_rate = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_enable_yaw_rate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.PiffTrackingDifferentiatorSwitch)
  return target;
}

::size_t PiffTrackingDifferentiatorSwitch::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.PiffTrackingDifferentiatorSwitch)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required bool enable_center_line_c2 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2;
    }
    // required bool enable_yaw_rate = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void PiffTrackingDifferentiatorSwitch::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PiffTrackingDifferentiatorSwitch*>(&to_msg);
  auto& from = static_cast<const PiffTrackingDifferentiatorSwitch&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.PiffTrackingDifferentiatorSwitch)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.enable_center_line_c2_ = from._impl_.enable_center_line_c2_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.enable_yaw_rate_ = from._impl_.enable_yaw_rate_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PiffTrackingDifferentiatorSwitch::CopyFrom(const PiffTrackingDifferentiatorSwitch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.PiffTrackingDifferentiatorSwitch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PiffTrackingDifferentiatorSwitch::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const PiffTrackingDifferentiatorSwitch&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void PiffTrackingDifferentiatorSwitch::InternalSwap(PiffTrackingDifferentiatorSwitch* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PiffTrackingDifferentiatorSwitch, _impl_.enable_yaw_rate_)
      + sizeof(PiffTrackingDifferentiatorSwitch::_impl_.enable_yaw_rate_)
      - PROTOBUF_FIELD_OFFSET(PiffTrackingDifferentiatorSwitch, _impl_.enable_center_line_c2_)>(
          reinterpret_cast<char*>(&_impl_.enable_center_line_c2_),
          reinterpret_cast<char*>(&other->_impl_.enable_center_line_c2_));
}

::google::protobuf::Metadata PiffTrackingDifferentiatorSwitch::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PiffTrackingDifferentiatorStateParameters::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PiffTrackingDifferentiatorStateParameters>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PiffTrackingDifferentiatorStateParameters, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

PiffTrackingDifferentiatorStateParameters::PiffTrackingDifferentiatorStateParameters(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.PiffTrackingDifferentiatorStateParameters)
}
PiffTrackingDifferentiatorStateParameters::PiffTrackingDifferentiatorStateParameters(
    ::google::protobuf::Arena* arena, const PiffTrackingDifferentiatorStateParameters& from)
    : PiffTrackingDifferentiatorStateParameters(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PiffTrackingDifferentiatorStateParameters::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PiffTrackingDifferentiatorStateParameters::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tracking_rate_),
           0,
           offsetof(Impl_, smooth_frame_) -
               offsetof(Impl_, tracking_rate_) +
               sizeof(Impl_::smooth_frame_));
}
PiffTrackingDifferentiatorStateParameters::~PiffTrackingDifferentiatorStateParameters() {
  // @@protoc_insertion_point(destructor:control.PiffTrackingDifferentiatorStateParameters)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PiffTrackingDifferentiatorStateParameters::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PiffTrackingDifferentiatorStateParameters::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            PiffTrackingDifferentiatorStateParameters::IsInitializedImpl,
            &PiffTrackingDifferentiatorStateParameters::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PiffTrackingDifferentiatorStateParameters>(),
            ::google::protobuf::Message::GetNewImpl<PiffTrackingDifferentiatorStateParameters>(),
            ::google::protobuf::Message::GetClearImpl<PiffTrackingDifferentiatorStateParameters>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<PiffTrackingDifferentiatorStateParameters>(),
                ::google::protobuf::Message::GetSerializeImpl<PiffTrackingDifferentiatorStateParameters>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PiffTrackingDifferentiatorStateParameters, _impl_._cached_size_),
            false,
        },
        &PiffTrackingDifferentiatorStateParameters::kDescriptorMethods,
        &descriptor_table_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PiffTrackingDifferentiatorStateParameters::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> PiffTrackingDifferentiatorStateParameters::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PiffTrackingDifferentiatorStateParameters, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PiffTrackingDifferentiatorStateParameters_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::PiffTrackingDifferentiatorStateParameters>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // required int32 smooth_frame = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PiffTrackingDifferentiatorStateParameters, _impl_.smooth_frame_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(PiffTrackingDifferentiatorStateParameters, _impl_.smooth_frame_)}},
    // required float tracking_rate = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(PiffTrackingDifferentiatorStateParameters, _impl_.tracking_rate_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required float tracking_rate = 1;
    {PROTOBUF_FIELD_OFFSET(PiffTrackingDifferentiatorStateParameters, _impl_.tracking_rate_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required int32 smooth_frame = 2;
    {PROTOBUF_FIELD_OFFSET(PiffTrackingDifferentiatorStateParameters, _impl_.smooth_frame_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PiffTrackingDifferentiatorStateParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:control.PiffTrackingDifferentiatorStateParameters)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.tracking_rate_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.smooth_frame_) -
        reinterpret_cast<char*>(&_impl_.tracking_rate_)) + sizeof(_impl_.smooth_frame_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PiffTrackingDifferentiatorStateParameters::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.PiffTrackingDifferentiatorStateParameters)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required float tracking_rate = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_tracking_rate(), target);
  }

  // required int32 smooth_frame = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_smooth_frame(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.PiffTrackingDifferentiatorStateParameters)
  return target;
}

::size_t PiffTrackingDifferentiatorStateParameters::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.PiffTrackingDifferentiatorStateParameters)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required float tracking_rate = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 5;
    }
    // required int32 smooth_frame = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_smooth_frame());
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void PiffTrackingDifferentiatorStateParameters::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PiffTrackingDifferentiatorStateParameters*>(&to_msg);
  auto& from = static_cast<const PiffTrackingDifferentiatorStateParameters&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.PiffTrackingDifferentiatorStateParameters)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.tracking_rate_ = from._impl_.tracking_rate_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.smooth_frame_ = from._impl_.smooth_frame_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PiffTrackingDifferentiatorStateParameters::CopyFrom(const PiffTrackingDifferentiatorStateParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.PiffTrackingDifferentiatorStateParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PiffTrackingDifferentiatorStateParameters::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const PiffTrackingDifferentiatorStateParameters&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void PiffTrackingDifferentiatorStateParameters::InternalSwap(PiffTrackingDifferentiatorStateParameters* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PiffTrackingDifferentiatorStateParameters, _impl_.smooth_frame_)
      + sizeof(PiffTrackingDifferentiatorStateParameters::_impl_.smooth_frame_)
      - PROTOBUF_FIELD_OFFSET(PiffTrackingDifferentiatorStateParameters, _impl_.tracking_rate_)>(
          reinterpret_cast<char*>(&_impl_.tracking_rate_),
          reinterpret_cast<char*>(&other->_impl_.tracking_rate_));
}

::google::protobuf::Metadata PiffTrackingDifferentiatorStateParameters::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PiffTrackingDifferentiatorConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PiffTrackingDifferentiatorConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PiffTrackingDifferentiatorConfig, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

PiffTrackingDifferentiatorConfig::PiffTrackingDifferentiatorConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.PiffTrackingDifferentiatorConfig)
}
inline PROTOBUF_NDEBUG_INLINE PiffTrackingDifferentiatorConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::PiffTrackingDifferentiatorConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PiffTrackingDifferentiatorConfig::PiffTrackingDifferentiatorConfig(
    ::google::protobuf::Arena* arena,
    const PiffTrackingDifferentiatorConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PiffTrackingDifferentiatorConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.td_switch_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::control::PiffTrackingDifferentiatorSwitch>(
                              arena, *from._impl_.td_switch_)
                        : nullptr;
  _impl_.center_line_c2_paras_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::control::PiffTrackingDifferentiatorStateParameters>(
                              arena, *from._impl_.center_line_c2_paras_)
                        : nullptr;
  _impl_.yaw_rate_paras_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::control::PiffTrackingDifferentiatorStateParameters>(
                              arena, *from._impl_.yaw_rate_paras_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:control.PiffTrackingDifferentiatorConfig)
}
inline PROTOBUF_NDEBUG_INLINE PiffTrackingDifferentiatorConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PiffTrackingDifferentiatorConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, td_switch_),
           0,
           offsetof(Impl_, yaw_rate_paras_) -
               offsetof(Impl_, td_switch_) +
               sizeof(Impl_::yaw_rate_paras_));
}
PiffTrackingDifferentiatorConfig::~PiffTrackingDifferentiatorConfig() {
  // @@protoc_insertion_point(destructor:control.PiffTrackingDifferentiatorConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PiffTrackingDifferentiatorConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.td_switch_;
  delete _impl_.center_line_c2_paras_;
  delete _impl_.yaw_rate_paras_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PiffTrackingDifferentiatorConfig::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            PiffTrackingDifferentiatorConfig::IsInitializedImpl,
            &PiffTrackingDifferentiatorConfig::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PiffTrackingDifferentiatorConfig>(),
            ::google::protobuf::Message::GetNewImpl<PiffTrackingDifferentiatorConfig>(),
            ::google::protobuf::Message::GetClearImpl<PiffTrackingDifferentiatorConfig>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<PiffTrackingDifferentiatorConfig>(),
                ::google::protobuf::Message::GetSerializeImpl<PiffTrackingDifferentiatorConfig>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PiffTrackingDifferentiatorConfig, _impl_._cached_size_),
            false,
        },
        &PiffTrackingDifferentiatorConfig::kDescriptorMethods,
        &descriptor_table_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PiffTrackingDifferentiatorConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> PiffTrackingDifferentiatorConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PiffTrackingDifferentiatorConfig, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PiffTrackingDifferentiatorConfig_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::PiffTrackingDifferentiatorConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required .control.PiffTrackingDifferentiatorSwitch td_switch = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PiffTrackingDifferentiatorConfig, _impl_.td_switch_)}},
    // required .control.PiffTrackingDifferentiatorStateParameters center_line_c2_paras = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(PiffTrackingDifferentiatorConfig, _impl_.center_line_c2_paras_)}},
    // required .control.PiffTrackingDifferentiatorStateParameters yaw_rate_paras = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(PiffTrackingDifferentiatorConfig, _impl_.yaw_rate_paras_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .control.PiffTrackingDifferentiatorSwitch td_switch = 1;
    {PROTOBUF_FIELD_OFFSET(PiffTrackingDifferentiatorConfig, _impl_.td_switch_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .control.PiffTrackingDifferentiatorStateParameters center_line_c2_paras = 2;
    {PROTOBUF_FIELD_OFFSET(PiffTrackingDifferentiatorConfig, _impl_.center_line_c2_paras_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .control.PiffTrackingDifferentiatorStateParameters yaw_rate_paras = 3;
    {PROTOBUF_FIELD_OFFSET(PiffTrackingDifferentiatorConfig, _impl_.yaw_rate_paras_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::PiffTrackingDifferentiatorSwitch>()},
    {::_pbi::TcParser::GetTable<::control::PiffTrackingDifferentiatorStateParameters>()},
    {::_pbi::TcParser::GetTable<::control::PiffTrackingDifferentiatorStateParameters>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PiffTrackingDifferentiatorConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:control.PiffTrackingDifferentiatorConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.td_switch_ != nullptr);
      _impl_.td_switch_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.center_line_c2_paras_ != nullptr);
      _impl_.center_line_c2_paras_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.yaw_rate_paras_ != nullptr);
      _impl_.yaw_rate_paras_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PiffTrackingDifferentiatorConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.PiffTrackingDifferentiatorConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .control.PiffTrackingDifferentiatorSwitch td_switch = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.td_switch_, _impl_.td_switch_->GetCachedSize(), target, stream);
  }

  // required .control.PiffTrackingDifferentiatorStateParameters center_line_c2_paras = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.center_line_c2_paras_, _impl_.center_line_c2_paras_->GetCachedSize(), target, stream);
  }

  // required .control.PiffTrackingDifferentiatorStateParameters yaw_rate_paras = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.yaw_rate_paras_, _impl_.yaw_rate_paras_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.PiffTrackingDifferentiatorConfig)
  return target;
}

::size_t PiffTrackingDifferentiatorConfig::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.PiffTrackingDifferentiatorConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // required .control.PiffTrackingDifferentiatorSwitch td_switch = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.td_switch_);
    }
    // required .control.PiffTrackingDifferentiatorStateParameters center_line_c2_paras = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.center_line_c2_paras_);
    }
    // required .control.PiffTrackingDifferentiatorStateParameters yaw_rate_paras = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.yaw_rate_paras_);
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void PiffTrackingDifferentiatorConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PiffTrackingDifferentiatorConfig*>(&to_msg);
  auto& from = static_cast<const PiffTrackingDifferentiatorConfig&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:control.PiffTrackingDifferentiatorConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.td_switch_ != nullptr);
      if (_this->_impl_.td_switch_ == nullptr) {
        _this->_impl_.td_switch_ =
            ::google::protobuf::Message::CopyConstruct<::control::PiffTrackingDifferentiatorSwitch>(arena, *from._impl_.td_switch_);
      } else {
        _this->_impl_.td_switch_->MergeFrom(*from._impl_.td_switch_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.center_line_c2_paras_ != nullptr);
      if (_this->_impl_.center_line_c2_paras_ == nullptr) {
        _this->_impl_.center_line_c2_paras_ =
            ::google::protobuf::Message::CopyConstruct<::control::PiffTrackingDifferentiatorStateParameters>(arena, *from._impl_.center_line_c2_paras_);
      } else {
        _this->_impl_.center_line_c2_paras_->MergeFrom(*from._impl_.center_line_c2_paras_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.yaw_rate_paras_ != nullptr);
      if (_this->_impl_.yaw_rate_paras_ == nullptr) {
        _this->_impl_.yaw_rate_paras_ =
            ::google::protobuf::Message::CopyConstruct<::control::PiffTrackingDifferentiatorStateParameters>(arena, *from._impl_.yaw_rate_paras_);
      } else {
        _this->_impl_.yaw_rate_paras_->MergeFrom(*from._impl_.yaw_rate_paras_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PiffTrackingDifferentiatorConfig::CopyFrom(const PiffTrackingDifferentiatorConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.PiffTrackingDifferentiatorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PiffTrackingDifferentiatorConfig::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const PiffTrackingDifferentiatorConfig&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._impl_.td_switch_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._impl_.center_line_c2_paras_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._impl_.yaw_rate_paras_->IsInitialized()) return false;
  }
  return true;
}

void PiffTrackingDifferentiatorConfig::InternalSwap(PiffTrackingDifferentiatorConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PiffTrackingDifferentiatorConfig, _impl_.yaw_rate_paras_)
      + sizeof(PiffTrackingDifferentiatorConfig::_impl_.yaw_rate_paras_)
      - PROTOBUF_FIELD_OFFSET(PiffTrackingDifferentiatorConfig, _impl_.td_switch_)>(
          reinterpret_cast<char*>(&_impl_.td_switch_),
          reinterpret_cast<char*>(&other->_impl_.td_switch_));
}

::google::protobuf::Metadata PiffTrackingDifferentiatorConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PiffDTInputMaxLimitConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PiffDTInputMaxLimitConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PiffDTInputMaxLimitConfig, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

PiffDTInputMaxLimitConfig::PiffDTInputMaxLimitConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.PiffDTInputMaxLimitConfig)
}
PiffDTInputMaxLimitConfig::PiffDTInputMaxLimitConfig(
    ::google::protobuf::Arena* arena, const PiffDTInputMaxLimitConfig& from)
    : PiffDTInputMaxLimitConfig(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PiffDTInputMaxLimitConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PiffDTInputMaxLimitConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, speed_kph_),
           0,
           offsetof(Impl_, heading_error_deg_) -
               offsetof(Impl_, speed_kph_) +
               sizeof(Impl_::heading_error_deg_));
}
PiffDTInputMaxLimitConfig::~PiffDTInputMaxLimitConfig() {
  // @@protoc_insertion_point(destructor:control.PiffDTInputMaxLimitConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PiffDTInputMaxLimitConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PiffDTInputMaxLimitConfig::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            PiffDTInputMaxLimitConfig::IsInitializedImpl,
            &PiffDTInputMaxLimitConfig::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PiffDTInputMaxLimitConfig>(),
            ::google::protobuf::Message::GetNewImpl<PiffDTInputMaxLimitConfig>(),
            ::google::protobuf::Message::GetClearImpl<PiffDTInputMaxLimitConfig>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<PiffDTInputMaxLimitConfig>(),
                ::google::protobuf::Message::GetSerializeImpl<PiffDTInputMaxLimitConfig>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PiffDTInputMaxLimitConfig, _impl_._cached_size_),
            false,
        },
        &PiffDTInputMaxLimitConfig::kDescriptorMethods,
        &descriptor_table_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PiffDTInputMaxLimitConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> PiffDTInputMaxLimitConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PiffDTInputMaxLimitConfig, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PiffDTInputMaxLimitConfig_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::PiffDTInputMaxLimitConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required float speed_kph = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(PiffDTInputMaxLimitConfig, _impl_.speed_kph_)}},
    // required float lateral_error = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(PiffDTInputMaxLimitConfig, _impl_.lateral_error_)}},
    // required float heading_error_deg = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(PiffDTInputMaxLimitConfig, _impl_.heading_error_deg_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required float speed_kph = 1;
    {PROTOBUF_FIELD_OFFSET(PiffDTInputMaxLimitConfig, _impl_.speed_kph_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float lateral_error = 2;
    {PROTOBUF_FIELD_OFFSET(PiffDTInputMaxLimitConfig, _impl_.lateral_error_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float heading_error_deg = 3;
    {PROTOBUF_FIELD_OFFSET(PiffDTInputMaxLimitConfig, _impl_.heading_error_deg_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PiffDTInputMaxLimitConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:control.PiffDTInputMaxLimitConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.speed_kph_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.heading_error_deg_) -
        reinterpret_cast<char*>(&_impl_.speed_kph_)) + sizeof(_impl_.heading_error_deg_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PiffDTInputMaxLimitConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.PiffDTInputMaxLimitConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required float speed_kph = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_speed_kph(), target);
  }

  // required float lateral_error = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_lateral_error(), target);
  }

  // required float heading_error_deg = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_heading_error_deg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.PiffDTInputMaxLimitConfig)
  return target;
}

::size_t PiffDTInputMaxLimitConfig::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.PiffDTInputMaxLimitConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // required float speed_kph = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 5;
    }
    // required float lateral_error = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }
    // required float heading_error_deg = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void PiffDTInputMaxLimitConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PiffDTInputMaxLimitConfig*>(&to_msg);
  auto& from = static_cast<const PiffDTInputMaxLimitConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.PiffDTInputMaxLimitConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.speed_kph_ = from._impl_.speed_kph_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.lateral_error_ = from._impl_.lateral_error_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.heading_error_deg_ = from._impl_.heading_error_deg_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PiffDTInputMaxLimitConfig::CopyFrom(const PiffDTInputMaxLimitConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.PiffDTInputMaxLimitConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PiffDTInputMaxLimitConfig::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const PiffDTInputMaxLimitConfig&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void PiffDTInputMaxLimitConfig::InternalSwap(PiffDTInputMaxLimitConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PiffDTInputMaxLimitConfig, _impl_.heading_error_deg_)
      + sizeof(PiffDTInputMaxLimitConfig::_impl_.heading_error_deg_)
      - PROTOBUF_FIELD_OFFSET(PiffDTInputMaxLimitConfig, _impl_.speed_kph_)>(
          reinterpret_cast<char*>(&_impl_.speed_kph_),
          reinterpret_cast<char*>(&other->_impl_.speed_kph_));
}

::google::protobuf::Metadata PiffDTInputMaxLimitConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PiffDTInputFrameLimitConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PiffDTInputFrameLimitConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PiffDTInputFrameLimitConfig, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x000003ff) ^ 0x000003ff) != 0;
  }
};

PiffDTInputFrameLimitConfig::PiffDTInputFrameLimitConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.PiffDTInputFrameLimitConfig)
}
PiffDTInputFrameLimitConfig::PiffDTInputFrameLimitConfig(
    ::google::protobuf::Arena* arena, const PiffDTInputFrameLimitConfig& from)
    : PiffDTInputFrameLimitConfig(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PiffDTInputFrameLimitConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PiffDTInputFrameLimitConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, speed_kph_),
           0,
           offsetof(Impl_, c2_track_percentage_) -
               offsetof(Impl_, speed_kph_) +
               sizeof(Impl_::c2_track_percentage_));
}
PiffDTInputFrameLimitConfig::~PiffDTInputFrameLimitConfig() {
  // @@protoc_insertion_point(destructor:control.PiffDTInputFrameLimitConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PiffDTInputFrameLimitConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PiffDTInputFrameLimitConfig::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            PiffDTInputFrameLimitConfig::IsInitializedImpl,
            &PiffDTInputFrameLimitConfig::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PiffDTInputFrameLimitConfig>(),
            ::google::protobuf::Message::GetNewImpl<PiffDTInputFrameLimitConfig>(),
            ::google::protobuf::Message::GetClearImpl<PiffDTInputFrameLimitConfig>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<PiffDTInputFrameLimitConfig>(),
                ::google::protobuf::Message::GetSerializeImpl<PiffDTInputFrameLimitConfig>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PiffDTInputFrameLimitConfig, _impl_._cached_size_),
            false,
        },
        &PiffDTInputFrameLimitConfig::kDescriptorMethods,
        &descriptor_table_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PiffDTInputFrameLimitConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 0, 0, 2> PiffDTInputFrameLimitConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PiffDTInputFrameLimitConfig, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PiffDTInputFrameLimitConfig_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::PiffDTInputFrameLimitConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required float speed_kph = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(PiffDTInputFrameLimitConfig, _impl_.speed_kph_)}},
    // required float c0_jump_max_m = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(PiffDTInputFrameLimitConfig, _impl_.c0_jump_max_m_)}},
    // required float c0_transit_rate_mps = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(PiffDTInputFrameLimitConfig, _impl_.c0_transit_rate_mps_)}},
    // required float c0_track_percentage = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(PiffDTInputFrameLimitConfig, _impl_.c0_track_percentage_)}},
    // required float c1_jump_max_rad = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(PiffDTInputFrameLimitConfig, _impl_.c1_jump_max_rad_)}},
    // required float c1_transit_rate_radps = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 5, 0, PROTOBUF_FIELD_OFFSET(PiffDTInputFrameLimitConfig, _impl_.c1_transit_rate_radps_)}},
    // required float c1_track_percentage = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 6, 0, PROTOBUF_FIELD_OFFSET(PiffDTInputFrameLimitConfig, _impl_.c1_track_percentage_)}},
    // required float c2_jump_max = 8;
    {::_pbi::TcParser::FastF32S1,
     {69, 7, 0, PROTOBUF_FIELD_OFFSET(PiffDTInputFrameLimitConfig, _impl_.c2_jump_max_)}},
    // required float c2_transit_rate = 9;
    {::_pbi::TcParser::FastF32S1,
     {77, 8, 0, PROTOBUF_FIELD_OFFSET(PiffDTInputFrameLimitConfig, _impl_.c2_transit_rate_)}},
    // required float c2_track_percentage = 10;
    {::_pbi::TcParser::FastF32S1,
     {85, 9, 0, PROTOBUF_FIELD_OFFSET(PiffDTInputFrameLimitConfig, _impl_.c2_track_percentage_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required float speed_kph = 1;
    {PROTOBUF_FIELD_OFFSET(PiffDTInputFrameLimitConfig, _impl_.speed_kph_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float c0_jump_max_m = 2;
    {PROTOBUF_FIELD_OFFSET(PiffDTInputFrameLimitConfig, _impl_.c0_jump_max_m_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float c0_transit_rate_mps = 3;
    {PROTOBUF_FIELD_OFFSET(PiffDTInputFrameLimitConfig, _impl_.c0_transit_rate_mps_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float c0_track_percentage = 4;
    {PROTOBUF_FIELD_OFFSET(PiffDTInputFrameLimitConfig, _impl_.c0_track_percentage_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float c1_jump_max_rad = 5;
    {PROTOBUF_FIELD_OFFSET(PiffDTInputFrameLimitConfig, _impl_.c1_jump_max_rad_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float c1_transit_rate_radps = 6;
    {PROTOBUF_FIELD_OFFSET(PiffDTInputFrameLimitConfig, _impl_.c1_transit_rate_radps_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float c1_track_percentage = 7;
    {PROTOBUF_FIELD_OFFSET(PiffDTInputFrameLimitConfig, _impl_.c1_track_percentage_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float c2_jump_max = 8;
    {PROTOBUF_FIELD_OFFSET(PiffDTInputFrameLimitConfig, _impl_.c2_jump_max_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float c2_transit_rate = 9;
    {PROTOBUF_FIELD_OFFSET(PiffDTInputFrameLimitConfig, _impl_.c2_transit_rate_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float c2_track_percentage = 10;
    {PROTOBUF_FIELD_OFFSET(PiffDTInputFrameLimitConfig, _impl_.c2_track_percentage_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PiffDTInputFrameLimitConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:control.PiffDTInputFrameLimitConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.speed_kph_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.c2_jump_max_) -
        reinterpret_cast<char*>(&_impl_.speed_kph_)) + sizeof(_impl_.c2_jump_max_));
  }
  if (cached_has_bits & 0x00000300u) {
    ::memset(&_impl_.c2_transit_rate_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.c2_track_percentage_) -
        reinterpret_cast<char*>(&_impl_.c2_transit_rate_)) + sizeof(_impl_.c2_track_percentage_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PiffDTInputFrameLimitConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.PiffDTInputFrameLimitConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required float speed_kph = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_speed_kph(), target);
  }

  // required float c0_jump_max_m = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_c0_jump_max_m(), target);
  }

  // required float c0_transit_rate_mps = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_c0_transit_rate_mps(), target);
  }

  // required float c0_track_percentage = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_c0_track_percentage(), target);
  }

  // required float c1_jump_max_rad = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_c1_jump_max_rad(), target);
  }

  // required float c1_transit_rate_radps = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        6, this->_internal_c1_transit_rate_radps(), target);
  }

  // required float c1_track_percentage = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        7, this->_internal_c1_track_percentage(), target);
  }

  // required float c2_jump_max = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        8, this->_internal_c2_jump_max(), target);
  }

  // required float c2_transit_rate = 9;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        9, this->_internal_c2_transit_rate(), target);
  }

  // required float c2_track_percentage = 10;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        10, this->_internal_c2_track_percentage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.PiffDTInputFrameLimitConfig)
  return target;
}

::size_t PiffDTInputFrameLimitConfig::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.PiffDTInputFrameLimitConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // required float speed_kph = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 5;
    }
    // required float c0_jump_max_m = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }
    // required float c0_transit_rate_mps = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }
    // required float c0_track_percentage = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 5;
    }
    // required float c1_jump_max_rad = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 5;
    }
    // required float c1_transit_rate_radps = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 5;
    }
    // required float c1_track_percentage = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 5;
    }
    // required float c2_jump_max = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 5;
    }
  }
  if (cached_has_bits & 0x00000300u) {
    // required float c2_transit_rate = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 5;
    }
    // required float c2_track_percentage = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 5;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void PiffDTInputFrameLimitConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PiffDTInputFrameLimitConfig*>(&to_msg);
  auto& from = static_cast<const PiffDTInputFrameLimitConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.PiffDTInputFrameLimitConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.speed_kph_ = from._impl_.speed_kph_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.c0_jump_max_m_ = from._impl_.c0_jump_max_m_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.c0_transit_rate_mps_ = from._impl_.c0_transit_rate_mps_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.c0_track_percentage_ = from._impl_.c0_track_percentage_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.c1_jump_max_rad_ = from._impl_.c1_jump_max_rad_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.c1_transit_rate_radps_ = from._impl_.c1_transit_rate_radps_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.c1_track_percentage_ = from._impl_.c1_track_percentage_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.c2_jump_max_ = from._impl_.c2_jump_max_;
    }
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.c2_transit_rate_ = from._impl_.c2_transit_rate_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.c2_track_percentage_ = from._impl_.c2_track_percentage_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PiffDTInputFrameLimitConfig::CopyFrom(const PiffDTInputFrameLimitConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.PiffDTInputFrameLimitConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PiffDTInputFrameLimitConfig::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const PiffDTInputFrameLimitConfig&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void PiffDTInputFrameLimitConfig::InternalSwap(PiffDTInputFrameLimitConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PiffDTInputFrameLimitConfig, _impl_.c2_track_percentage_)
      + sizeof(PiffDTInputFrameLimitConfig::_impl_.c2_track_percentage_)
      - PROTOBUF_FIELD_OFFSET(PiffDTInputFrameLimitConfig, _impl_.speed_kph_)>(
          reinterpret_cast<char*>(&_impl_.speed_kph_),
          reinterpret_cast<char*>(&other->_impl_.speed_kph_));
}

::google::protobuf::Metadata PiffDTInputFrameLimitConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PiffDataTransformConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PiffDataTransformConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PiffDataTransformConfig, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

PiffDataTransformConfig::PiffDataTransformConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.PiffDataTransformConfig)
}
inline PROTOBUF_NDEBUG_INLINE PiffDataTransformConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::PiffDataTransformConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        input_max_limit_conf_{visibility, arena, from.input_max_limit_conf_},
        input_frame_limit_conf_{visibility, arena, from.input_frame_limit_conf_} {}

PiffDataTransformConfig::PiffDataTransformConfig(
    ::google::protobuf::Arena* arena,
    const PiffDataTransformConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PiffDataTransformConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, enable_input_max_limit_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, enable_input_max_limit_),
           offsetof(Impl_, frame_ramp_mode_) -
               offsetof(Impl_, enable_input_max_limit_) +
               sizeof(Impl_::frame_ramp_mode_));

  // @@protoc_insertion_point(copy_constructor:control.PiffDataTransformConfig)
}
inline PROTOBUF_NDEBUG_INLINE PiffDataTransformConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        input_max_limit_conf_{visibility, arena},
        input_frame_limit_conf_{visibility, arena} {}

inline void PiffDataTransformConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, enable_input_max_limit_),
           0,
           offsetof(Impl_, frame_ramp_mode_) -
               offsetof(Impl_, enable_input_max_limit_) +
               sizeof(Impl_::frame_ramp_mode_));
}
PiffDataTransformConfig::~PiffDataTransformConfig() {
  // @@protoc_insertion_point(destructor:control.PiffDataTransformConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PiffDataTransformConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PiffDataTransformConfig::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            PiffDataTransformConfig::IsInitializedImpl,
            &PiffDataTransformConfig::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PiffDataTransformConfig>(),
            ::google::protobuf::Message::GetNewImpl<PiffDataTransformConfig>(),
            ::google::protobuf::Message::GetClearImpl<PiffDataTransformConfig>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<PiffDataTransformConfig>(),
                ::google::protobuf::Message::GetSerializeImpl<PiffDataTransformConfig>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PiffDataTransformConfig, _impl_._cached_size_),
            false,
        },
        &PiffDataTransformConfig::kDescriptorMethods,
        &descriptor_table_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PiffDataTransformConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 0, 2> PiffDataTransformConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PiffDataTransformConfig, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PiffDataTransformConfig_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::PiffDataTransformConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required bool enable_input_max_limit = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PiffDataTransformConfig, _impl_.enable_input_max_limit_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(PiffDataTransformConfig, _impl_.enable_input_max_limit_)}},
    // repeated .control.PiffDTInputMaxLimitConfig input_max_limit_conf = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PiffDataTransformConfig, _impl_.input_max_limit_conf_)}},
    // required bool enable_input_frame_limit = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PiffDataTransformConfig, _impl_.enable_input_frame_limit_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(PiffDataTransformConfig, _impl_.enable_input_frame_limit_)}},
    // repeated .control.PiffDTInputFrameLimitConfig input_frame_limit_conf = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(PiffDataTransformConfig, _impl_.input_frame_limit_conf_)}},
    // required int32 frame_ramp_mode = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PiffDataTransformConfig, _impl_.frame_ramp_mode_), 2>(),
     {40, 2, 0, PROTOBUF_FIELD_OFFSET(PiffDataTransformConfig, _impl_.frame_ramp_mode_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required bool enable_input_max_limit = 1;
    {PROTOBUF_FIELD_OFFSET(PiffDataTransformConfig, _impl_.enable_input_max_limit_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .control.PiffDTInputMaxLimitConfig input_max_limit_conf = 2;
    {PROTOBUF_FIELD_OFFSET(PiffDataTransformConfig, _impl_.input_max_limit_conf_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // required bool enable_input_frame_limit = 3;
    {PROTOBUF_FIELD_OFFSET(PiffDataTransformConfig, _impl_.enable_input_frame_limit_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .control.PiffDTInputFrameLimitConfig input_frame_limit_conf = 4;
    {PROTOBUF_FIELD_OFFSET(PiffDataTransformConfig, _impl_.input_frame_limit_conf_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // required int32 frame_ramp_mode = 5;
    {PROTOBUF_FIELD_OFFSET(PiffDataTransformConfig, _impl_.frame_ramp_mode_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::PiffDTInputMaxLimitConfig>()},
    {::_pbi::TcParser::GetTable<::control::PiffDTInputFrameLimitConfig>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PiffDataTransformConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:control.PiffDataTransformConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.input_max_limit_conf_.Clear();
  _impl_.input_frame_limit_conf_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.enable_input_max_limit_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.frame_ramp_mode_) -
        reinterpret_cast<char*>(&_impl_.enable_input_max_limit_)) + sizeof(_impl_.frame_ramp_mode_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PiffDataTransformConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.PiffDataTransformConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required bool enable_input_max_limit = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_enable_input_max_limit(), target);
  }

  // repeated .control.PiffDTInputMaxLimitConfig input_max_limit_conf = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_input_max_limit_conf_size());
       i < n; i++) {
    const auto& repfield = this->_internal_input_max_limit_conf().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // required bool enable_input_frame_limit = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_enable_input_frame_limit(), target);
  }

  // repeated .control.PiffDTInputFrameLimitConfig input_frame_limit_conf = 4;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_input_frame_limit_conf_size());
       i < n; i++) {
    const auto& repfield = this->_internal_input_frame_limit_conf().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // required int32 frame_ramp_mode = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_frame_ramp_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.PiffDataTransformConfig)
  return target;
}

::size_t PiffDataTransformConfig::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.PiffDataTransformConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // repeated .control.PiffDTInputMaxLimitConfig input_max_limit_conf = 2;
     {
      total_size += 1UL * this->_internal_input_max_limit_conf_size();
      for (const auto& msg : this->_internal_input_max_limit_conf()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .control.PiffDTInputFrameLimitConfig input_frame_limit_conf = 4;
     {
      total_size += 1UL * this->_internal_input_frame_limit_conf_size();
      for (const auto& msg : this->_internal_input_frame_limit_conf()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // required bool enable_input_max_limit = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2;
    }
    // required bool enable_input_frame_limit = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }
    // required int32 frame_ramp_mode = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_frame_ramp_mode());
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void PiffDataTransformConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PiffDataTransformConfig*>(&to_msg);
  auto& from = static_cast<const PiffDataTransformConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.PiffDataTransformConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_input_max_limit_conf()->MergeFrom(
      from._internal_input_max_limit_conf());
  _this->_internal_mutable_input_frame_limit_conf()->MergeFrom(
      from._internal_input_frame_limit_conf());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.enable_input_max_limit_ = from._impl_.enable_input_max_limit_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.enable_input_frame_limit_ = from._impl_.enable_input_frame_limit_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.frame_ramp_mode_ = from._impl_.frame_ramp_mode_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PiffDataTransformConfig::CopyFrom(const PiffDataTransformConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.PiffDataTransformConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PiffDataTransformConfig::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const PiffDataTransformConfig&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this_._internal_input_max_limit_conf()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(this_._internal_input_frame_limit_conf()))
    return false;
  return true;
}

void PiffDataTransformConfig::InternalSwap(PiffDataTransformConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.input_max_limit_conf_.InternalSwap(&other->_impl_.input_max_limit_conf_);
  _impl_.input_frame_limit_conf_.InternalSwap(&other->_impl_.input_frame_limit_conf_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PiffDataTransformConfig, _impl_.frame_ramp_mode_)
      + sizeof(PiffDataTransformConfig::_impl_.frame_ramp_mode_)
      - PROTOBUF_FIELD_OFFSET(PiffDataTransformConfig, _impl_.enable_input_max_limit_)>(
          reinterpret_cast<char*>(&_impl_.enable_input_max_limit_),
          reinterpret_cast<char*>(&other->_impl_.enable_input_max_limit_));
}

::google::protobuf::Metadata PiffDataTransformConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PiffPPSteeringAngleLimit::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PiffPPSteeringAngleLimit>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PiffPPSteeringAngleLimit, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

PiffPPSteeringAngleLimit::PiffPPSteeringAngleLimit(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.PiffPPSteeringAngleLimit)
}
PiffPPSteeringAngleLimit::PiffPPSteeringAngleLimit(
    ::google::protobuf::Arena* arena, const PiffPPSteeringAngleLimit& from)
    : PiffPPSteeringAngleLimit(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PiffPPSteeringAngleLimit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PiffPPSteeringAngleLimit::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, speed_kph_),
           0,
           offsetof(Impl_, steering_rate_range_degps_) -
               offsetof(Impl_, speed_kph_) +
               sizeof(Impl_::steering_rate_range_degps_));
}
PiffPPSteeringAngleLimit::~PiffPPSteeringAngleLimit() {
  // @@protoc_insertion_point(destructor:control.PiffPPSteeringAngleLimit)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PiffPPSteeringAngleLimit::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PiffPPSteeringAngleLimit::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            PiffPPSteeringAngleLimit::IsInitializedImpl,
            &PiffPPSteeringAngleLimit::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PiffPPSteeringAngleLimit>(),
            ::google::protobuf::Message::GetNewImpl<PiffPPSteeringAngleLimit>(),
            ::google::protobuf::Message::GetClearImpl<PiffPPSteeringAngleLimit>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<PiffPPSteeringAngleLimit>(),
                ::google::protobuf::Message::GetSerializeImpl<PiffPPSteeringAngleLimit>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PiffPPSteeringAngleLimit, _impl_._cached_size_),
            false,
        },
        &PiffPPSteeringAngleLimit::kDescriptorMethods,
        &descriptor_table_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PiffPPSteeringAngleLimit::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> PiffPPSteeringAngleLimit::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PiffPPSteeringAngleLimit, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PiffPPSteeringAngleLimit_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::PiffPPSteeringAngleLimit>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required float speed_kph = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(PiffPPSteeringAngleLimit, _impl_.speed_kph_)}},
    // required float steering_range_deg = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(PiffPPSteeringAngleLimit, _impl_.steering_range_deg_)}},
    // required float steering_rate_range_degps = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(PiffPPSteeringAngleLimit, _impl_.steering_rate_range_degps_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required float speed_kph = 1;
    {PROTOBUF_FIELD_OFFSET(PiffPPSteeringAngleLimit, _impl_.speed_kph_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float steering_range_deg = 2;
    {PROTOBUF_FIELD_OFFSET(PiffPPSteeringAngleLimit, _impl_.steering_range_deg_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float steering_rate_range_degps = 3;
    {PROTOBUF_FIELD_OFFSET(PiffPPSteeringAngleLimit, _impl_.steering_rate_range_degps_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PiffPPSteeringAngleLimit::Clear() {
// @@protoc_insertion_point(message_clear_start:control.PiffPPSteeringAngleLimit)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.speed_kph_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.steering_rate_range_degps_) -
        reinterpret_cast<char*>(&_impl_.speed_kph_)) + sizeof(_impl_.steering_rate_range_degps_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PiffPPSteeringAngleLimit::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.PiffPPSteeringAngleLimit)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required float speed_kph = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_speed_kph(), target);
  }

  // required float steering_range_deg = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_steering_range_deg(), target);
  }

  // required float steering_rate_range_degps = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_steering_rate_range_degps(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.PiffPPSteeringAngleLimit)
  return target;
}

::size_t PiffPPSteeringAngleLimit::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.PiffPPSteeringAngleLimit)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // required float speed_kph = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 5;
    }
    // required float steering_range_deg = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }
    // required float steering_rate_range_degps = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void PiffPPSteeringAngleLimit::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PiffPPSteeringAngleLimit*>(&to_msg);
  auto& from = static_cast<const PiffPPSteeringAngleLimit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.PiffPPSteeringAngleLimit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.speed_kph_ = from._impl_.speed_kph_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.steering_range_deg_ = from._impl_.steering_range_deg_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.steering_rate_range_degps_ = from._impl_.steering_rate_range_degps_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PiffPPSteeringAngleLimit::CopyFrom(const PiffPPSteeringAngleLimit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.PiffPPSteeringAngleLimit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PiffPPSteeringAngleLimit::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const PiffPPSteeringAngleLimit&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void PiffPPSteeringAngleLimit::InternalSwap(PiffPPSteeringAngleLimit* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PiffPPSteeringAngleLimit, _impl_.steering_rate_range_degps_)
      + sizeof(PiffPPSteeringAngleLimit::_impl_.steering_rate_range_degps_)
      - PROTOBUF_FIELD_OFFSET(PiffPPSteeringAngleLimit, _impl_.speed_kph_)>(
          reinterpret_cast<char*>(&_impl_.speed_kph_),
          reinterpret_cast<char*>(&other->_impl_.speed_kph_));
}

::google::protobuf::Metadata PiffPPSteeringAngleLimit::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PiffPPActivateControlContentConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PiffPPActivateControlContentConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PiffPPActivateControlContentConfig, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000000f) ^ 0x0000000f) != 0;
  }
};

PiffPPActivateControlContentConfig::PiffPPActivateControlContentConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.PiffPPActivateControlContentConfig)
}
PiffPPActivateControlContentConfig::PiffPPActivateControlContentConfig(
    ::google::protobuf::Arena* arena, const PiffPPActivateControlContentConfig& from)
    : PiffPPActivateControlContentConfig(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PiffPPActivateControlContentConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PiffPPActivateControlContentConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, speed_kph_),
           0,
           offsetof(Impl_, steering_frame_track_percentage_) -
               offsetof(Impl_, speed_kph_) +
               sizeof(Impl_::steering_frame_track_percentage_));
}
PiffPPActivateControlContentConfig::~PiffPPActivateControlContentConfig() {
  // @@protoc_insertion_point(destructor:control.PiffPPActivateControlContentConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PiffPPActivateControlContentConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PiffPPActivateControlContentConfig::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            PiffPPActivateControlContentConfig::IsInitializedImpl,
            &PiffPPActivateControlContentConfig::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PiffPPActivateControlContentConfig>(),
            ::google::protobuf::Message::GetNewImpl<PiffPPActivateControlContentConfig>(),
            ::google::protobuf::Message::GetClearImpl<PiffPPActivateControlContentConfig>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<PiffPPActivateControlContentConfig>(),
                ::google::protobuf::Message::GetSerializeImpl<PiffPPActivateControlContentConfig>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PiffPPActivateControlContentConfig, _impl_._cached_size_),
            false,
        },
        &PiffPPActivateControlContentConfig::kDescriptorMethods,
        &descriptor_table_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PiffPPActivateControlContentConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> PiffPPActivateControlContentConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PiffPPActivateControlContentConfig, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PiffPPActivateControlContentConfig_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::PiffPPActivateControlContentConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // required float steering_frame_track_percentage = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(PiffPPActivateControlContentConfig, _impl_.steering_frame_track_percentage_)}},
    // required float speed_kph = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(PiffPPActivateControlContentConfig, _impl_.speed_kph_)}},
    // required float steering_rate_degps = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(PiffPPActivateControlContentConfig, _impl_.steering_rate_degps_)}},
    // required float steering_dead_zone_deg = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(PiffPPActivateControlContentConfig, _impl_.steering_dead_zone_deg_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required float speed_kph = 1;
    {PROTOBUF_FIELD_OFFSET(PiffPPActivateControlContentConfig, _impl_.speed_kph_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float steering_rate_degps = 2;
    {PROTOBUF_FIELD_OFFSET(PiffPPActivateControlContentConfig, _impl_.steering_rate_degps_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float steering_dead_zone_deg = 3;
    {PROTOBUF_FIELD_OFFSET(PiffPPActivateControlContentConfig, _impl_.steering_dead_zone_deg_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float steering_frame_track_percentage = 4;
    {PROTOBUF_FIELD_OFFSET(PiffPPActivateControlContentConfig, _impl_.steering_frame_track_percentage_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PiffPPActivateControlContentConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:control.PiffPPActivateControlContentConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.speed_kph_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.steering_frame_track_percentage_) -
        reinterpret_cast<char*>(&_impl_.speed_kph_)) + sizeof(_impl_.steering_frame_track_percentage_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PiffPPActivateControlContentConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.PiffPPActivateControlContentConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required float speed_kph = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_speed_kph(), target);
  }

  // required float steering_rate_degps = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_steering_rate_degps(), target);
  }

  // required float steering_dead_zone_deg = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_steering_dead_zone_deg(), target);
  }

  // required float steering_frame_track_percentage = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_steering_frame_track_percentage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.PiffPPActivateControlContentConfig)
  return target;
}

::size_t PiffPPActivateControlContentConfig::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.PiffPPActivateControlContentConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // required float speed_kph = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 5;
    }
    // required float steering_rate_degps = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }
    // required float steering_dead_zone_deg = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }
    // required float steering_frame_track_percentage = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 5;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void PiffPPActivateControlContentConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PiffPPActivateControlContentConfig*>(&to_msg);
  auto& from = static_cast<const PiffPPActivateControlContentConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.PiffPPActivateControlContentConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.speed_kph_ = from._impl_.speed_kph_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.steering_rate_degps_ = from._impl_.steering_rate_degps_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.steering_dead_zone_deg_ = from._impl_.steering_dead_zone_deg_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.steering_frame_track_percentage_ = from._impl_.steering_frame_track_percentage_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PiffPPActivateControlContentConfig::CopyFrom(const PiffPPActivateControlContentConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.PiffPPActivateControlContentConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PiffPPActivateControlContentConfig::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const PiffPPActivateControlContentConfig&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void PiffPPActivateControlContentConfig::InternalSwap(PiffPPActivateControlContentConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PiffPPActivateControlContentConfig, _impl_.steering_frame_track_percentage_)
      + sizeof(PiffPPActivateControlContentConfig::_impl_.steering_frame_track_percentage_)
      - PROTOBUF_FIELD_OFFSET(PiffPPActivateControlContentConfig, _impl_.speed_kph_)>(
          reinterpret_cast<char*>(&_impl_.speed_kph_),
          reinterpret_cast<char*>(&other->_impl_.speed_kph_));
}

::google::protobuf::Metadata PiffPPActivateControlContentConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PiffPPDectivateControlContentConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PiffPPDectivateControlContentConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PiffPPDectivateControlContentConfig, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

PiffPPDectivateControlContentConfig::PiffPPDectivateControlContentConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.PiffPPDectivateControlContentConfig)
}
PiffPPDectivateControlContentConfig::PiffPPDectivateControlContentConfig(
    ::google::protobuf::Arena* arena, const PiffPPDectivateControlContentConfig& from)
    : PiffPPDectivateControlContentConfig(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PiffPPDectivateControlContentConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PiffPPDectivateControlContentConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, speed_kph_),
           0,
           offsetof(Impl_, steering_frame_track_percentage_) -
               offsetof(Impl_, speed_kph_) +
               sizeof(Impl_::steering_frame_track_percentage_));
}
PiffPPDectivateControlContentConfig::~PiffPPDectivateControlContentConfig() {
  // @@protoc_insertion_point(destructor:control.PiffPPDectivateControlContentConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PiffPPDectivateControlContentConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PiffPPDectivateControlContentConfig::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            PiffPPDectivateControlContentConfig::IsInitializedImpl,
            &PiffPPDectivateControlContentConfig::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PiffPPDectivateControlContentConfig>(),
            ::google::protobuf::Message::GetNewImpl<PiffPPDectivateControlContentConfig>(),
            ::google::protobuf::Message::GetClearImpl<PiffPPDectivateControlContentConfig>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<PiffPPDectivateControlContentConfig>(),
                ::google::protobuf::Message::GetSerializeImpl<PiffPPDectivateControlContentConfig>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PiffPPDectivateControlContentConfig, _impl_._cached_size_),
            false,
        },
        &PiffPPDectivateControlContentConfig::kDescriptorMethods,
        &descriptor_table_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PiffPPDectivateControlContentConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> PiffPPDectivateControlContentConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PiffPPDectivateControlContentConfig, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PiffPPDectivateControlContentConfig_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::PiffPPDectivateControlContentConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required float speed_kph = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(PiffPPDectivateControlContentConfig, _impl_.speed_kph_)}},
    // required float steering_rate_degps = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(PiffPPDectivateControlContentConfig, _impl_.steering_rate_degps_)}},
    // required float steering_frame_track_percentage = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(PiffPPDectivateControlContentConfig, _impl_.steering_frame_track_percentage_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required float speed_kph = 1;
    {PROTOBUF_FIELD_OFFSET(PiffPPDectivateControlContentConfig, _impl_.speed_kph_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float steering_rate_degps = 2;
    {PROTOBUF_FIELD_OFFSET(PiffPPDectivateControlContentConfig, _impl_.steering_rate_degps_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float steering_frame_track_percentage = 3;
    {PROTOBUF_FIELD_OFFSET(PiffPPDectivateControlContentConfig, _impl_.steering_frame_track_percentage_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PiffPPDectivateControlContentConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:control.PiffPPDectivateControlContentConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.speed_kph_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.steering_frame_track_percentage_) -
        reinterpret_cast<char*>(&_impl_.speed_kph_)) + sizeof(_impl_.steering_frame_track_percentage_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PiffPPDectivateControlContentConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.PiffPPDectivateControlContentConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required float speed_kph = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_speed_kph(), target);
  }

  // required float steering_rate_degps = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_steering_rate_degps(), target);
  }

  // required float steering_frame_track_percentage = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_steering_frame_track_percentage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.PiffPPDectivateControlContentConfig)
  return target;
}

::size_t PiffPPDectivateControlContentConfig::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.PiffPPDectivateControlContentConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // required float speed_kph = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 5;
    }
    // required float steering_rate_degps = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }
    // required float steering_frame_track_percentage = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void PiffPPDectivateControlContentConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PiffPPDectivateControlContentConfig*>(&to_msg);
  auto& from = static_cast<const PiffPPDectivateControlContentConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.PiffPPDectivateControlContentConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.speed_kph_ = from._impl_.speed_kph_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.steering_rate_degps_ = from._impl_.steering_rate_degps_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.steering_frame_track_percentage_ = from._impl_.steering_frame_track_percentage_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PiffPPDectivateControlContentConfig::CopyFrom(const PiffPPDectivateControlContentConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.PiffPPDectivateControlContentConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PiffPPDectivateControlContentConfig::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const PiffPPDectivateControlContentConfig&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void PiffPPDectivateControlContentConfig::InternalSwap(PiffPPDectivateControlContentConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PiffPPDectivateControlContentConfig, _impl_.steering_frame_track_percentage_)
      + sizeof(PiffPPDectivateControlContentConfig::_impl_.steering_frame_track_percentage_)
      - PROTOBUF_FIELD_OFFSET(PiffPPDectivateControlContentConfig, _impl_.speed_kph_)>(
          reinterpret_cast<char*>(&_impl_.speed_kph_),
          reinterpret_cast<char*>(&other->_impl_.speed_kph_));
}

::google::protobuf::Metadata PiffPPDectivateControlContentConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PiffPPActivateControlConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PiffPPActivateControlConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PiffPPActivateControlConfig, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

PiffPPActivateControlConfig::PiffPPActivateControlConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.PiffPPActivateControlConfig)
}
inline PROTOBUF_NDEBUG_INLINE PiffPPActivateControlConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::PiffPPActivateControlConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        activate_conf_{visibility, arena, from.activate_conf_} {}

PiffPPActivateControlConfig::PiffPPActivateControlConfig(
    ::google::protobuf::Arena* arena,
    const PiffPPActivateControlConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PiffPPActivateControlConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, enable_post_activate_control_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, enable_post_activate_control_),
           offsetof(Impl_, ramp_mode_) -
               offsetof(Impl_, enable_post_activate_control_) +
               sizeof(Impl_::ramp_mode_));

  // @@protoc_insertion_point(copy_constructor:control.PiffPPActivateControlConfig)
}
inline PROTOBUF_NDEBUG_INLINE PiffPPActivateControlConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        activate_conf_{visibility, arena} {}

inline void PiffPPActivateControlConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, enable_post_activate_control_),
           0,
           offsetof(Impl_, ramp_mode_) -
               offsetof(Impl_, enable_post_activate_control_) +
               sizeof(Impl_::ramp_mode_));
}
PiffPPActivateControlConfig::~PiffPPActivateControlConfig() {
  // @@protoc_insertion_point(destructor:control.PiffPPActivateControlConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PiffPPActivateControlConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PiffPPActivateControlConfig::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            PiffPPActivateControlConfig::IsInitializedImpl,
            &PiffPPActivateControlConfig::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PiffPPActivateControlConfig>(),
            ::google::protobuf::Message::GetNewImpl<PiffPPActivateControlConfig>(),
            ::google::protobuf::Message::GetClearImpl<PiffPPActivateControlConfig>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<PiffPPActivateControlConfig>(),
                ::google::protobuf::Message::GetSerializeImpl<PiffPPActivateControlConfig>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PiffPPActivateControlConfig, _impl_._cached_size_),
            false,
        },
        &PiffPPActivateControlConfig::kDescriptorMethods,
        &descriptor_table_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PiffPPActivateControlConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> PiffPPActivateControlConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PiffPPActivateControlConfig, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PiffPPActivateControlConfig_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::PiffPPActivateControlConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required bool enable_post_activate_control = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PiffPPActivateControlConfig, _impl_.enable_post_activate_control_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(PiffPPActivateControlConfig, _impl_.enable_post_activate_control_)}},
    // repeated .control.PiffPPActivateControlContentConfig activate_conf = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PiffPPActivateControlConfig, _impl_.activate_conf_)}},
    // required int32 ramp_mode = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PiffPPActivateControlConfig, _impl_.ramp_mode_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(PiffPPActivateControlConfig, _impl_.ramp_mode_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required bool enable_post_activate_control = 1;
    {PROTOBUF_FIELD_OFFSET(PiffPPActivateControlConfig, _impl_.enable_post_activate_control_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .control.PiffPPActivateControlContentConfig activate_conf = 2;
    {PROTOBUF_FIELD_OFFSET(PiffPPActivateControlConfig, _impl_.activate_conf_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // required int32 ramp_mode = 3;
    {PROTOBUF_FIELD_OFFSET(PiffPPActivateControlConfig, _impl_.ramp_mode_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::PiffPPActivateControlContentConfig>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PiffPPActivateControlConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:control.PiffPPActivateControlConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.activate_conf_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.enable_post_activate_control_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.ramp_mode_) -
        reinterpret_cast<char*>(&_impl_.enable_post_activate_control_)) + sizeof(_impl_.ramp_mode_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PiffPPActivateControlConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.PiffPPActivateControlConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required bool enable_post_activate_control = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_enable_post_activate_control(), target);
  }

  // repeated .control.PiffPPActivateControlContentConfig activate_conf = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_activate_conf_size());
       i < n; i++) {
    const auto& repfield = this->_internal_activate_conf().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // required int32 ramp_mode = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_ramp_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.PiffPPActivateControlConfig)
  return target;
}

::size_t PiffPPActivateControlConfig::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.PiffPPActivateControlConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // repeated .control.PiffPPActivateControlContentConfig activate_conf = 2;
     {
      total_size += 1UL * this->_internal_activate_conf_size();
      for (const auto& msg : this->_internal_activate_conf()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required bool enable_post_activate_control = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2;
    }
    // required int32 ramp_mode = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_ramp_mode());
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void PiffPPActivateControlConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PiffPPActivateControlConfig*>(&to_msg);
  auto& from = static_cast<const PiffPPActivateControlConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.PiffPPActivateControlConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_activate_conf()->MergeFrom(
      from._internal_activate_conf());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.enable_post_activate_control_ = from._impl_.enable_post_activate_control_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.ramp_mode_ = from._impl_.ramp_mode_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PiffPPActivateControlConfig::CopyFrom(const PiffPPActivateControlConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.PiffPPActivateControlConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PiffPPActivateControlConfig::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const PiffPPActivateControlConfig&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this_._internal_activate_conf()))
    return false;
  return true;
}

void PiffPPActivateControlConfig::InternalSwap(PiffPPActivateControlConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.activate_conf_.InternalSwap(&other->_impl_.activate_conf_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PiffPPActivateControlConfig, _impl_.ramp_mode_)
      + sizeof(PiffPPActivateControlConfig::_impl_.ramp_mode_)
      - PROTOBUF_FIELD_OFFSET(PiffPPActivateControlConfig, _impl_.enable_post_activate_control_)>(
          reinterpret_cast<char*>(&_impl_.enable_post_activate_control_),
          reinterpret_cast<char*>(&other->_impl_.enable_post_activate_control_));
}

::google::protobuf::Metadata PiffPPActivateControlConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PiffPPDeactivateControlConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PiffPPDeactivateControlConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PiffPPDeactivateControlConfig, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

PiffPPDeactivateControlConfig::PiffPPDeactivateControlConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.PiffPPDeactivateControlConfig)
}
inline PROTOBUF_NDEBUG_INLINE PiffPPDeactivateControlConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::PiffPPDeactivateControlConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        deactivate_conf_{visibility, arena, from.deactivate_conf_} {}

PiffPPDeactivateControlConfig::PiffPPDeactivateControlConfig(
    ::google::protobuf::Arena* arena,
    const PiffPPDeactivateControlConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PiffPPDeactivateControlConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, enable_post_deactivate_control_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, enable_post_deactivate_control_),
           offsetof(Impl_, ramp_mode_) -
               offsetof(Impl_, enable_post_deactivate_control_) +
               sizeof(Impl_::ramp_mode_));

  // @@protoc_insertion_point(copy_constructor:control.PiffPPDeactivateControlConfig)
}
inline PROTOBUF_NDEBUG_INLINE PiffPPDeactivateControlConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        deactivate_conf_{visibility, arena} {}

inline void PiffPPDeactivateControlConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, enable_post_deactivate_control_),
           0,
           offsetof(Impl_, ramp_mode_) -
               offsetof(Impl_, enable_post_deactivate_control_) +
               sizeof(Impl_::ramp_mode_));
}
PiffPPDeactivateControlConfig::~PiffPPDeactivateControlConfig() {
  // @@protoc_insertion_point(destructor:control.PiffPPDeactivateControlConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PiffPPDeactivateControlConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PiffPPDeactivateControlConfig::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            PiffPPDeactivateControlConfig::IsInitializedImpl,
            &PiffPPDeactivateControlConfig::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PiffPPDeactivateControlConfig>(),
            ::google::protobuf::Message::GetNewImpl<PiffPPDeactivateControlConfig>(),
            ::google::protobuf::Message::GetClearImpl<PiffPPDeactivateControlConfig>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<PiffPPDeactivateControlConfig>(),
                ::google::protobuf::Message::GetSerializeImpl<PiffPPDeactivateControlConfig>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PiffPPDeactivateControlConfig, _impl_._cached_size_),
            false,
        },
        &PiffPPDeactivateControlConfig::kDescriptorMethods,
        &descriptor_table_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PiffPPDeactivateControlConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> PiffPPDeactivateControlConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PiffPPDeactivateControlConfig, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PiffPPDeactivateControlConfig_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::PiffPPDeactivateControlConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required bool enable_post_deactivate_control = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PiffPPDeactivateControlConfig, _impl_.enable_post_deactivate_control_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(PiffPPDeactivateControlConfig, _impl_.enable_post_deactivate_control_)}},
    // repeated .control.PiffPPDectivateControlContentConfig deactivate_conf = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PiffPPDeactivateControlConfig, _impl_.deactivate_conf_)}},
    // required int32 ramp_mode = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PiffPPDeactivateControlConfig, _impl_.ramp_mode_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(PiffPPDeactivateControlConfig, _impl_.ramp_mode_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required bool enable_post_deactivate_control = 1;
    {PROTOBUF_FIELD_OFFSET(PiffPPDeactivateControlConfig, _impl_.enable_post_deactivate_control_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .control.PiffPPDectivateControlContentConfig deactivate_conf = 2;
    {PROTOBUF_FIELD_OFFSET(PiffPPDeactivateControlConfig, _impl_.deactivate_conf_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // required int32 ramp_mode = 3;
    {PROTOBUF_FIELD_OFFSET(PiffPPDeactivateControlConfig, _impl_.ramp_mode_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::PiffPPDectivateControlContentConfig>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PiffPPDeactivateControlConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:control.PiffPPDeactivateControlConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.deactivate_conf_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.enable_post_deactivate_control_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.ramp_mode_) -
        reinterpret_cast<char*>(&_impl_.enable_post_deactivate_control_)) + sizeof(_impl_.ramp_mode_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PiffPPDeactivateControlConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.PiffPPDeactivateControlConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required bool enable_post_deactivate_control = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_enable_post_deactivate_control(), target);
  }

  // repeated .control.PiffPPDectivateControlContentConfig deactivate_conf = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_deactivate_conf_size());
       i < n; i++) {
    const auto& repfield = this->_internal_deactivate_conf().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // required int32 ramp_mode = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_ramp_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.PiffPPDeactivateControlConfig)
  return target;
}

::size_t PiffPPDeactivateControlConfig::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.PiffPPDeactivateControlConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // repeated .control.PiffPPDectivateControlContentConfig deactivate_conf = 2;
     {
      total_size += 1UL * this->_internal_deactivate_conf_size();
      for (const auto& msg : this->_internal_deactivate_conf()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required bool enable_post_deactivate_control = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2;
    }
    // required int32 ramp_mode = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_ramp_mode());
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void PiffPPDeactivateControlConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PiffPPDeactivateControlConfig*>(&to_msg);
  auto& from = static_cast<const PiffPPDeactivateControlConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.PiffPPDeactivateControlConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_deactivate_conf()->MergeFrom(
      from._internal_deactivate_conf());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.enable_post_deactivate_control_ = from._impl_.enable_post_deactivate_control_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.ramp_mode_ = from._impl_.ramp_mode_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PiffPPDeactivateControlConfig::CopyFrom(const PiffPPDeactivateControlConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.PiffPPDeactivateControlConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PiffPPDeactivateControlConfig::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const PiffPPDeactivateControlConfig&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this_._internal_deactivate_conf()))
    return false;
  return true;
}

void PiffPPDeactivateControlConfig::InternalSwap(PiffPPDeactivateControlConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.deactivate_conf_.InternalSwap(&other->_impl_.deactivate_conf_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PiffPPDeactivateControlConfig, _impl_.ramp_mode_)
      + sizeof(PiffPPDeactivateControlConfig::_impl_.ramp_mode_)
      - PROTOBUF_FIELD_OFFSET(PiffPPDeactivateControlConfig, _impl_.enable_post_deactivate_control_)>(
          reinterpret_cast<char*>(&_impl_.enable_post_deactivate_control_),
          reinterpret_cast<char*>(&other->_impl_.enable_post_deactivate_control_));
}

::google::protobuf::Metadata PiffPPDeactivateControlConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PiffPostProcessConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PiffPostProcessConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PiffPostProcessConfig, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000001f) ^ 0x0000001f) != 0;
  }
};

PiffPostProcessConfig::PiffPostProcessConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.PiffPostProcessConfig)
}
inline PROTOBUF_NDEBUG_INLINE PiffPostProcessConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::PiffPostProcessConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        steering_angle_limit_{visibility, arena, from.steering_angle_limit_} {}

PiffPostProcessConfig::PiffPostProcessConfig(
    ::google::protobuf::Arena* arena,
    const PiffPostProcessConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PiffPostProcessConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.post_activate_control_conf_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::control::PiffPPActivateControlConfig>(
                              arena, *from._impl_.post_activate_control_conf_)
                        : nullptr;
  _impl_.post_deactivate_control_conf_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::control::PiffPPDeactivateControlConfig>(
                              arena, *from._impl_.post_deactivate_control_conf_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, enable_steering_limit_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, enable_steering_limit_),
           offsetof(Impl_, steering_rate_range_factor_) -
               offsetof(Impl_, enable_steering_limit_) +
               sizeof(Impl_::steering_rate_range_factor_));

  // @@protoc_insertion_point(copy_constructor:control.PiffPostProcessConfig)
}
inline PROTOBUF_NDEBUG_INLINE PiffPostProcessConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        steering_angle_limit_{visibility, arena} {}

inline void PiffPostProcessConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, post_activate_control_conf_),
           0,
           offsetof(Impl_, steering_rate_range_factor_) -
               offsetof(Impl_, post_activate_control_conf_) +
               sizeof(Impl_::steering_rate_range_factor_));
}
PiffPostProcessConfig::~PiffPostProcessConfig() {
  // @@protoc_insertion_point(destructor:control.PiffPostProcessConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PiffPostProcessConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.post_activate_control_conf_;
  delete _impl_.post_deactivate_control_conf_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PiffPostProcessConfig::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            PiffPostProcessConfig::IsInitializedImpl,
            &PiffPostProcessConfig::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PiffPostProcessConfig>(),
            ::google::protobuf::Message::GetNewImpl<PiffPostProcessConfig>(),
            ::google::protobuf::Message::GetClearImpl<PiffPostProcessConfig>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<PiffPostProcessConfig>(),
                ::google::protobuf::Message::GetSerializeImpl<PiffPostProcessConfig>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PiffPostProcessConfig, _impl_._cached_size_),
            false,
        },
        &PiffPostProcessConfig::kDescriptorMethods,
        &descriptor_table_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PiffPostProcessConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 3, 0, 2> PiffPostProcessConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PiffPostProcessConfig, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PiffPostProcessConfig_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::PiffPostProcessConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required bool enable_steering_limit = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PiffPostProcessConfig, _impl_.enable_steering_limit_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(PiffPostProcessConfig, _impl_.enable_steering_limit_)}},
    // required float steering_range_factor = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 3, 0, PROTOBUF_FIELD_OFFSET(PiffPostProcessConfig, _impl_.steering_range_factor_)}},
    // required float steering_rate_range_factor = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 4, 0, PROTOBUF_FIELD_OFFSET(PiffPostProcessConfig, _impl_.steering_rate_range_factor_)}},
    // repeated .control.PiffPPSteeringAngleLimit steering_angle_limit = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PiffPostProcessConfig, _impl_.steering_angle_limit_)}},
    // required .control.PiffPPActivateControlConfig post_activate_control_conf = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 1, PROTOBUF_FIELD_OFFSET(PiffPostProcessConfig, _impl_.post_activate_control_conf_)}},
    // required .control.PiffPPDeactivateControlConfig post_deactivate_control_conf = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 2, PROTOBUF_FIELD_OFFSET(PiffPostProcessConfig, _impl_.post_deactivate_control_conf_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required bool enable_steering_limit = 1;
    {PROTOBUF_FIELD_OFFSET(PiffPostProcessConfig, _impl_.enable_steering_limit_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required float steering_range_factor = 2;
    {PROTOBUF_FIELD_OFFSET(PiffPostProcessConfig, _impl_.steering_range_factor_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float steering_rate_range_factor = 3;
    {PROTOBUF_FIELD_OFFSET(PiffPostProcessConfig, _impl_.steering_rate_range_factor_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // repeated .control.PiffPPSteeringAngleLimit steering_angle_limit = 4;
    {PROTOBUF_FIELD_OFFSET(PiffPostProcessConfig, _impl_.steering_angle_limit_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .control.PiffPPActivateControlConfig post_activate_control_conf = 5;
    {PROTOBUF_FIELD_OFFSET(PiffPostProcessConfig, _impl_.post_activate_control_conf_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .control.PiffPPDeactivateControlConfig post_deactivate_control_conf = 6;
    {PROTOBUF_FIELD_OFFSET(PiffPostProcessConfig, _impl_.post_deactivate_control_conf_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::PiffPPSteeringAngleLimit>()},
    {::_pbi::TcParser::GetTable<::control::PiffPPActivateControlConfig>()},
    {::_pbi::TcParser::GetTable<::control::PiffPPDeactivateControlConfig>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PiffPostProcessConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:control.PiffPostProcessConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.steering_angle_limit_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.post_activate_control_conf_ != nullptr);
      _impl_.post_activate_control_conf_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.post_deactivate_control_conf_ != nullptr);
      _impl_.post_deactivate_control_conf_->Clear();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&_impl_.enable_steering_limit_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.steering_rate_range_factor_) -
        reinterpret_cast<char*>(&_impl_.enable_steering_limit_)) + sizeof(_impl_.steering_rate_range_factor_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PiffPostProcessConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.PiffPostProcessConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required bool enable_steering_limit = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_enable_steering_limit(), target);
  }

  // required float steering_range_factor = 2;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_steering_range_factor(), target);
  }

  // required float steering_rate_range_factor = 3;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_steering_rate_range_factor(), target);
  }

  // repeated .control.PiffPPSteeringAngleLimit steering_angle_limit = 4;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_steering_angle_limit_size());
       i < n; i++) {
    const auto& repfield = this->_internal_steering_angle_limit().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // required .control.PiffPPActivateControlConfig post_activate_control_conf = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.post_activate_control_conf_, _impl_.post_activate_control_conf_->GetCachedSize(), target, stream);
  }

  // required .control.PiffPPDeactivateControlConfig post_deactivate_control_conf = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *_impl_.post_deactivate_control_conf_, _impl_.post_deactivate_control_conf_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.PiffPostProcessConfig)
  return target;
}

::size_t PiffPostProcessConfig::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.PiffPostProcessConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // repeated .control.PiffPPSteeringAngleLimit steering_angle_limit = 4;
     {
      total_size += 1UL * this->_internal_steering_angle_limit_size();
      for (const auto& msg : this->_internal_steering_angle_limit()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // required .control.PiffPPActivateControlConfig post_activate_control_conf = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.post_activate_control_conf_);
    }
    // required .control.PiffPPDeactivateControlConfig post_deactivate_control_conf = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.post_deactivate_control_conf_);
    }
    // required bool enable_steering_limit = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2;
    }
    // required float steering_range_factor = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 5;
    }
    // required float steering_rate_range_factor = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += 5;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void PiffPostProcessConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PiffPostProcessConfig*>(&to_msg);
  auto& from = static_cast<const PiffPostProcessConfig&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:control.PiffPostProcessConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_steering_angle_limit()->MergeFrom(
      from._internal_steering_angle_limit());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.post_activate_control_conf_ != nullptr);
      if (_this->_impl_.post_activate_control_conf_ == nullptr) {
        _this->_impl_.post_activate_control_conf_ =
            ::google::protobuf::Message::CopyConstruct<::control::PiffPPActivateControlConfig>(arena, *from._impl_.post_activate_control_conf_);
      } else {
        _this->_impl_.post_activate_control_conf_->MergeFrom(*from._impl_.post_activate_control_conf_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.post_deactivate_control_conf_ != nullptr);
      if (_this->_impl_.post_deactivate_control_conf_ == nullptr) {
        _this->_impl_.post_deactivate_control_conf_ =
            ::google::protobuf::Message::CopyConstruct<::control::PiffPPDeactivateControlConfig>(arena, *from._impl_.post_deactivate_control_conf_);
      } else {
        _this->_impl_.post_deactivate_control_conf_->MergeFrom(*from._impl_.post_deactivate_control_conf_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.enable_steering_limit_ = from._impl_.enable_steering_limit_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.steering_range_factor_ = from._impl_.steering_range_factor_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.steering_rate_range_factor_ = from._impl_.steering_rate_range_factor_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PiffPostProcessConfig::CopyFrom(const PiffPostProcessConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.PiffPostProcessConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PiffPostProcessConfig::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const PiffPostProcessConfig&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this_._internal_steering_angle_limit()))
    return false;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._impl_.post_activate_control_conf_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._impl_.post_deactivate_control_conf_->IsInitialized()) return false;
  }
  return true;
}

void PiffPostProcessConfig::InternalSwap(PiffPostProcessConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.steering_angle_limit_.InternalSwap(&other->_impl_.steering_angle_limit_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PiffPostProcessConfig, _impl_.steering_rate_range_factor_)
      + sizeof(PiffPostProcessConfig::_impl_.steering_rate_range_factor_)
      - PROTOBUF_FIELD_OFFSET(PiffPostProcessConfig, _impl_.post_activate_control_conf_)>(
          reinterpret_cast<char*>(&_impl_.post_activate_control_conf_),
          reinterpret_cast<char*>(&other->_impl_.post_activate_control_conf_));
}

::google::protobuf::Metadata PiffPostProcessConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PiffCoeffientGainConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PiffCoeffientGainConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PiffCoeffientGainConfig, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

PiffCoeffientGainConfig::PiffCoeffientGainConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.PiffCoeffientGainConfig)
}
PiffCoeffientGainConfig::PiffCoeffientGainConfig(
    ::google::protobuf::Arena* arena, const PiffCoeffientGainConfig& from)
    : PiffCoeffientGainConfig(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PiffCoeffientGainConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PiffCoeffientGainConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, c0_threshold_),
           0,
           offsetof(Impl_, c2_coef_) -
               offsetof(Impl_, c0_threshold_) +
               sizeof(Impl_::c2_coef_));
}
PiffCoeffientGainConfig::~PiffCoeffientGainConfig() {
  // @@protoc_insertion_point(destructor:control.PiffCoeffientGainConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PiffCoeffientGainConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PiffCoeffientGainConfig::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            PiffCoeffientGainConfig::IsInitializedImpl,
            &PiffCoeffientGainConfig::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PiffCoeffientGainConfig>(),
            ::google::protobuf::Message::GetNewImpl<PiffCoeffientGainConfig>(),
            ::google::protobuf::Message::GetClearImpl<PiffCoeffientGainConfig>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<PiffCoeffientGainConfig>(),
                ::google::protobuf::Message::GetSerializeImpl<PiffCoeffientGainConfig>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PiffCoeffientGainConfig, _impl_._cached_size_),
            false,
        },
        &PiffCoeffientGainConfig::kDescriptorMethods,
        &descriptor_table_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PiffCoeffientGainConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> PiffCoeffientGainConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PiffCoeffientGainConfig, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PiffCoeffientGainConfig_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::PiffCoeffientGainConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required float c0_threshold = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(PiffCoeffientGainConfig, _impl_.c0_threshold_)}},
    // required float c1_coef = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(PiffCoeffientGainConfig, _impl_.c1_coef_)}},
    // required float c2_coef = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(PiffCoeffientGainConfig, _impl_.c2_coef_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required float c0_threshold = 1;
    {PROTOBUF_FIELD_OFFSET(PiffCoeffientGainConfig, _impl_.c0_threshold_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float c1_coef = 2;
    {PROTOBUF_FIELD_OFFSET(PiffCoeffientGainConfig, _impl_.c1_coef_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float c2_coef = 3;
    {PROTOBUF_FIELD_OFFSET(PiffCoeffientGainConfig, _impl_.c2_coef_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PiffCoeffientGainConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:control.PiffCoeffientGainConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.c0_threshold_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.c2_coef_) -
        reinterpret_cast<char*>(&_impl_.c0_threshold_)) + sizeof(_impl_.c2_coef_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PiffCoeffientGainConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.PiffCoeffientGainConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required float c0_threshold = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_c0_threshold(), target);
  }

  // required float c1_coef = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_c1_coef(), target);
  }

  // required float c2_coef = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_c2_coef(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.PiffCoeffientGainConfig)
  return target;
}

::size_t PiffCoeffientGainConfig::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.PiffCoeffientGainConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // required float c0_threshold = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 5;
    }
    // required float c1_coef = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }
    // required float c2_coef = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void PiffCoeffientGainConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PiffCoeffientGainConfig*>(&to_msg);
  auto& from = static_cast<const PiffCoeffientGainConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.PiffCoeffientGainConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.c0_threshold_ = from._impl_.c0_threshold_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.c1_coef_ = from._impl_.c1_coef_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.c2_coef_ = from._impl_.c2_coef_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PiffCoeffientGainConfig::CopyFrom(const PiffCoeffientGainConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.PiffCoeffientGainConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PiffCoeffientGainConfig::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const PiffCoeffientGainConfig&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void PiffCoeffientGainConfig::InternalSwap(PiffCoeffientGainConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PiffCoeffientGainConfig, _impl_.c2_coef_)
      + sizeof(PiffCoeffientGainConfig::_impl_.c2_coef_)
      - PROTOBUF_FIELD_OFFSET(PiffCoeffientGainConfig, _impl_.c0_threshold_)>(
          reinterpret_cast<char*>(&_impl_.c0_threshold_),
          reinterpret_cast<char*>(&other->_impl_.c0_threshold_));
}

::google::protobuf::Metadata PiffCoeffientGainConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PiffCommonParametersConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PiffCommonParametersConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PiffCommonParametersConfig, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

PiffCommonParametersConfig::PiffCommonParametersConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.PiffCommonParametersConfig)
}
PiffCommonParametersConfig::PiffCommonParametersConfig(
    ::google::protobuf::Arena* arena, const PiffCommonParametersConfig& from)
    : PiffCommonParametersConfig(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PiffCommonParametersConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PiffCommonParametersConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, control_period_),
           0,
           offsetof(Impl_, standstill_speed_mps_) -
               offsetof(Impl_, control_period_) +
               sizeof(Impl_::standstill_speed_mps_));
}
PiffCommonParametersConfig::~PiffCommonParametersConfig() {
  // @@protoc_insertion_point(destructor:control.PiffCommonParametersConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PiffCommonParametersConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PiffCommonParametersConfig::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            PiffCommonParametersConfig::IsInitializedImpl,
            &PiffCommonParametersConfig::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PiffCommonParametersConfig>(),
            ::google::protobuf::Message::GetNewImpl<PiffCommonParametersConfig>(),
            ::google::protobuf::Message::GetClearImpl<PiffCommonParametersConfig>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<PiffCommonParametersConfig>(),
                ::google::protobuf::Message::GetSerializeImpl<PiffCommonParametersConfig>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PiffCommonParametersConfig, _impl_._cached_size_),
            false,
        },
        &PiffCommonParametersConfig::kDescriptorMethods,
        &descriptor_table_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PiffCommonParametersConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 0, 0, 2> PiffCommonParametersConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PiffCommonParametersConfig, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967290,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PiffCommonParametersConfig_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::PiffCommonParametersConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required float control_period = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(PiffCommonParametersConfig, _impl_.control_period_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // required float standstill_speed_mps = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 1, 0, PROTOBUF_FIELD_OFFSET(PiffCommonParametersConfig, _impl_.standstill_speed_mps_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required float control_period = 1;
    {PROTOBUF_FIELD_OFFSET(PiffCommonParametersConfig, _impl_.control_period_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float standstill_speed_mps = 3;
    {PROTOBUF_FIELD_OFFSET(PiffCommonParametersConfig, _impl_.standstill_speed_mps_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PiffCommonParametersConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:control.PiffCommonParametersConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.control_period_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.standstill_speed_mps_) -
        reinterpret_cast<char*>(&_impl_.control_period_)) + sizeof(_impl_.standstill_speed_mps_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PiffCommonParametersConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.PiffCommonParametersConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required float control_period = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_control_period(), target);
  }

  // required float standstill_speed_mps = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_standstill_speed_mps(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.PiffCommonParametersConfig)
  return target;
}

::size_t PiffCommonParametersConfig::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.PiffCommonParametersConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required float control_period = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 5;
    }
    // required float standstill_speed_mps = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void PiffCommonParametersConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PiffCommonParametersConfig*>(&to_msg);
  auto& from = static_cast<const PiffCommonParametersConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.PiffCommonParametersConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.control_period_ = from._impl_.control_period_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.standstill_speed_mps_ = from._impl_.standstill_speed_mps_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PiffCommonParametersConfig::CopyFrom(const PiffCommonParametersConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.PiffCommonParametersConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PiffCommonParametersConfig::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const PiffCommonParametersConfig&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void PiffCommonParametersConfig::InternalSwap(PiffCommonParametersConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PiffCommonParametersConfig, _impl_.standstill_speed_mps_)
      + sizeof(PiffCommonParametersConfig::_impl_.standstill_speed_mps_)
      - PROTOBUF_FIELD_OFFSET(PiffCommonParametersConfig, _impl_.control_period_)>(
          reinterpret_cast<char*>(&_impl_.control_period_),
          reinterpret_cast<char*>(&other->_impl_.control_period_));
}

::google::protobuf::Metadata PiffCommonParametersConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LatPidConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<LatPidConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LatPidConfig, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000007f) ^ 0x0000007f) != 0;
  }
};

LatPidConfig::LatPidConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.LatPidConfig)
}
inline PROTOBUF_NDEBUG_INLINE LatPidConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::LatPidConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        piff_paras_{visibility, arena, from.piff_paras_} {}

LatPidConfig::LatPidConfig(
    ::google::protobuf::Arena* arena,
    const LatPidConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LatPidConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.common_para_conf_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::control::PiffCommonParametersConfig>(
                              arena, *from._impl_.common_para_conf_)
                        : nullptr;
  _impl_.controller_content_conf_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::control::PiffControllerContentConfig>(
                              arena, *from._impl_.controller_content_conf_)
                        : nullptr;
  _impl_.mean_filter_conf_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::control::PiffMeanFilterConfig>(
                              arena, *from._impl_.mean_filter_conf_)
                        : nullptr;
  _impl_.tracking_differentiator_conf_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::control::PiffTrackingDifferentiatorConfig>(
                              arena, *from._impl_.tracking_differentiator_conf_)
                        : nullptr;
  _impl_.data_transform_conf_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::control::PiffDataTransformConfig>(
                              arena, *from._impl_.data_transform_conf_)
                        : nullptr;
  _impl_.post_process_conf_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::control::PiffPostProcessConfig>(
                              arena, *from._impl_.post_process_conf_)
                        : nullptr;
  _impl_.coeffient_gain_conf_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::control::PiffCoeffientGainConfig>(
                              arena, *from._impl_.coeffient_gain_conf_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:control.LatPidConfig)
}
inline PROTOBUF_NDEBUG_INLINE LatPidConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        piff_paras_{visibility, arena} {}

inline void LatPidConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, common_para_conf_),
           0,
           offsetof(Impl_, coeffient_gain_conf_) -
               offsetof(Impl_, common_para_conf_) +
               sizeof(Impl_::coeffient_gain_conf_));
}
LatPidConfig::~LatPidConfig() {
  // @@protoc_insertion_point(destructor:control.LatPidConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LatPidConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.common_para_conf_;
  delete _impl_.controller_content_conf_;
  delete _impl_.mean_filter_conf_;
  delete _impl_.tracking_differentiator_conf_;
  delete _impl_.data_transform_conf_;
  delete _impl_.post_process_conf_;
  delete _impl_.coeffient_gain_conf_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    LatPidConfig::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            LatPidConfig::IsInitializedImpl,
            &LatPidConfig::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<LatPidConfig>(),
            ::google::protobuf::Message::GetNewImpl<LatPidConfig>(),
            ::google::protobuf::Message::GetClearImpl<LatPidConfig>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<LatPidConfig>(),
                ::google::protobuf::Message::GetSerializeImpl<LatPidConfig>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(LatPidConfig, _impl_._cached_size_),
            false,
        },
        &LatPidConfig::kDescriptorMethods,
        &descriptor_table_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* LatPidConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 8, 0, 2> LatPidConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LatPidConfig, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    8,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_LatPidConfig_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::LatPidConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // required .control.PiffCoeffientGainConfig coeffient_gain_conf = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 6, 7, PROTOBUF_FIELD_OFFSET(LatPidConfig, _impl_.coeffient_gain_conf_)}},
    // required .control.PiffCommonParametersConfig common_para_conf = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LatPidConfig, _impl_.common_para_conf_)}},
    // required .control.PiffControllerContentConfig controller_content_conf = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(LatPidConfig, _impl_.controller_content_conf_)}},
    // repeated .control.PiffParameters piff_paras = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(LatPidConfig, _impl_.piff_paras_)}},
    // required .control.PiffMeanFilterConfig mean_filter_conf = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 3, PROTOBUF_FIELD_OFFSET(LatPidConfig, _impl_.mean_filter_conf_)}},
    // required .control.PiffTrackingDifferentiatorConfig tracking_differentiator_conf = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 3, 4, PROTOBUF_FIELD_OFFSET(LatPidConfig, _impl_.tracking_differentiator_conf_)}},
    // required .control.PiffDataTransformConfig data_transform_conf = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 4, 5, PROTOBUF_FIELD_OFFSET(LatPidConfig, _impl_.data_transform_conf_)}},
    // required .control.PiffPostProcessConfig post_process_conf = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 5, 6, PROTOBUF_FIELD_OFFSET(LatPidConfig, _impl_.post_process_conf_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .control.PiffCommonParametersConfig common_para_conf = 1;
    {PROTOBUF_FIELD_OFFSET(LatPidConfig, _impl_.common_para_conf_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .control.PiffControllerContentConfig controller_content_conf = 2;
    {PROTOBUF_FIELD_OFFSET(LatPidConfig, _impl_.controller_content_conf_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .control.PiffParameters piff_paras = 3;
    {PROTOBUF_FIELD_OFFSET(LatPidConfig, _impl_.piff_paras_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .control.PiffMeanFilterConfig mean_filter_conf = 4;
    {PROTOBUF_FIELD_OFFSET(LatPidConfig, _impl_.mean_filter_conf_), _Internal::kHasBitsOffset + 2, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .control.PiffTrackingDifferentiatorConfig tracking_differentiator_conf = 5;
    {PROTOBUF_FIELD_OFFSET(LatPidConfig, _impl_.tracking_differentiator_conf_), _Internal::kHasBitsOffset + 3, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .control.PiffDataTransformConfig data_transform_conf = 6;
    {PROTOBUF_FIELD_OFFSET(LatPidConfig, _impl_.data_transform_conf_), _Internal::kHasBitsOffset + 4, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .control.PiffPostProcessConfig post_process_conf = 7;
    {PROTOBUF_FIELD_OFFSET(LatPidConfig, _impl_.post_process_conf_), _Internal::kHasBitsOffset + 5, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // required .control.PiffCoeffientGainConfig coeffient_gain_conf = 8;
    {PROTOBUF_FIELD_OFFSET(LatPidConfig, _impl_.coeffient_gain_conf_), _Internal::kHasBitsOffset + 6, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::control::PiffCommonParametersConfig>()},
    {::_pbi::TcParser::GetTable<::control::PiffControllerContentConfig>()},
    {::_pbi::TcParser::GetTable<::control::PiffParameters>()},
    {::_pbi::TcParser::GetTable<::control::PiffMeanFilterConfig>()},
    {::_pbi::TcParser::GetTable<::control::PiffTrackingDifferentiatorConfig>()},
    {::_pbi::TcParser::GetTable<::control::PiffDataTransformConfig>()},
    {::_pbi::TcParser::GetTable<::control::PiffPostProcessConfig>()},
    {::_pbi::TcParser::GetTable<::control::PiffCoeffientGainConfig>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void LatPidConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:control.LatPidConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.piff_paras_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.common_para_conf_ != nullptr);
      _impl_.common_para_conf_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.controller_content_conf_ != nullptr);
      _impl_.controller_content_conf_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.mean_filter_conf_ != nullptr);
      _impl_.mean_filter_conf_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.tracking_differentiator_conf_ != nullptr);
      _impl_.tracking_differentiator_conf_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.data_transform_conf_ != nullptr);
      _impl_.data_transform_conf_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.post_process_conf_ != nullptr);
      _impl_.post_process_conf_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.coeffient_gain_conf_ != nullptr);
      _impl_.coeffient_gain_conf_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* LatPidConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.LatPidConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .control.PiffCommonParametersConfig common_para_conf = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.common_para_conf_, _impl_.common_para_conf_->GetCachedSize(), target, stream);
  }

  // required .control.PiffControllerContentConfig controller_content_conf = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.controller_content_conf_, _impl_.controller_content_conf_->GetCachedSize(), target, stream);
  }

  // repeated .control.PiffParameters piff_paras = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_piff_paras_size());
       i < n; i++) {
    const auto& repfield = this->_internal_piff_paras().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // required .control.PiffMeanFilterConfig mean_filter_conf = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.mean_filter_conf_, _impl_.mean_filter_conf_->GetCachedSize(), target, stream);
  }

  // required .control.PiffTrackingDifferentiatorConfig tracking_differentiator_conf = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.tracking_differentiator_conf_, _impl_.tracking_differentiator_conf_->GetCachedSize(), target, stream);
  }

  // required .control.PiffDataTransformConfig data_transform_conf = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *_impl_.data_transform_conf_, _impl_.data_transform_conf_->GetCachedSize(), target, stream);
  }

  // required .control.PiffPostProcessConfig post_process_conf = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *_impl_.post_process_conf_, _impl_.post_process_conf_->GetCachedSize(), target, stream);
  }

  // required .control.PiffCoeffientGainConfig coeffient_gain_conf = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *_impl_.coeffient_gain_conf_, _impl_.coeffient_gain_conf_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.LatPidConfig)
  return target;
}

::size_t LatPidConfig::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.LatPidConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // repeated .control.PiffParameters piff_paras = 3;
     {
      total_size += 1UL * this->_internal_piff_paras_size();
      for (const auto& msg : this->_internal_piff_paras()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // required .control.PiffCommonParametersConfig common_para_conf = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.common_para_conf_);
    }
    // required .control.PiffControllerContentConfig controller_content_conf = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.controller_content_conf_);
    }
    // required .control.PiffMeanFilterConfig mean_filter_conf = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.mean_filter_conf_);
    }
    // required .control.PiffTrackingDifferentiatorConfig tracking_differentiator_conf = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.tracking_differentiator_conf_);
    }
    // required .control.PiffDataTransformConfig data_transform_conf = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.data_transform_conf_);
    }
    // required .control.PiffPostProcessConfig post_process_conf = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.post_process_conf_);
    }
    // required .control.PiffCoeffientGainConfig coeffient_gain_conf = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.coeffient_gain_conf_);
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void LatPidConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LatPidConfig*>(&to_msg);
  auto& from = static_cast<const LatPidConfig&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:control.LatPidConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_piff_paras()->MergeFrom(
      from._internal_piff_paras());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.common_para_conf_ != nullptr);
      if (_this->_impl_.common_para_conf_ == nullptr) {
        _this->_impl_.common_para_conf_ =
            ::google::protobuf::Message::CopyConstruct<::control::PiffCommonParametersConfig>(arena, *from._impl_.common_para_conf_);
      } else {
        _this->_impl_.common_para_conf_->MergeFrom(*from._impl_.common_para_conf_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.controller_content_conf_ != nullptr);
      if (_this->_impl_.controller_content_conf_ == nullptr) {
        _this->_impl_.controller_content_conf_ =
            ::google::protobuf::Message::CopyConstruct<::control::PiffControllerContentConfig>(arena, *from._impl_.controller_content_conf_);
      } else {
        _this->_impl_.controller_content_conf_->MergeFrom(*from._impl_.controller_content_conf_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.mean_filter_conf_ != nullptr);
      if (_this->_impl_.mean_filter_conf_ == nullptr) {
        _this->_impl_.mean_filter_conf_ =
            ::google::protobuf::Message::CopyConstruct<::control::PiffMeanFilterConfig>(arena, *from._impl_.mean_filter_conf_);
      } else {
        _this->_impl_.mean_filter_conf_->MergeFrom(*from._impl_.mean_filter_conf_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.tracking_differentiator_conf_ != nullptr);
      if (_this->_impl_.tracking_differentiator_conf_ == nullptr) {
        _this->_impl_.tracking_differentiator_conf_ =
            ::google::protobuf::Message::CopyConstruct<::control::PiffTrackingDifferentiatorConfig>(arena, *from._impl_.tracking_differentiator_conf_);
      } else {
        _this->_impl_.tracking_differentiator_conf_->MergeFrom(*from._impl_.tracking_differentiator_conf_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.data_transform_conf_ != nullptr);
      if (_this->_impl_.data_transform_conf_ == nullptr) {
        _this->_impl_.data_transform_conf_ =
            ::google::protobuf::Message::CopyConstruct<::control::PiffDataTransformConfig>(arena, *from._impl_.data_transform_conf_);
      } else {
        _this->_impl_.data_transform_conf_->MergeFrom(*from._impl_.data_transform_conf_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.post_process_conf_ != nullptr);
      if (_this->_impl_.post_process_conf_ == nullptr) {
        _this->_impl_.post_process_conf_ =
            ::google::protobuf::Message::CopyConstruct<::control::PiffPostProcessConfig>(arena, *from._impl_.post_process_conf_);
      } else {
        _this->_impl_.post_process_conf_->MergeFrom(*from._impl_.post_process_conf_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.coeffient_gain_conf_ != nullptr);
      if (_this->_impl_.coeffient_gain_conf_ == nullptr) {
        _this->_impl_.coeffient_gain_conf_ =
            ::google::protobuf::Message::CopyConstruct<::control::PiffCoeffientGainConfig>(arena, *from._impl_.coeffient_gain_conf_);
      } else {
        _this->_impl_.coeffient_gain_conf_->MergeFrom(*from._impl_.coeffient_gain_conf_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LatPidConfig::CopyFrom(const LatPidConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.LatPidConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LatPidConfig::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const LatPidConfig&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this_._internal_piff_paras()))
    return false;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._impl_.common_para_conf_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._impl_.controller_content_conf_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._impl_.mean_filter_conf_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!this_._impl_.tracking_differentiator_conf_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (!this_._impl_.data_transform_conf_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (!this_._impl_.post_process_conf_->IsInitialized()) return false;
  }
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (!this_._impl_.coeffient_gain_conf_->IsInitialized()) return false;
  }
  return true;
}

void LatPidConfig::InternalSwap(LatPidConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.piff_paras_.InternalSwap(&other->_impl_.piff_paras_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LatPidConfig, _impl_.coeffient_gain_conf_)
      + sizeof(LatPidConfig::_impl_.coeffient_gain_conf_)
      - PROTOBUF_FIELD_OFFSET(LatPidConfig, _impl_.common_para_conf_)>(
          reinterpret_cast<char*>(&_impl_.common_para_conf_),
          reinterpret_cast<char*>(&other->_impl_.common_para_conf_));
}

::google::protobuf::Metadata LatPidConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace control
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_control_5fbase_2flat_5fpid_5fcontroller_5fconfig_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
