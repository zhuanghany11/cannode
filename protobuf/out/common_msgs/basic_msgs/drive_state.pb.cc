// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: common_msgs/basic_msgs/drive_state.proto
// Protobuf C++ Version: 5.28.0-dev

#include "common_msgs/basic_msgs/drive_state.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace control {
namespace common {

inline constexpr EngageAdvice::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        advice_{static_cast< ::control::common::EngageAdvice_Advice >(1)} {}

template <typename>
PROTOBUF_CONSTEXPR EngageAdvice::EngageAdvice(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EngageAdviceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EngageAdviceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EngageAdviceDefaultTypeInternal() {}
  union {
    EngageAdvice _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EngageAdviceDefaultTypeInternal _EngageAdvice_default_instance_;
}  // namespace common
}  // namespace control
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_common_5fmsgs_2fbasic_5fmsgs_2fdrive_5fstate_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_common_5fmsgs_2fbasic_5fmsgs_2fdrive_5fstate_2eproto = nullptr;
const ::uint32_t
    TableStruct_common_5fmsgs_2fbasic_5fmsgs_2fdrive_5fstate_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::control::common::EngageAdvice, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::control::common::EngageAdvice, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::control::common::EngageAdvice, _impl_.advice_),
        PROTOBUF_FIELD_OFFSET(::control::common::EngageAdvice, _impl_.reason_),
        1,
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::control::common::EngageAdvice)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::control::common::_EngageAdvice_default_instance_._instance,
};
const char descriptor_table_protodef_common_5fmsgs_2fbasic_5fmsgs_2fdrive_5fstate_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n(common_msgs/basic_msgs/drive_state.pro"
    "to\022\016control.common\"\316\001\n\014EngageAdvice\022D\n\006a"
    "dvice\030\001 \001(\0162#.control.common.EngageAdvic"
    "e.Advice:\017DISALLOW_ENGAGE\022\016\n\006reason\030\002 \001("
    "\t\"h\n\006Advice\022\013\n\007UNKNOWN\020\000\022\023\n\017DISALLOW_ENG"
    "AGE\020\001\022\023\n\017READY_TO_ENGAGE\020\002\022\020\n\014KEEP_ENGAG"
    "ED\020\003\022\025\n\021PREPARE_DISENGAGE\020\004"
};
static ::absl::once_flag descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fdrive_5fstate_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fdrive_5fstate_2eproto = {
    false,
    false,
    267,
    descriptor_table_protodef_common_5fmsgs_2fbasic_5fmsgs_2fdrive_5fstate_2eproto,
    "common_msgs/basic_msgs/drive_state.proto",
    &descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fdrive_5fstate_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_common_5fmsgs_2fbasic_5fmsgs_2fdrive_5fstate_2eproto::offsets,
    file_level_enum_descriptors_common_5fmsgs_2fbasic_5fmsgs_2fdrive_5fstate_2eproto,
    file_level_service_descriptors_common_5fmsgs_2fbasic_5fmsgs_2fdrive_5fstate_2eproto,
};
namespace control {
namespace common {
const ::google::protobuf::EnumDescriptor* EngageAdvice_Advice_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fdrive_5fstate_2eproto);
  return file_level_enum_descriptors_common_5fmsgs_2fbasic_5fmsgs_2fdrive_5fstate_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t EngageAdvice_Advice_internal_data_[] = {
    327680u, 0u, };
bool EngageAdvice_Advice_IsValid(int value) {
  return 0 <= value && value <= 4;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr EngageAdvice_Advice EngageAdvice::UNKNOWN;
constexpr EngageAdvice_Advice EngageAdvice::DISALLOW_ENGAGE;
constexpr EngageAdvice_Advice EngageAdvice::READY_TO_ENGAGE;
constexpr EngageAdvice_Advice EngageAdvice::KEEP_ENGAGED;
constexpr EngageAdvice_Advice EngageAdvice::PREPARE_DISENGAGE;
constexpr EngageAdvice_Advice EngageAdvice::Advice_MIN;
constexpr EngageAdvice_Advice EngageAdvice::Advice_MAX;
constexpr int EngageAdvice::Advice_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class EngageAdvice::_Internal {
 public:
  using HasBits =
      decltype(std::declval<EngageAdvice>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EngageAdvice, _impl_._has_bits_);
};

EngageAdvice::EngageAdvice(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:control.common.EngageAdvice)
}
inline PROTOBUF_NDEBUG_INLINE EngageAdvice::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::control::common::EngageAdvice& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        reason_(arena, from.reason_) {}

EngageAdvice::EngageAdvice(
    ::google::protobuf::Arena* arena,
    const EngageAdvice& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EngageAdvice* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.advice_ = from._impl_.advice_;

  // @@protoc_insertion_point(copy_constructor:control.common.EngageAdvice)
}
inline PROTOBUF_NDEBUG_INLINE EngageAdvice::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        reason_(arena),
        advice_{static_cast< ::control::common::EngageAdvice_Advice >(1)} {}

inline void EngageAdvice::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EngageAdvice::~EngageAdvice() {
  // @@protoc_insertion_point(destructor:control.common.EngageAdvice)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EngageAdvice::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.reason_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    EngageAdvice::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &EngageAdvice::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<EngageAdvice>(),
            ::google::protobuf::Message::GetNewImpl<EngageAdvice>(),
            ::google::protobuf::Message::GetClearImpl<EngageAdvice>(),
                ::google::protobuf::Message::GetByteSizeLongImpl<EngageAdvice>(),
                ::google::protobuf::Message::GetSerializeImpl<EngageAdvice>(),
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(EngageAdvice, _impl_._cached_size_),
            false,
        },
        &EngageAdvice::kDescriptorMethods,
        &descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fdrive_5fstate_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* EngageAdvice::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 42, 2> EngageAdvice::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EngageAdvice, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_EngageAdvice_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::control::common::EngageAdvice>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string reason = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(EngageAdvice, _impl_.reason_)}},
    // optional .control.common.EngageAdvice.Advice advice = 1 [default = DISALLOW_ENGAGE];
    {::_pbi::TcParser::FastEr0S1,
     {8, 1, 4, PROTOBUF_FIELD_OFFSET(EngageAdvice, _impl_.advice_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .control.common.EngageAdvice.Advice advice = 1 [default = DISALLOW_ENGAGE];
    {PROTOBUF_FIELD_OFFSET(EngageAdvice, _impl_.advice_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional string reason = 2;
    {PROTOBUF_FIELD_OFFSET(EngageAdvice, _impl_.reason_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {0, 5},
  }}, {{
    "\33\0\6\0\0\0\0\0"
    "control.common.EngageAdvice"
    "reason"
  }},
};

PROTOBUF_NOINLINE void EngageAdvice::Clear() {
// @@protoc_insertion_point(message_clear_start:control.common.EngageAdvice)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.reason_.ClearNonDefaultToEmpty();
    }
    _impl_.advice_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* EngageAdvice::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:control.common.EngageAdvice)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .control.common.EngageAdvice.Advice advice = 1 [default = DISALLOW_ENGAGE];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_advice(), target);
  }

  // optional string reason = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_reason();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "control.common.EngageAdvice.reason");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control.common.EngageAdvice)
  return target;
}

::size_t EngageAdvice::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:control.common.EngageAdvice)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string reason = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_reason());
    }
    // optional .control.common.EngageAdvice.Advice advice = 1 [default = DISALLOW_ENGAGE];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_advice());
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

void EngageAdvice::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EngageAdvice*>(&to_msg);
  auto& from = static_cast<const EngageAdvice&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:control.common.EngageAdvice)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_reason(from._internal_reason());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.advice_ = from._impl_.advice_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EngageAdvice::CopyFrom(const EngageAdvice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control.common.EngageAdvice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EngageAdvice::InternalSwap(EngageAdvice* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, &other->_impl_.reason_, arena);
  swap(_impl_.advice_, other->_impl_.advice_);
}

::google::protobuf::Metadata EngageAdvice::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace common
}  // namespace control
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_common_5fmsgs_2fbasic_5fmsgs_2fdrive_5fstate_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
