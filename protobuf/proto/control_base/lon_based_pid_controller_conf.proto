syntax = "proto2";

import "control_base/leadlag_conf.proto";
import "control_base/pid_conf.proto";
import "control_base/gain_scheduler_conf.proto";

package control.lonpid;

message FilterConf {
  optional int32 cutoff_freq = 1;
}

message LonBasedPidControllerConf{
  optional double ts = 1;  // longitudinal controller sampling time
  optional double brake_minimum_action = 2;
  optional double throttle_minimum_action = 3;
  optional double speed_controller_input_limit = 4;
  optional double station_error_limit = 5;
  optional double preview_window = 6;
  optional double standstill_acceleration = 7;

  optional PidConf station_pid_conf = 8;
  optional PidConf low_speed_pid_conf = 9;
  optional PidConf high_speed_pid_conf = 10;
  optional double switch_speed = 11;  // low/high speed controller switch speed
  optional PidConf reverse_station_pid_conf = 12;
  optional PidConf reverse_speed_pid_conf = 13;
  optional FilterConf pitch_angle_filter_conf = 14;
  optional LeadlagConf reverse_station_leadlag_conf = 15;
  optional LeadlagConf reverse_speed_leadlag_conf = 16;

  optional bool enable_reverse_leadlag_compensation = 18 [default = false];

  // low/high speed switch transition-window
  optional double switch_speed_window = 19 [default = 0.0];

  // from gflags and control_conf.proto
  optional bool enable_speed_station_preview = 20 [default = false];
  optional bool enable_slope_offset = 21 [default = false];
  optional double max_path_remain_when_stopped = 22 [default = 0.3];
  optional bool use_acceleration_lookup_limit = 23 [default = false];
  optional bool use_preview_reference_check = 24 [default = false];
  optional double steer_cmd_interval = 25 [default = 0.0];
  optional bool use_steering_check = 26 [default = false];
  optional double pedestrian_stop_time = 27 [default = 10.0];
  optional double standstill_narmal_acceleration = 28 [default = 0.0];
  optional double full_stop_long_time = 29 [default = 0.0];

  // pid parameter in pit
  optional PidConf pit_station_pid_conf = 30;
  optional PidConf pit_speed_pid_conf = 31;
  optional double pit_replan_check_time = 32 [default = 14.0];
  optional int32 pit_replan_check_count = 33 [default = 3];

  optional int32 epb_change_count = 34 [default = 2];

  optional double stop_gain_acceleration = 35;

  optional bool use_vehicle_epb = 36 [default = false];

  optional double full_stop_path_remain_gain = 37;

  optional int32 use_opposite_slope_compensation = 38 [default = 1];

  optional control.GainScheduler station_error_gain_scheduler = 39;

  optional control.GainScheduler speed_error_accel_pgain_scheduler = 40;

  optional control.GainScheduler speed_error_accel_igain_scheduler = 41;

  optional control.GainScheduler speed_error_accel_dgain_scheduler = 42;

  optional control.GainScheduler speed_error_small_pgain_scheduler = 43;

  optional control.GainScheduler speed_error_small_igain_scheduler = 44;

  optional control.GainScheduler speed_error_small_dgain_scheduler = 45;

  optional control.GainScheduler speed_error_decel_pgain_scheduler = 46;

  optional control.GainScheduler speed_error_decel_igain_scheduler = 47;

  optional control.GainScheduler speed_error_decel_dgain_scheduler = 48;

  optional double speed_error_gate = 49;

  optional PidConf speed_pid_conf = 50;

  optional double acceleration_jerk_limit_up = 51;

  optional double acceleration_jerk_limit_low = 52;
  
  optional control.GainScheduler slope_offset_compensation_gain_scheduler = 53;

  optional double brake_cmd_slope = 54;

  optional double brake_cmd_bias = 55;

  optional double throttle_cmd_slope = 56;

  optional double throttle_cmd_bias = 57;
}
